{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EPSILON_FLOAT32 = 1e-7;\nexports.EPSILON_FLOAT16 = 1e-4;\n/** Convenient class for storing tensor-related data. */\n\nvar DataStorage =\n/** @class */\nfunction () {\n  function DataStorage(backend, dataMover) {\n    this.backend = backend;\n    this.dataMover = dataMover;\n    this.data = new WeakMap();\n    this.dataIdsCount = 0;\n  }\n\n  DataStorage.prototype.get = function (dataId) {\n    if (!this.data.has(dataId)) {\n      this.dataMover.moveData(this.backend, dataId);\n    }\n\n    return this.data.get(dataId);\n  };\n\n  DataStorage.prototype.set = function (dataId, value) {\n    this.dataIdsCount++;\n    this.data.set(dataId, value);\n  };\n\n  DataStorage.prototype.has = function (dataId) {\n    return this.data.has(dataId);\n  };\n\n  DataStorage.prototype.delete = function (dataId) {\n    this.dataIdsCount--;\n    return this.data.delete(dataId);\n  };\n\n  DataStorage.prototype.numDataIds = function () {\n    return this.dataIdsCount;\n  };\n\n  return DataStorage;\n}();\n\nexports.DataStorage = DataStorage;\n/**\n * The interface that defines the kernels that should be implemented when\n * adding a new backend. New backends don't need to implement every one of the\n * methods, this can be done gradually (throw an error for unimplemented\n * methods).\n */\n\nvar KernelBackend =\n/** @class */\nfunction () {\n  function KernelBackend() {}\n\n  KernelBackend.prototype.time = function (f) {\n    return notYetImplemented('time');\n  };\n\n  KernelBackend.prototype.read = function (dataId) {\n    return notYetImplemented('read');\n  };\n\n  KernelBackend.prototype.readSync = function (dataId) {\n    return notYetImplemented('readSync');\n  };\n\n  KernelBackend.prototype.numDataIds = function () {\n    return notYetImplemented('numDataIds');\n  };\n\n  KernelBackend.prototype.disposeData = function (dataId) {\n    return notYetImplemented('disposeData');\n  };\n\n  KernelBackend.prototype.write = function (values, shape, dtype) {\n    return notYetImplemented('write');\n  };\n\n  KernelBackend.prototype.move = function (dataId, values, shape, dtype) {\n    return notYetImplemented('move');\n  };\n\n  KernelBackend.prototype.memory = function () {\n    return notYetImplemented('memory');\n  };\n  /** Returns the highest precision for floats in bits (e.g. 16 or 32) */\n\n\n  KernelBackend.prototype.floatPrecision = function () {\n    return notYetImplemented('floatPrecision');\n  };\n  /** Returns the smallest representable number.  */\n\n\n  KernelBackend.prototype.epsilon = function () {\n    return this.floatPrecision() === 32 ? exports.EPSILON_FLOAT32 : exports.EPSILON_FLOAT16;\n  };\n\n  KernelBackend.prototype.batchMatMul = function (a, b, transposeA, transposeB) {\n    return notYetImplemented('batchMatMul');\n  };\n\n  KernelBackend.prototype.fusedBatchMatMul = function (_a) {\n    var a = _a.a,\n        b = _a.b,\n        transposeA = _a.transposeA,\n        transposeB = _a.transposeB,\n        bias = _a.bias,\n        activation = _a.activation,\n        preluActivationWeights = _a.preluActivationWeights;\n    return notYetImplemented('fusedBatchMatMul');\n  };\n\n  KernelBackend.prototype.slice = function (x, begin, size) {\n    return notYetImplemented('slice');\n  };\n\n  KernelBackend.prototype.stridedSlice = function (x, begin, end, strides) {\n    return notYetImplemented('stridedSlice');\n  };\n\n  KernelBackend.prototype.unstack = function (x, axis) {\n    return notYetImplemented('unstack');\n  };\n\n  KernelBackend.prototype.reverse = function (a, axis) {\n    return notYetImplemented('reverse');\n  };\n\n  KernelBackend.prototype.concat = function (tensors, axis) {\n    return notYetImplemented('concat');\n  };\n\n  KernelBackend.prototype.neg = function (a) {\n    return notYetImplemented('neg');\n  };\n\n  KernelBackend.prototype.add = function (a, b) {\n    return notYetImplemented('add');\n  };\n\n  KernelBackend.prototype.addN = function (tensors) {\n    return notYetImplemented('addN');\n  };\n\n  KernelBackend.prototype.subtract = function (a, b) {\n    return notYetImplemented('subtract');\n  };\n\n  KernelBackend.prototype.multiply = function (a, b) {\n    return notYetImplemented('multiply');\n  };\n\n  KernelBackend.prototype.realDivide = function (a, b) {\n    return notYetImplemented('realDivide');\n  };\n\n  KernelBackend.prototype.floorDiv = function (a, b) {\n    return notYetImplemented('floorDiv');\n  };\n\n  KernelBackend.prototype.sum = function (x, axes) {\n    return notYetImplemented('sum');\n  };\n\n  KernelBackend.prototype.prod = function (x, axes) {\n    return notYetImplemented('prod');\n  };\n\n  KernelBackend.prototype.unsortedSegmentSum = function (x, segmentIds, numSegments) {\n    return notYetImplemented('unsortedSegmentSum');\n  };\n\n  KernelBackend.prototype.argMin = function (x, axis) {\n    return notYetImplemented('argMin');\n  };\n\n  KernelBackend.prototype.argMax = function (x, axis) {\n    return notYetImplemented('argMax');\n  };\n\n  KernelBackend.prototype.equal = function (a, b) {\n    return notYetImplemented('equal');\n  };\n\n  KernelBackend.prototype.notEqual = function (a, b) {\n    return notYetImplemented('notEqual');\n  };\n\n  KernelBackend.prototype.less = function (a, b) {\n    return notYetImplemented('less');\n  };\n\n  KernelBackend.prototype.lessEqual = function (a, b) {\n    return notYetImplemented('lessEqual');\n  };\n\n  KernelBackend.prototype.greater = function (a, b) {\n    return notYetImplemented('greater');\n  };\n\n  KernelBackend.prototype.greaterEqual = function (a, b) {\n    return notYetImplemented('greaterEqual');\n  };\n\n  KernelBackend.prototype.logicalNot = function (a) {\n    return notYetImplemented('logicalNot');\n  };\n\n  KernelBackend.prototype.logicalAnd = function (a, b) {\n    return notYetImplemented('logicalAnd');\n  };\n\n  KernelBackend.prototype.logicalOr = function (a, b) {\n    return notYetImplemented('logicalOr');\n  };\n\n  KernelBackend.prototype.where = function (condition) {\n    return notYetImplemented('where');\n  };\n\n  KernelBackend.prototype.select = function (condition, a, b) {\n    return notYetImplemented('select');\n  };\n\n  KernelBackend.prototype.topk = function (x, k, sorted) {\n    return notYetImplemented('topk');\n  };\n\n  KernelBackend.prototype.min = function (x, axes) {\n    return notYetImplemented('min');\n  };\n\n  KernelBackend.prototype.minimum = function (a, b) {\n    return notYetImplemented('minimum');\n  };\n\n  KernelBackend.prototype.mod = function (a, b) {\n    return notYetImplemented('mod');\n  };\n\n  KernelBackend.prototype.max = function (x, axes) {\n    return notYetImplemented('max');\n  };\n\n  KernelBackend.prototype.maximum = function (a, b) {\n    return notYetImplemented('maximum');\n  };\n\n  KernelBackend.prototype.all = function (x, axes) {\n    return notYetImplemented('all');\n  };\n\n  KernelBackend.prototype.any = function (x, axes) {\n    return notYetImplemented('any');\n  };\n\n  KernelBackend.prototype.squaredDifference = function (a, b) {\n    return notYetImplemented('squaredDifference');\n  };\n\n  KernelBackend.prototype.ceil = function (x) {\n    return notYetImplemented('ceil');\n  };\n\n  KernelBackend.prototype.floor = function (x) {\n    return notYetImplemented('floor');\n  };\n\n  KernelBackend.prototype.round = function (x) {\n    return notYetImplemented('round');\n  };\n\n  KernelBackend.prototype.sign = function (x) {\n    return notYetImplemented('sign');\n  };\n\n  KernelBackend.prototype.isNaN = function (x) {\n    return notYetImplemented('isNaN');\n  };\n\n  KernelBackend.prototype.isInf = function (x) {\n    return notYetImplemented('isInf');\n  };\n\n  KernelBackend.prototype.isFinite = function (x) {\n    return notYetImplemented('isFinite');\n  };\n\n  KernelBackend.prototype.pow = function (a, b) {\n    return notYetImplemented('pow');\n  };\n\n  KernelBackend.prototype.exp = function (x) {\n    return notYetImplemented('exp');\n  };\n\n  KernelBackend.prototype.expm1 = function (x) {\n    return notYetImplemented('expm1');\n  };\n\n  KernelBackend.prototype.log = function (x) {\n    return notYetImplemented('log');\n  };\n\n  KernelBackend.prototype.log1p = function (x) {\n    return notYetImplemented('log1p');\n  };\n\n  KernelBackend.prototype.sqrt = function (x) {\n    return notYetImplemented('sqrt');\n  };\n\n  KernelBackend.prototype.rsqrt = function (x) {\n    return notYetImplemented('rsqrt');\n  };\n\n  KernelBackend.prototype.square = function (x) {\n    return notYetImplemented('square');\n  };\n\n  KernelBackend.prototype.reciprocal = function (x) {\n    return notYetImplemented('reciprocal');\n  };\n\n  KernelBackend.prototype.relu = function (x) {\n    return notYetImplemented('relu');\n  };\n\n  KernelBackend.prototype.relu6 = function (x) {\n    return notYetImplemented('relu6');\n  };\n\n  KernelBackend.prototype.prelu = function (x, a) {\n    return notYetImplemented('prelu');\n  };\n\n  KernelBackend.prototype.elu = function (x) {\n    return notYetImplemented('elu');\n  };\n\n  KernelBackend.prototype.eluDer = function (dy, y) {\n    return notYetImplemented('eluDer');\n  };\n\n  KernelBackend.prototype.selu = function (x) {\n    return notYetImplemented('selu');\n  };\n\n  KernelBackend.prototype.int = function (x) {\n    return notYetImplemented('int');\n  };\n\n  KernelBackend.prototype.clip = function (x, min, max) {\n    return notYetImplemented('clip');\n  };\n\n  KernelBackend.prototype.abs = function (x) {\n    return notYetImplemented('abs');\n  };\n\n  KernelBackend.prototype.complexAbs = function (x) {\n    return notYetImplemented('complexAbs');\n  };\n\n  KernelBackend.prototype.sigmoid = function (x) {\n    return notYetImplemented('sigmoid');\n  };\n\n  KernelBackend.prototype.softplus = function (x) {\n    return notYetImplemented('softplus');\n  };\n\n  KernelBackend.prototype.sin = function (x) {\n    return notYetImplemented('sin');\n  };\n\n  KernelBackend.prototype.cos = function (x) {\n    return notYetImplemented('cos');\n  };\n\n  KernelBackend.prototype.tan = function (x) {\n    return notYetImplemented('tan');\n  };\n\n  KernelBackend.prototype.asin = function (x) {\n    return notYetImplemented('asin');\n  };\n\n  KernelBackend.prototype.acos = function (x) {\n    return notYetImplemented('acos');\n  };\n\n  KernelBackend.prototype.atan = function (x) {\n    return notYetImplemented('atan');\n  };\n\n  KernelBackend.prototype.atan2 = function (a, b) {\n    return notYetImplemented('atan2');\n  };\n\n  KernelBackend.prototype.sinh = function (x) {\n    return notYetImplemented('sinh');\n  };\n\n  KernelBackend.prototype.cosh = function (x) {\n    return notYetImplemented('cosh');\n  };\n\n  KernelBackend.prototype.tanh = function (x) {\n    return notYetImplemented('tanh');\n  };\n\n  KernelBackend.prototype.asinh = function (x) {\n    return notYetImplemented('asinh');\n  };\n\n  KernelBackend.prototype.acosh = function (x) {\n    return notYetImplemented('acosh');\n  };\n\n  KernelBackend.prototype.atanh = function (x) {\n    return notYetImplemented('atanh');\n  };\n\n  KernelBackend.prototype.erf = function (x) {\n    return notYetImplemented('erf');\n  };\n\n  KernelBackend.prototype.step = function (x, alpha) {\n    return notYetImplemented('step');\n  };\n\n  KernelBackend.prototype.fusedConv2d = function (_a) {\n    var input = _a.input,\n        filter = _a.filter,\n        convInfo = _a.convInfo,\n        bias = _a.bias,\n        activation = _a.activation,\n        preluActivationWeights = _a.preluActivationWeights;\n    return notYetImplemented('fusedConv2d');\n  };\n\n  KernelBackend.prototype.conv2d = function (x, filter, convInfo) {\n    return notYetImplemented('conv2d');\n  };\n\n  KernelBackend.prototype.conv2dDerInput = function (dy, filter, convInfo) {\n    return notYetImplemented('conv2dDerInput');\n  };\n\n  KernelBackend.prototype.conv2dDerFilter = function (x, dY, convInfo) {\n    return notYetImplemented('conv2dDerFilter');\n  };\n\n  KernelBackend.prototype.fusedDepthwiseConv2D = function (_a) {\n    var input = _a.input,\n        filter = _a.filter,\n        convInfo = _a.convInfo,\n        bias = _a.bias,\n        activation = _a.activation,\n        preluActivationWeights = _a.preluActivationWeights;\n    return notYetImplemented('fusedDepthwiseConv2D');\n  };\n\n  KernelBackend.prototype.depthwiseConv2D = function (input, filter, convInfo) {\n    return notYetImplemented('depthwiseConv2D');\n  };\n\n  KernelBackend.prototype.depthwiseConv2DDerInput = function (dy, filter, convInfo) {\n    return notYetImplemented('depthwiseConv2DDerInput');\n  };\n\n  KernelBackend.prototype.depthwiseConv2DDerFilter = function (x, dY, convInfo) {\n    return notYetImplemented('depthwiseConv2DDerFilter');\n  };\n\n  KernelBackend.prototype.conv3d = function (x, filter, convInfo) {\n    return notYetImplemented('conv3d');\n  };\n\n  KernelBackend.prototype.conv3dDerInput = function (dy, filter, convInfo) {\n    return notYetImplemented('conv3dDerInput');\n  };\n\n  KernelBackend.prototype.conv3dDerFilter = function (x, dY, convInfo) {\n    return notYetImplemented('conv3dDerFilter');\n  };\n\n  KernelBackend.prototype.maxPool = function (x, convInfo) {\n    return notYetImplemented('maxPool');\n  };\n\n  KernelBackend.prototype.maxPoolBackprop = function (dy, x, y, convInfo) {\n    return notYetImplemented('maxPoolBackprop');\n  };\n\n  KernelBackend.prototype.avgPool = function (x, convInfo) {\n    return notYetImplemented('avgPool');\n  };\n\n  KernelBackend.prototype.avgPoolBackprop = function (dy, x, convInfo) {\n    return notYetImplemented('avgPoolBackprop');\n  };\n\n  KernelBackend.prototype.avgPool3d = function (x, convInfo) {\n    return notYetImplemented('avgPool3d');\n  };\n\n  KernelBackend.prototype.avgPool3dBackprop = function (dy, x, convInfo) {\n    return notYetImplemented('avgPool3dBackprop');\n  };\n\n  KernelBackend.prototype.maxPool3d = function (x, convInfo) {\n    return notYetImplemented('maxPool3d');\n  };\n\n  KernelBackend.prototype.maxPool3dBackprop = function (dy, x, y, convInfo) {\n    return notYetImplemented('maxPool3dBackprop');\n  };\n\n  KernelBackend.prototype.reshape = function (x, shape) {\n    return notYetImplemented('reshape');\n  };\n\n  KernelBackend.prototype.cast = function (x, dtype) {\n    return notYetImplemented('cast');\n  };\n\n  KernelBackend.prototype.tile = function (x, reps) {\n    return notYetImplemented('tile');\n  };\n\n  KernelBackend.prototype.pad = function (x, paddings, constantValue) {\n    return notYetImplemented('pad');\n  };\n\n  KernelBackend.prototype.transpose = function (x, perm) {\n    return notYetImplemented('transpose');\n  };\n\n  KernelBackend.prototype.gather = function (x, indices, axis) {\n    return notYetImplemented('gather');\n  };\n\n  KernelBackend.prototype.gatherND = function (x, indices) {\n    return notYetImplemented('gatherND');\n  };\n\n  KernelBackend.prototype.scatterND = function (indices, updates, shape) {\n    return notYetImplemented('scatterND');\n  };\n\n  KernelBackend.prototype.batchToSpaceND = function (x, blockShape, crops) {\n    return notYetImplemented('batchToSpaceND');\n  };\n\n  KernelBackend.prototype.spaceToBatchND = function (x, blockShape, paddings) {\n    return notYetImplemented('spaceToBatchND');\n  };\n\n  KernelBackend.prototype.resizeBilinear = function (x, newHeight, newWidth, alignCorners) {\n    return notYetImplemented('resizeBilinear');\n  };\n\n  KernelBackend.prototype.resizeBilinearBackprop = function (dy, x, alignCorners) {\n    return notYetImplemented('resizeBilinearBackprop');\n  };\n\n  KernelBackend.prototype.resizeNearestNeighbor = function (x, newHEight, newWidth, alignCorners) {\n    return notYetImplemented('resizeNearestNeighbor');\n  };\n\n  KernelBackend.prototype.resizeNearestNeighborBackprop = function (dy, x, alignCorners) {\n    return notYetImplemented('resizeNearestNeighborBackprop');\n  };\n\n  KernelBackend.prototype.batchNormalization = function (x, mean, variance, varianceEpsilon, scale, offset) {\n    return notYetImplemented('batchNormalization');\n  };\n\n  KernelBackend.prototype.localResponseNormalization4D = function (x, radius, bias, alpha, beta) {\n    return notYetImplemented('localResponseNormalization4D');\n  };\n\n  KernelBackend.prototype.LRNGrad = function (dy, inputImage, outputImage, radius, bias, alpha, beta) {\n    return notYetImplemented('LRNGrad');\n  };\n\n  KernelBackend.prototype.multinomial = function (logits, normalized, numSamples, seed) {\n    return notYetImplemented('multinomial');\n  };\n\n  KernelBackend.prototype.oneHot = function (indices, depth, onValue, offValue) {\n    return notYetImplemented('oneHot');\n  };\n\n  KernelBackend.prototype.cumsum = function (x, axis, exclusive, reverse) {\n    return notYetImplemented('cumsum');\n  };\n\n  KernelBackend.prototype.nonMaxSuppression = function (boxes, scores, maxOutputSize, iouThreshold, scoreThreshold) {\n    return notYetImplemented('nonMaxSuppression');\n  };\n\n  KernelBackend.prototype.fft = function (x) {\n    return notYetImplemented('fft');\n  };\n\n  KernelBackend.prototype.ifft = function (x) {\n    return notYetImplemented('ifft');\n  };\n\n  KernelBackend.prototype.complex = function (real, imag) {\n    return notYetImplemented('complex');\n  };\n\n  KernelBackend.prototype.real = function (input) {\n    return notYetImplemented('real');\n  };\n\n  KernelBackend.prototype.imag = function (input) {\n    return notYetImplemented('imag');\n  };\n\n  KernelBackend.prototype.cropAndResize = function (image, boxes, boxIndex, cropSize, method, extrapolationValue) {\n    return notYetImplemented('cropAndResize');\n  };\n\n  KernelBackend.prototype.depthToSpace = function (x, blockSize, dataFormat) {\n    return notYetImplemented('depthToSpace');\n  }; // Aligns with the \"SplitV\" kernel in TensorFlow.\n\n\n  KernelBackend.prototype.split = function (value, sizeSplits, axis) {\n    return notYetImplemented('split');\n  };\n\n  KernelBackend.prototype.sparseToDense = function (sparseIndices, sparseValues, outputShape, defaultValue) {\n    return notYetImplemented('sparseToDense');\n  };\n\n  KernelBackend.prototype.diag = function (x) {\n    return notYetImplemented('diag');\n  };\n\n  KernelBackend.prototype.fill = function (shape, value, dtype) {\n    return notYetImplemented('fill');\n  };\n\n  KernelBackend.prototype.onesLike = function (x) {\n    return notYetImplemented('onesLike');\n  };\n\n  KernelBackend.prototype.zerosLike = function (x) {\n    return notYetImplemented('zerosLike');\n  };\n\n  KernelBackend.prototype.linspace = function (start, stop, num) {\n    return notYetImplemented('linspace');\n  };\n\n  KernelBackend.prototype.dispose = function () {\n    return notYetImplemented('dispose');\n  };\n\n  return KernelBackend;\n}();\n\nexports.KernelBackend = KernelBackend;\n\nfunction notYetImplemented(kernelName) {\n  throw new Error(\"'\" + kernelName + \"' not yet implemented or not found in the registry. \" + \"Did you forget to import the kernel?\");\n}","map":{"version":3,"sources":["../../src/backends/backend.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EPSILON_FLOAT32 = 1e-7;\nexports.EPSILON_FLOAT16 = 1e-4;\n/** Convenient class for storing tensor-related data. */\nvar DataStorage = /** @class */ (function () {\n    function DataStorage(backend, dataMover) {\n        this.backend = backend;\n        this.dataMover = dataMover;\n        this.data = new WeakMap();\n        this.dataIdsCount = 0;\n    }\n    DataStorage.prototype.get = function (dataId) {\n        if (!this.data.has(dataId)) {\n            this.dataMover.moveData(this.backend, dataId);\n        }\n        return this.data.get(dataId);\n    };\n    DataStorage.prototype.set = function (dataId, value) {\n        this.dataIdsCount++;\n        this.data.set(dataId, value);\n    };\n    DataStorage.prototype.has = function (dataId) {\n        return this.data.has(dataId);\n    };\n    DataStorage.prototype.delete = function (dataId) {\n        this.dataIdsCount--;\n        return this.data.delete(dataId);\n    };\n    DataStorage.prototype.numDataIds = function () {\n        return this.dataIdsCount;\n    };\n    return DataStorage;\n}());\nexports.DataStorage = DataStorage;\n/**\n * The interface that defines the kernels that should be implemented when\n * adding a new backend. New backends don't need to implement every one of the\n * methods, this can be done gradually (throw an error for unimplemented\n * methods).\n */\nvar KernelBackend = /** @class */ (function () {\n    function KernelBackend() {\n    }\n    KernelBackend.prototype.time = function (f) {\n        return notYetImplemented('time');\n    };\n    KernelBackend.prototype.read = function (dataId) {\n        return notYetImplemented('read');\n    };\n    KernelBackend.prototype.readSync = function (dataId) {\n        return notYetImplemented('readSync');\n    };\n    KernelBackend.prototype.numDataIds = function () {\n        return notYetImplemented('numDataIds');\n    };\n    KernelBackend.prototype.disposeData = function (dataId) {\n        return notYetImplemented('disposeData');\n    };\n    KernelBackend.prototype.write = function (values, shape, dtype) {\n        return notYetImplemented('write');\n    };\n    KernelBackend.prototype.move = function (dataId, values, shape, dtype) {\n        return notYetImplemented('move');\n    };\n    KernelBackend.prototype.memory = function () {\n        return notYetImplemented('memory');\n    };\n    /** Returns the highest precision for floats in bits (e.g. 16 or 32) */\n    KernelBackend.prototype.floatPrecision = function () {\n        return notYetImplemented('floatPrecision');\n    };\n    /** Returns the smallest representable number.  */\n    KernelBackend.prototype.epsilon = function () {\n        return this.floatPrecision() === 32 ? exports.EPSILON_FLOAT32 : exports.EPSILON_FLOAT16;\n    };\n    KernelBackend.prototype.batchMatMul = function (a, b, transposeA, transposeB) {\n        return notYetImplemented('batchMatMul');\n    };\n    KernelBackend.prototype.fusedBatchMatMul = function (_a) {\n        var a = _a.a, b = _a.b, transposeA = _a.transposeA, transposeB = _a.transposeB, bias = _a.bias, activation = _a.activation, preluActivationWeights = _a.preluActivationWeights;\n        return notYetImplemented('fusedBatchMatMul');\n    };\n    KernelBackend.prototype.slice = function (x, begin, size) {\n        return notYetImplemented('slice');\n    };\n    KernelBackend.prototype.stridedSlice = function (x, begin, end, strides) {\n        return notYetImplemented('stridedSlice');\n    };\n    KernelBackend.prototype.unstack = function (x, axis) {\n        return notYetImplemented('unstack');\n    };\n    KernelBackend.prototype.reverse = function (a, axis) {\n        return notYetImplemented('reverse');\n    };\n    KernelBackend.prototype.concat = function (tensors, axis) {\n        return notYetImplemented('concat');\n    };\n    KernelBackend.prototype.neg = function (a) {\n        return notYetImplemented('neg');\n    };\n    KernelBackend.prototype.add = function (a, b) {\n        return notYetImplemented('add');\n    };\n    KernelBackend.prototype.addN = function (tensors) {\n        return notYetImplemented('addN');\n    };\n    KernelBackend.prototype.subtract = function (a, b) {\n        return notYetImplemented('subtract');\n    };\n    KernelBackend.prototype.multiply = function (a, b) {\n        return notYetImplemented('multiply');\n    };\n    KernelBackend.prototype.realDivide = function (a, b) {\n        return notYetImplemented('realDivide');\n    };\n    KernelBackend.prototype.floorDiv = function (a, b) {\n        return notYetImplemented('floorDiv');\n    };\n    KernelBackend.prototype.sum = function (x, axes) {\n        return notYetImplemented('sum');\n    };\n    KernelBackend.prototype.prod = function (x, axes) {\n        return notYetImplemented('prod');\n    };\n    KernelBackend.prototype.unsortedSegmentSum = function (x, segmentIds, numSegments) {\n        return notYetImplemented('unsortedSegmentSum');\n    };\n    KernelBackend.prototype.argMin = function (x, axis) {\n        return notYetImplemented('argMin');\n    };\n    KernelBackend.prototype.argMax = function (x, axis) {\n        return notYetImplemented('argMax');\n    };\n    KernelBackend.prototype.equal = function (a, b) {\n        return notYetImplemented('equal');\n    };\n    KernelBackend.prototype.notEqual = function (a, b) {\n        return notYetImplemented('notEqual');\n    };\n    KernelBackend.prototype.less = function (a, b) {\n        return notYetImplemented('less');\n    };\n    KernelBackend.prototype.lessEqual = function (a, b) {\n        return notYetImplemented('lessEqual');\n    };\n    KernelBackend.prototype.greater = function (a, b) {\n        return notYetImplemented('greater');\n    };\n    KernelBackend.prototype.greaterEqual = function (a, b) {\n        return notYetImplemented('greaterEqual');\n    };\n    KernelBackend.prototype.logicalNot = function (a) {\n        return notYetImplemented('logicalNot');\n    };\n    KernelBackend.prototype.logicalAnd = function (a, b) {\n        return notYetImplemented('logicalAnd');\n    };\n    KernelBackend.prototype.logicalOr = function (a, b) {\n        return notYetImplemented('logicalOr');\n    };\n    KernelBackend.prototype.where = function (condition) {\n        return notYetImplemented('where');\n    };\n    KernelBackend.prototype.select = function (condition, a, b) {\n        return notYetImplemented('select');\n    };\n    KernelBackend.prototype.topk = function (x, k, sorted) {\n        return notYetImplemented('topk');\n    };\n    KernelBackend.prototype.min = function (x, axes) {\n        return notYetImplemented('min');\n    };\n    KernelBackend.prototype.minimum = function (a, b) {\n        return notYetImplemented('minimum');\n    };\n    KernelBackend.prototype.mod = function (a, b) {\n        return notYetImplemented('mod');\n    };\n    KernelBackend.prototype.max = function (x, axes) {\n        return notYetImplemented('max');\n    };\n    KernelBackend.prototype.maximum = function (a, b) {\n        return notYetImplemented('maximum');\n    };\n    KernelBackend.prototype.all = function (x, axes) {\n        return notYetImplemented('all');\n    };\n    KernelBackend.prototype.any = function (x, axes) {\n        return notYetImplemented('any');\n    };\n    KernelBackend.prototype.squaredDifference = function (a, b) {\n        return notYetImplemented('squaredDifference');\n    };\n    KernelBackend.prototype.ceil = function (x) {\n        return notYetImplemented('ceil');\n    };\n    KernelBackend.prototype.floor = function (x) {\n        return notYetImplemented('floor');\n    };\n    KernelBackend.prototype.round = function (x) {\n        return notYetImplemented('round');\n    };\n    KernelBackend.prototype.sign = function (x) {\n        return notYetImplemented('sign');\n    };\n    KernelBackend.prototype.isNaN = function (x) {\n        return notYetImplemented('isNaN');\n    };\n    KernelBackend.prototype.isInf = function (x) {\n        return notYetImplemented('isInf');\n    };\n    KernelBackend.prototype.isFinite = function (x) {\n        return notYetImplemented('isFinite');\n    };\n    KernelBackend.prototype.pow = function (a, b) {\n        return notYetImplemented('pow');\n    };\n    KernelBackend.prototype.exp = function (x) {\n        return notYetImplemented('exp');\n    };\n    KernelBackend.prototype.expm1 = function (x) {\n        return notYetImplemented('expm1');\n    };\n    KernelBackend.prototype.log = function (x) {\n        return notYetImplemented('log');\n    };\n    KernelBackend.prototype.log1p = function (x) {\n        return notYetImplemented('log1p');\n    };\n    KernelBackend.prototype.sqrt = function (x) {\n        return notYetImplemented('sqrt');\n    };\n    KernelBackend.prototype.rsqrt = function (x) {\n        return notYetImplemented('rsqrt');\n    };\n    KernelBackend.prototype.square = function (x) {\n        return notYetImplemented('square');\n    };\n    KernelBackend.prototype.reciprocal = function (x) {\n        return notYetImplemented('reciprocal');\n    };\n    KernelBackend.prototype.relu = function (x) {\n        return notYetImplemented('relu');\n    };\n    KernelBackend.prototype.relu6 = function (x) {\n        return notYetImplemented('relu6');\n    };\n    KernelBackend.prototype.prelu = function (x, a) {\n        return notYetImplemented('prelu');\n    };\n    KernelBackend.prototype.elu = function (x) {\n        return notYetImplemented('elu');\n    };\n    KernelBackend.prototype.eluDer = function (dy, y) {\n        return notYetImplemented('eluDer');\n    };\n    KernelBackend.prototype.selu = function (x) {\n        return notYetImplemented('selu');\n    };\n    KernelBackend.prototype.int = function (x) {\n        return notYetImplemented('int');\n    };\n    KernelBackend.prototype.clip = function (x, min, max) {\n        return notYetImplemented('clip');\n    };\n    KernelBackend.prototype.abs = function (x) {\n        return notYetImplemented('abs');\n    };\n    KernelBackend.prototype.complexAbs = function (x) {\n        return notYetImplemented('complexAbs');\n    };\n    KernelBackend.prototype.sigmoid = function (x) {\n        return notYetImplemented('sigmoid');\n    };\n    KernelBackend.prototype.softplus = function (x) {\n        return notYetImplemented('softplus');\n    };\n    KernelBackend.prototype.sin = function (x) {\n        return notYetImplemented('sin');\n    };\n    KernelBackend.prototype.cos = function (x) {\n        return notYetImplemented('cos');\n    };\n    KernelBackend.prototype.tan = function (x) {\n        return notYetImplemented('tan');\n    };\n    KernelBackend.prototype.asin = function (x) {\n        return notYetImplemented('asin');\n    };\n    KernelBackend.prototype.acos = function (x) {\n        return notYetImplemented('acos');\n    };\n    KernelBackend.prototype.atan = function (x) {\n        return notYetImplemented('atan');\n    };\n    KernelBackend.prototype.atan2 = function (a, b) {\n        return notYetImplemented('atan2');\n    };\n    KernelBackend.prototype.sinh = function (x) {\n        return notYetImplemented('sinh');\n    };\n    KernelBackend.prototype.cosh = function (x) {\n        return notYetImplemented('cosh');\n    };\n    KernelBackend.prototype.tanh = function (x) {\n        return notYetImplemented('tanh');\n    };\n    KernelBackend.prototype.asinh = function (x) {\n        return notYetImplemented('asinh');\n    };\n    KernelBackend.prototype.acosh = function (x) {\n        return notYetImplemented('acosh');\n    };\n    KernelBackend.prototype.atanh = function (x) {\n        return notYetImplemented('atanh');\n    };\n    KernelBackend.prototype.erf = function (x) {\n        return notYetImplemented('erf');\n    };\n    KernelBackend.prototype.step = function (x, alpha) {\n        return notYetImplemented('step');\n    };\n    KernelBackend.prototype.fusedConv2d = function (_a) {\n        var input = _a.input, filter = _a.filter, convInfo = _a.convInfo, bias = _a.bias, activation = _a.activation, preluActivationWeights = _a.preluActivationWeights;\n        return notYetImplemented('fusedConv2d');\n    };\n    KernelBackend.prototype.conv2d = function (x, filter, convInfo) {\n        return notYetImplemented('conv2d');\n    };\n    KernelBackend.prototype.conv2dDerInput = function (dy, filter, convInfo) {\n        return notYetImplemented('conv2dDerInput');\n    };\n    KernelBackend.prototype.conv2dDerFilter = function (x, dY, convInfo) {\n        return notYetImplemented('conv2dDerFilter');\n    };\n    KernelBackend.prototype.fusedDepthwiseConv2D = function (_a) {\n        var input = _a.input, filter = _a.filter, convInfo = _a.convInfo, bias = _a.bias, activation = _a.activation, preluActivationWeights = _a.preluActivationWeights;\n        return notYetImplemented('fusedDepthwiseConv2D');\n    };\n    KernelBackend.prototype.depthwiseConv2D = function (input, filter, convInfo) {\n        return notYetImplemented('depthwiseConv2D');\n    };\n    KernelBackend.prototype.depthwiseConv2DDerInput = function (dy, filter, convInfo) {\n        return notYetImplemented('depthwiseConv2DDerInput');\n    };\n    KernelBackend.prototype.depthwiseConv2DDerFilter = function (x, dY, convInfo) {\n        return notYetImplemented('depthwiseConv2DDerFilter');\n    };\n    KernelBackend.prototype.conv3d = function (x, filter, convInfo) {\n        return notYetImplemented('conv3d');\n    };\n    KernelBackend.prototype.conv3dDerInput = function (dy, filter, convInfo) {\n        return notYetImplemented('conv3dDerInput');\n    };\n    KernelBackend.prototype.conv3dDerFilter = function (x, dY, convInfo) {\n        return notYetImplemented('conv3dDerFilter');\n    };\n    KernelBackend.prototype.maxPool = function (x, convInfo) {\n        return notYetImplemented('maxPool');\n    };\n    KernelBackend.prototype.maxPoolBackprop = function (dy, x, y, convInfo) {\n        return notYetImplemented('maxPoolBackprop');\n    };\n    KernelBackend.prototype.avgPool = function (x, convInfo) {\n        return notYetImplemented('avgPool');\n    };\n    KernelBackend.prototype.avgPoolBackprop = function (dy, x, convInfo) {\n        return notYetImplemented('avgPoolBackprop');\n    };\n    KernelBackend.prototype.avgPool3d = function (x, convInfo) {\n        return notYetImplemented('avgPool3d');\n    };\n    KernelBackend.prototype.avgPool3dBackprop = function (dy, x, convInfo) {\n        return notYetImplemented('avgPool3dBackprop');\n    };\n    KernelBackend.prototype.maxPool3d = function (x, convInfo) {\n        return notYetImplemented('maxPool3d');\n    };\n    KernelBackend.prototype.maxPool3dBackprop = function (dy, x, y, convInfo) {\n        return notYetImplemented('maxPool3dBackprop');\n    };\n    KernelBackend.prototype.reshape = function (x, shape) {\n        return notYetImplemented('reshape');\n    };\n    KernelBackend.prototype.cast = function (x, dtype) {\n        return notYetImplemented('cast');\n    };\n    KernelBackend.prototype.tile = function (x, reps) {\n        return notYetImplemented('tile');\n    };\n    KernelBackend.prototype.pad = function (x, paddings, constantValue) {\n        return notYetImplemented('pad');\n    };\n    KernelBackend.prototype.transpose = function (x, perm) {\n        return notYetImplemented('transpose');\n    };\n    KernelBackend.prototype.gather = function (x, indices, axis) {\n        return notYetImplemented('gather');\n    };\n    KernelBackend.prototype.gatherND = function (x, indices) {\n        return notYetImplemented('gatherND');\n    };\n    KernelBackend.prototype.scatterND = function (indices, updates, shape) {\n        return notYetImplemented('scatterND');\n    };\n    KernelBackend.prototype.batchToSpaceND = function (x, blockShape, crops) {\n        return notYetImplemented('batchToSpaceND');\n    };\n    KernelBackend.prototype.spaceToBatchND = function (x, blockShape, paddings) {\n        return notYetImplemented('spaceToBatchND');\n    };\n    KernelBackend.prototype.resizeBilinear = function (x, newHeight, newWidth, alignCorners) {\n        return notYetImplemented('resizeBilinear');\n    };\n    KernelBackend.prototype.resizeBilinearBackprop = function (dy, x, alignCorners) {\n        return notYetImplemented('resizeBilinearBackprop');\n    };\n    KernelBackend.prototype.resizeNearestNeighbor = function (x, newHEight, newWidth, alignCorners) {\n        return notYetImplemented('resizeNearestNeighbor');\n    };\n    KernelBackend.prototype.resizeNearestNeighborBackprop = function (dy, x, alignCorners) {\n        return notYetImplemented('resizeNearestNeighborBackprop');\n    };\n    KernelBackend.prototype.batchNormalization = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        return notYetImplemented('batchNormalization');\n    };\n    KernelBackend.prototype.localResponseNormalization4D = function (x, radius, bias, alpha, beta) {\n        return notYetImplemented('localResponseNormalization4D');\n    };\n    KernelBackend.prototype.LRNGrad = function (dy, inputImage, outputImage, radius, bias, alpha, beta) {\n        return notYetImplemented('LRNGrad');\n    };\n    KernelBackend.prototype.multinomial = function (logits, normalized, numSamples, seed) {\n        return notYetImplemented('multinomial');\n    };\n    KernelBackend.prototype.oneHot = function (indices, depth, onValue, offValue) {\n        return notYetImplemented('oneHot');\n    };\n    KernelBackend.prototype.cumsum = function (x, axis, exclusive, reverse) {\n        return notYetImplemented('cumsum');\n    };\n    KernelBackend.prototype.nonMaxSuppression = function (boxes, scores, maxOutputSize, iouThreshold, scoreThreshold) {\n        return notYetImplemented('nonMaxSuppression');\n    };\n    KernelBackend.prototype.fft = function (x) {\n        return notYetImplemented('fft');\n    };\n    KernelBackend.prototype.ifft = function (x) {\n        return notYetImplemented('ifft');\n    };\n    KernelBackend.prototype.complex = function (real, imag) {\n        return notYetImplemented('complex');\n    };\n    KernelBackend.prototype.real = function (input) {\n        return notYetImplemented('real');\n    };\n    KernelBackend.prototype.imag = function (input) {\n        return notYetImplemented('imag');\n    };\n    KernelBackend.prototype.cropAndResize = function (image, boxes, boxIndex, cropSize, method, extrapolationValue) {\n        return notYetImplemented('cropAndResize');\n    };\n    KernelBackend.prototype.depthToSpace = function (x, blockSize, dataFormat) {\n        return notYetImplemented('depthToSpace');\n    };\n    // Aligns with the \"SplitV\" kernel in TensorFlow.\n    KernelBackend.prototype.split = function (value, sizeSplits, axis) {\n        return notYetImplemented('split');\n    };\n    KernelBackend.prototype.sparseToDense = function (sparseIndices, sparseValues, outputShape, defaultValue) {\n        return notYetImplemented('sparseToDense');\n    };\n    KernelBackend.prototype.diag = function (x) {\n        return notYetImplemented('diag');\n    };\n    KernelBackend.prototype.fill = function (shape, value, dtype) {\n        return notYetImplemented('fill');\n    };\n    KernelBackend.prototype.onesLike = function (x) {\n        return notYetImplemented('onesLike');\n    };\n    KernelBackend.prototype.zerosLike = function (x) {\n        return notYetImplemented('zerosLike');\n    };\n    KernelBackend.prototype.linspace = function (start, stop, num) {\n        return notYetImplemented('linspace');\n    };\n    KernelBackend.prototype.dispose = function () {\n        return notYetImplemented('dispose');\n    };\n    return KernelBackend;\n}());\nexports.KernelBackend = KernelBackend;\nfunction notYetImplemented(kernelName) {\n    throw new Error(\"'\" + kernelName + \"' not yet implemented or not found in the registry. \" +\n        \"Did you forget to import the kernel?\");\n}\n//# sourceMappingURL=backend.js.map"]},"metadata":{},"sourceType":"script"}