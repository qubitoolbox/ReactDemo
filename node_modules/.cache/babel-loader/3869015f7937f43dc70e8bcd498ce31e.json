{"ast":null,"code":"import { bandSpace } from 'vega-scale';\nimport { isArray, isFunction, isString } from 'vega-util';\nexport function getScale(name, ctx) {\n  let s;\n  return isFunction(name) ? name : isString(name) ? (s = ctx.scales[name]) && s.value : undefined;\n}\nexport function range(name, group) {\n  const s = getScale(name, (group || this).context);\n  return s && s.range ? s.range() : [];\n}\nexport function domain(name, group) {\n  const s = getScale(name, (group || this).context);\n  return s ? s.domain() : [];\n}\nexport function bandwidth(name, group) {\n  const s = getScale(name, (group || this).context);\n  return s && s.bandwidth ? s.bandwidth() : 0;\n}\nexport function bandspace(count, paddingInner, paddingOuter) {\n  return bandSpace(count || 0, paddingInner || 0, paddingOuter || 0);\n}\nexport function copy(name, group) {\n  const s = getScale(name, (group || this).context);\n  return s ? s.copy() : undefined;\n}\nexport function scale(name, value, group) {\n  const s = getScale(name, (group || this).context);\n  return s && value !== undefined ? s(value) : undefined;\n}\nexport function invert(name, range, group) {\n  const s = getScale(name, (group || this).context);\n  return !s ? undefined : isArray(range) ? (s.invertRange || s.invert)(range) : (s.invert || s.invertExtent)(range);\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-functions/src/scale.js"],"names":["bandSpace","isArray","isFunction","isString","getScale","name","ctx","s","scales","value","undefined","range","group","context","domain","bandwidth","bandspace","count","paddingInner","paddingOuter","copy","scale","invert","invertRange","invertExtent"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,YAAxB;AACA,SAAQC,OAAR,EAAiBC,UAAjB,EAA6BC,QAA7B,QAA4C,WAA5C;AAEA,OAAO,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,GAAxB,EAA6B;AAClC,MAAIC,CAAJ;AACA,SAAOL,UAAU,CAACG,IAAD,CAAV,GAAmBA,IAAnB,GACHF,QAAQ,CAACE,IAAD,CAAR,GAAiB,CAACE,CAAC,GAAGD,GAAG,CAACE,MAAJ,CAAWH,IAAX,CAAL,KAA0BE,CAAC,CAACE,KAA7C,GACAC,SAFJ;AAGD;AAED,OAAO,SAASC,KAAT,CAAeN,IAAf,EAAqBO,KAArB,EAA4B;AACjC,QAAML,CAAC,GAAGH,QAAQ,CAACC,IAAD,EAAO,CAACO,KAAK,IAAI,IAAV,EAAgBC,OAAvB,CAAlB;AACA,SAAON,CAAC,IAAIA,CAAC,CAACI,KAAP,GAAeJ,CAAC,CAACI,KAAF,EAAf,GAA2B,EAAlC;AACD;AAED,OAAO,SAASG,MAAT,CAAgBT,IAAhB,EAAsBO,KAAtB,EAA6B;AAClC,QAAML,CAAC,GAAGH,QAAQ,CAACC,IAAD,EAAO,CAACO,KAAK,IAAI,IAAV,EAAgBC,OAAvB,CAAlB;AACA,SAAON,CAAC,GAAGA,CAAC,CAACO,MAAF,EAAH,GAAgB,EAAxB;AACD;AAED,OAAO,SAASC,SAAT,CAAmBV,IAAnB,EAAyBO,KAAzB,EAAgC;AACrC,QAAML,CAAC,GAAGH,QAAQ,CAACC,IAAD,EAAO,CAACO,KAAK,IAAI,IAAV,EAAgBC,OAAvB,CAAlB;AACA,SAAON,CAAC,IAAIA,CAAC,CAACQ,SAAP,GAAmBR,CAAC,CAACQ,SAAF,EAAnB,GAAmC,CAA1C;AACD;AAED,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,YAA1B,EAAwCC,YAAxC,EAAsD;AAC3D,SAAOnB,SAAS,CAACiB,KAAK,IAAI,CAAV,EAAaC,YAAY,IAAI,CAA7B,EAAgCC,YAAY,IAAI,CAAhD,CAAhB;AACD;AAED,OAAO,SAASC,IAAT,CAAcf,IAAd,EAAoBO,KAApB,EAA2B;AAChC,QAAML,CAAC,GAAGH,QAAQ,CAACC,IAAD,EAAO,CAACO,KAAK,IAAI,IAAV,EAAgBC,OAAvB,CAAlB;AACA,SAAON,CAAC,GAAGA,CAAC,CAACa,IAAF,EAAH,GAAcV,SAAtB;AACD;AAED,OAAO,SAASW,KAAT,CAAehB,IAAf,EAAqBI,KAArB,EAA4BG,KAA5B,EAAmC;AACxC,QAAML,CAAC,GAAGH,QAAQ,CAACC,IAAD,EAAO,CAACO,KAAK,IAAI,IAAV,EAAgBC,OAAvB,CAAlB;AACA,SAAON,CAAC,IAAIE,KAAK,KAAKC,SAAf,GAA2BH,CAAC,CAACE,KAAD,CAA5B,GAAsCC,SAA7C;AACD;AAED,OAAO,SAASY,MAAT,CAAgBjB,IAAhB,EAAsBM,KAAtB,EAA6BC,KAA7B,EAAoC;AACzC,QAAML,CAAC,GAAGH,QAAQ,CAACC,IAAD,EAAO,CAACO,KAAK,IAAI,IAAV,EAAgBC,OAAvB,CAAlB;AACA,SAAO,CAACN,CAAD,GAAKG,SAAL,GACHT,OAAO,CAACU,KAAD,CAAP,GAAiB,CAACJ,CAAC,CAACgB,WAAF,IAAiBhB,CAAC,CAACe,MAApB,EAA4BX,KAA5B,CAAjB,GACA,CAACJ,CAAC,CAACe,MAAF,IAAYf,CAAC,CAACiB,YAAf,EAA6Bb,KAA7B,CAFJ;AAGD","sourcesContent":["import {bandSpace} from 'vega-scale';\nimport {isArray, isFunction, isString} from 'vega-util';\n\nexport function getScale(name, ctx) {\n  let s;\n  return isFunction(name) ? name\n    : isString(name) ? (s = ctx.scales[name]) && s.value\n    : undefined;\n}\n\nexport function range(name, group) {\n  const s = getScale(name, (group || this).context);\n  return s && s.range ? s.range() : [];\n}\n\nexport function domain(name, group) {\n  const s = getScale(name, (group || this).context);\n  return s ? s.domain() : [];\n}\n\nexport function bandwidth(name, group) {\n  const s = getScale(name, (group || this).context);\n  return s && s.bandwidth ? s.bandwidth() : 0;\n}\n\nexport function bandspace(count, paddingInner, paddingOuter) {\n  return bandSpace(count || 0, paddingInner || 0, paddingOuter || 0);\n}\n\nexport function copy(name, group) {\n  const s = getScale(name, (group || this).context);\n  return s ? s.copy() : undefined;\n}\n\nexport function scale(name, value, group) {\n  const s = getScale(name, (group || this).context);\n  return s && value !== undefined ? s(value) : undefined;\n}\n\nexport function invert(name, range, group) {\n  const s = getScale(name, (group || this).context);\n  return !s ? undefined\n    : isArray(range) ? (s.invertRange || s.invert)(range)\n    : (s.invert || s.invertExtent)(range);\n}\n"]},"metadata":{},"sourceType":"module"}