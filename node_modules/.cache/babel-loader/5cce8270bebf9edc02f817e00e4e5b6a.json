{"ast":null,"code":"import { bisect } from 'd3-array';\nimport { tickFormat } from 'd3-scale';\nimport { peek } from 'vega-util';\nimport { numbers } from './numbers';\nimport { slice } from './slice';\nexport function scaleBinOrdinal() {\n  var domain = [],\n      range = [];\n\n  function scale(x) {\n    return x == null || x !== x ? undefined : range[(bisect(domain, x) - 1) % range.length];\n  }\n\n  scale.domain = function (_) {\n    if (arguments.length) {\n      domain = numbers(_);\n      return scale;\n    } else {\n      return domain.slice();\n    }\n  };\n\n  scale.range = function (_) {\n    if (arguments.length) {\n      range = slice.call(_);\n      return scale;\n    } else {\n      return range.slice();\n    }\n  };\n\n  scale.tickFormat = function (count, specifier) {\n    return tickFormat(domain[0], peek(domain), count == null ? 10 : count, specifier);\n  };\n\n  scale.copy = function () {\n    return scaleBinOrdinal().domain(scale.domain()).range(scale.range());\n  };\n\n  return scale;\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-wordcloud/node_modules/vega-scale/src/scales/scaleBinOrdinal.js"],"names":["bisect","tickFormat","peek","numbers","slice","scaleBinOrdinal","domain","range","scale","x","undefined","length","_","arguments","call","count","specifier","copy"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,UAArB;AACA,SAAQC,UAAR,QAAyB,UAAzB;AACA,SAAQC,IAAR,QAAmB,WAAnB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,KAAR,QAAoB,SAApB;AAEA,OAAO,SAASC,eAAT,GAA2B;AAChC,MAAIC,MAAM,GAAG,EAAb;AAAA,MACIC,KAAK,GAAG,EADZ;;AAGA,WAASC,KAAT,CAAeC,CAAf,EAAkB;AAChB,WAAOA,CAAC,IAAI,IAAL,IAAaA,CAAC,KAAKA,CAAnB,GACHC,SADG,GAEHH,KAAK,CAAC,CAACP,MAAM,CAACM,MAAD,EAASG,CAAT,CAAN,GAAoB,CAArB,IAA0BF,KAAK,CAACI,MAAjC,CAFT;AAGD;;AAEDH,EAAAA,KAAK,CAACF,MAAN,GAAe,UAASM,CAAT,EAAY;AACzB,QAAIC,SAAS,CAACF,MAAd,EAAsB;AACpBL,MAAAA,MAAM,GAAGH,OAAO,CAACS,CAAD,CAAhB;AACA,aAAOJ,KAAP;AACD,KAHD,MAGO;AACL,aAAOF,MAAM,CAACF,KAAP,EAAP;AACD;AACF,GAPD;;AASAI,EAAAA,KAAK,CAACD,KAAN,GAAc,UAASK,CAAT,EAAY;AACxB,QAAIC,SAAS,CAACF,MAAd,EAAsB;AACpBJ,MAAAA,KAAK,GAAGH,KAAK,CAACU,IAAN,CAAWF,CAAX,CAAR;AACA,aAAOJ,KAAP;AACD,KAHD,MAGO;AACL,aAAOD,KAAK,CAACH,KAAN,EAAP;AACD;AACF,GAPD;;AASAI,EAAAA,KAAK,CAACP,UAAN,GAAmB,UAASc,KAAT,EAAgBC,SAAhB,EAA2B;AAC5C,WAAOf,UAAU,CAACK,MAAM,CAAC,CAAD,CAAP,EAAYJ,IAAI,CAACI,MAAD,CAAhB,EAA0BS,KAAK,IAAI,IAAT,GAAgB,EAAhB,GAAqBA,KAA/C,EAAsDC,SAAtD,CAAjB;AACD,GAFD;;AAIAR,EAAAA,KAAK,CAACS,IAAN,GAAa,YAAW;AACtB,WAAOZ,eAAe,GAAGC,MAAlB,CAAyBE,KAAK,CAACF,MAAN,EAAzB,EAAyCC,KAAzC,CAA+CC,KAAK,CAACD,KAAN,EAA/C,CAAP;AACD,GAFD;;AAIA,SAAOC,KAAP;AACD","sourcesContent":["import {bisect} from 'd3-array';\nimport {tickFormat} from 'd3-scale';\nimport {peek} from 'vega-util';\nimport {numbers} from './numbers';\nimport {slice} from './slice';\n\nexport function scaleBinOrdinal() {\n  var domain = [],\n      range = [];\n\n  function scale(x) {\n    return x == null || x !== x\n      ? undefined\n      : range[(bisect(domain, x) - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (arguments.length) {\n      domain = numbers(_);\n      return scale;\n    } else {\n      return domain.slice();\n    }\n  };\n\n  scale.range = function(_) {\n    if (arguments.length) {\n      range = slice.call(_);\n      return scale;\n    } else {\n      return range.slice();\n    }\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain[0], peek(domain), count == null ? 10 : count, specifier);\n  };\n\n  scale.copy = function() {\n    return scaleBinOrdinal().domain(scale.domain()).range(scale.range());\n  };\n\n  return scale;\n}"]},"metadata":{},"sourceType":"module"}