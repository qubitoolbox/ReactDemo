{"ast":null,"code":"import { points } from './points';\nimport rSquared from './r-squared';\nexport default function (data, x, y) {\n  const [xv, yv, ux, uy] = points(data, x, y),\n        n = xv.length;\n  let X2 = 0,\n      X3 = 0,\n      X4 = 0,\n      XY = 0,\n      X2Y = 0,\n      i,\n      dx,\n      dy,\n      x2;\n\n  for (i = 0; i < n;) {\n    dx = xv[i];\n    dy = yv[i++];\n    x2 = dx * dx;\n    X2 += (x2 - X2) / i;\n    X3 += (x2 * dx - X3) / i;\n    X4 += (x2 * x2 - X4) / i;\n    XY += (dx * dy - XY) / i;\n    X2Y += (x2 * dy - X2Y) / i;\n  }\n\n  const X2X2 = X4 - X2 * X2,\n        d = X2 * X2X2 - X3 * X3,\n        a = (X2Y * X2 - XY * X3) / d,\n        b = (XY * X2X2 - X2Y * X3) / d,\n        c = -a * X2,\n        predict = x => {\n    x = x - ux;\n    return a * x * x + b * x + c + uy;\n  }; // transform coefficients back from mean-centered space\n\n\n  return {\n    coef: [c - b * ux + a * ux * ux + uy, b - 2 * a * ux, a],\n    predict: predict,\n    rSquared: rSquared(data, x, y, uy, predict)\n  };\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-statistics/src/regression/quad.js"],"names":["points","rSquared","data","x","y","xv","yv","ux","uy","n","length","X2","X3","X4","XY","X2Y","i","dx","dy","x2","X2X2","d","a","b","c","predict","coef"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,UAArB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,eAAe,UAASC,IAAT,EAAeC,CAAf,EAAkBC,CAAlB,EAAqB;AAClC,QAAM,CAACC,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,IAAmBR,MAAM,CAACE,IAAD,EAAOC,CAAP,EAAUC,CAAV,CAA/B;AAAA,QACMK,CAAC,GAAGJ,EAAE,CAACK,MADb;AAGA,MAAIC,EAAE,GAAG,CAAT;AAAA,MAAYC,EAAE,GAAG,CAAjB;AAAA,MAAoBC,EAAE,GAAG,CAAzB;AAAA,MAA4BC,EAAE,GAAG,CAAjC;AAAA,MAAoCC,GAAG,GAAG,CAA1C;AAAA,MACIC,CADJ;AAAA,MACOC,EADP;AAAA,MACWC,EADX;AAAA,MACeC,EADf;;AAGA,OAAKH,CAAC,GAAC,CAAP,EAAUA,CAAC,GAACP,CAAZ,GAAgB;AACdQ,IAAAA,EAAE,GAAGZ,EAAE,CAACW,CAAD,CAAP;AACAE,IAAAA,EAAE,GAAGZ,EAAE,CAACU,CAAC,EAAF,CAAP;AACAG,IAAAA,EAAE,GAAGF,EAAE,GAAGA,EAAV;AACAN,IAAAA,EAAE,IAAI,CAACQ,EAAE,GAAGR,EAAN,IAAYK,CAAlB;AACAJ,IAAAA,EAAE,IAAI,CAACO,EAAE,GAAGF,EAAL,GAAUL,EAAX,IAAiBI,CAAvB;AACAH,IAAAA,EAAE,IAAI,CAACM,EAAE,GAAGA,EAAL,GAAUN,EAAX,IAAiBG,CAAvB;AACAF,IAAAA,EAAE,IAAI,CAACG,EAAE,GAAGC,EAAL,GAAUJ,EAAX,IAAiBE,CAAvB;AACAD,IAAAA,GAAG,IAAI,CAACI,EAAE,GAAGD,EAAL,GAAUH,GAAX,IAAkBC,CAAzB;AACD;;AAED,QAAMI,IAAI,GAAGP,EAAE,GAAIF,EAAE,GAAGA,EAAxB;AAAA,QACMU,CAAC,GAAIV,EAAE,GAAGS,IAAL,GAAYR,EAAE,GAAGA,EAD5B;AAAA,QAEMU,CAAC,GAAG,CAACP,GAAG,GAAGJ,EAAN,GAAWG,EAAE,GAAGF,EAAjB,IAAuBS,CAFjC;AAAA,QAGME,CAAC,GAAG,CAACT,EAAE,GAAGM,IAAL,GAAYL,GAAG,GAAGH,EAAnB,IAAyBS,CAHnC;AAAA,QAIMG,CAAC,GAAG,CAACF,CAAD,GAAKX,EAJf;AAAA,QAKMc,OAAO,GAAGtB,CAAC,IAAI;AACbA,IAAAA,CAAC,GAAGA,CAAC,GAAGI,EAAR;AACA,WAAOe,CAAC,GAAGnB,CAAJ,GAAQA,CAAR,GAAYoB,CAAC,GAAGpB,CAAhB,GAAoBqB,CAApB,GAAwBhB,EAA/B;AACD,GARP,CAlBkC,CA4BlC;;;AACA,SAAO;AACLkB,IAAAA,IAAI,EAAE,CACJF,CAAC,GAAGD,CAAC,GAAGhB,EAAR,GAAae,CAAC,GAAGf,EAAJ,GAASA,EAAtB,GAA2BC,EADvB,EAEJe,CAAC,GAAG,IAAID,CAAJ,GAAQf,EAFR,EAGJe,CAHI,CADD;AAMLG,IAAAA,OAAO,EAAEA,OANJ;AAOLxB,IAAAA,QAAQ,EAAEA,QAAQ,CAACC,IAAD,EAAOC,CAAP,EAAUC,CAAV,EAAaI,EAAb,EAAiBiB,OAAjB;AAPb,GAAP;AASD","sourcesContent":["import {points} from './points';\nimport rSquared from './r-squared';\n\nexport default function(data, x, y) {\n  const [xv, yv, ux, uy] = points(data, x, y),\n        n = xv.length;\n\n  let X2 = 0, X3 = 0, X4 = 0, XY = 0, X2Y = 0,\n      i, dx, dy, x2;\n\n  for (i=0; i<n;) {\n    dx = xv[i];\n    dy = yv[i++];\n    x2 = dx * dx;\n    X2 += (x2 - X2) / i;\n    X3 += (x2 * dx - X3) / i;\n    X4 += (x2 * x2 - X4) / i;\n    XY += (dx * dy - XY) / i;\n    X2Y += (x2 * dy - X2Y) / i;\n  }\n\n  const X2X2 = X4 - (X2 * X2),\n        d = (X2 * X2X2 - X3 * X3),\n        a = (X2Y * X2 - XY * X3) / d,\n        b = (XY * X2X2 - X2Y * X3) / d,\n        c = -a * X2,\n        predict = x => {\n          x = x - ux;\n          return a * x * x + b * x + c + uy;\n        };\n\n  // transform coefficients back from mean-centered space\n  return {\n    coef: [\n      c - b * ux + a * ux * ux + uy,\n      b - 2 * a * ux,\n      a\n    ],\n    predict: predict,\n    rSquared: rSquared(data, x, y, uy, predict)\n  };\n}\n"]},"metadata":{},"sourceType":"module"}