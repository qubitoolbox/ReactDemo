{"ast":null,"code":"export function getAxisConfig(property, config, channel, orient, scaleType) {\n  var _a; // configTypes to loop, starting from higher precedence\n\n\n  const configTypes = [...(scaleType === 'band' ? ['axisBand'] : []), channel === 'x' ? 'axisX' : 'axisY', // axisTop, axisBottom, ...\n  ...(orient ? ['axis' + orient.substr(0, 1).toUpperCase() + orient.substr(1)] : []), 'axis'];\n\n  for (const configType of configTypes) {\n    if (((_a = config[configType]) === null || _a === void 0 ? void 0 : _a[property]) !== undefined) {\n      return config[configType][property];\n    }\n  }\n\n  return undefined;\n}","map":{"version":3,"sources":["../../../../src/compile/axis/config.ts"],"names":[],"mappings":"AAIA,OAAM,SAAU,aAAV,CACJ,QADI,EAEJ,MAFI,EAGJ,OAHI,EAIJ,MAJI,EAKJ,SALI,EAKgB;SAAA,CAEpB;;;AACA,QAAM,WAAW,GAAG,CAClB,IAAI,SAAS,KAAK,MAAd,GAAuB,CAAC,UAAD,CAAvB,GAAsC,EAA1C,CADkB,EAElB,OAAO,KAAK,GAAZ,GAAkB,OAAlB,GAA4B,OAFV,EAIlB;AACA,MAAI,MAAM,GAAG,CAAC,SAAS,MAAM,CAAC,MAAP,CAAc,CAAd,EAAiB,CAAjB,EAAoB,WAApB,EAAT,GAA6C,MAAM,CAAC,MAAP,CAAc,CAAd,CAA9C,CAAH,GAAqE,EAA/E,CALkB,EAMlB,MANkB,CAApB;;AAQA,OAAK,MAAM,UAAX,IAAyB,WAAzB,EAAsC;AACpC,QAAI,CAAA,CAAA,EAAA,GAAA,MAAM,CAAC,UAAD,CAAN,MAAkB,IAAlB,IAAkB,EAAA,KAAA,KAAA,CAAlB,GAAkB,KAAA,CAAlB,GAAkB,EAAA,CAAG,QAAH,CAAlB,MAAmC,SAAvC,EAAkD;AAChD,aAAO,MAAM,CAAC,UAAD,CAAN,CAAmB,QAAnB,CAAP;AACD;AACF;;AAED,SAAO,SAAP;AACD","sourcesContent":["import {PositionScaleChannel} from '../../channel';\nimport {Config} from '../../config';\nimport {ScaleType} from '../../scale';\n\nexport function getAxisConfig(\n  property: string,\n  config: Config,\n  channel: PositionScaleChannel,\n  orient: string,\n  scaleType: ScaleType\n) {\n  // configTypes to loop, starting from higher precedence\n  const configTypes = [\n    ...(scaleType === 'band' ? ['axisBand'] : []),\n    channel === 'x' ? 'axisX' : 'axisY',\n\n    // axisTop, axisBottom, ...\n    ...(orient ? ['axis' + orient.substr(0, 1).toUpperCase() + orient.substr(1)] : []),\n    'axis'\n  ];\n  for (const configType of configTypes) {\n    if (config[configType]?.[property] !== undefined) {\n      return config[configType][property];\n    }\n  }\n\n  return undefined;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}