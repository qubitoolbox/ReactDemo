{"ast":null,"code":"import { truthy } from 'vega-util';\nexport function data(name) {\n  const data = this.context.data[name];\n  return data ? data.values.value : [];\n}\nexport function indata(name, field, value) {\n  const index = this.context.data[name]['index:' + field],\n        entry = index ? index.value.get(value) : undefined;\n  return entry ? entry.count : entry;\n}\nexport function setdata(name, tuples) {\n  const df = this.context.dataflow,\n        data = this.context.data[name],\n        input = data.input;\n  df.pulse(input, df.changeset().remove(truthy).insert(tuples));\n  return 1;\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-functions/src/data.js"],"names":["truthy","data","name","context","values","value","indata","field","index","entry","get","undefined","count","setdata","tuples","df","dataflow","input","pulse","changeset","remove","insert"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,WAArB;AAEA,OAAO,SAASC,IAAT,CAAcC,IAAd,EAAoB;AACzB,QAAMD,IAAI,GAAG,KAAKE,OAAL,CAAaF,IAAb,CAAkBC,IAAlB,CAAb;AACA,SAAOD,IAAI,GAAGA,IAAI,CAACG,MAAL,CAAYC,KAAf,GAAuB,EAAlC;AACD;AAED,OAAO,SAASC,MAAT,CAAgBJ,IAAhB,EAAsBK,KAAtB,EAA6BF,KAA7B,EAAoC;AACzC,QAAMG,KAAK,GAAG,KAAKL,OAAL,CAAaF,IAAb,CAAkBC,IAAlB,EAAwB,WAAWK,KAAnC,CAAd;AAAA,QACME,KAAK,GAAGD,KAAK,GAAGA,KAAK,CAACH,KAAN,CAAYK,GAAZ,CAAgBL,KAAhB,CAAH,GAA4BM,SAD/C;AAEA,SAAOF,KAAK,GAAGA,KAAK,CAACG,KAAT,GAAiBH,KAA7B;AACD;AAED,OAAO,SAASI,OAAT,CAAiBX,IAAjB,EAAuBY,MAAvB,EAA+B;AACpC,QAAMC,EAAE,GAAG,KAAKZ,OAAL,CAAaa,QAAxB;AAAA,QACMf,IAAI,GAAG,KAAKE,OAAL,CAAaF,IAAb,CAAkBC,IAAlB,CADb;AAAA,QAEMe,KAAK,GAAGhB,IAAI,CAACgB,KAFnB;AAIAF,EAAAA,EAAE,CAACG,KAAH,CAASD,KAAT,EAAgBF,EAAE,CAACI,SAAH,GAAeC,MAAf,CAAsBpB,MAAtB,EAA8BqB,MAA9B,CAAqCP,MAArC,CAAhB;AACA,SAAO,CAAP;AACD","sourcesContent":["import {truthy} from 'vega-util';\n\nexport function data(name) {\n  const data = this.context.data[name];\n  return data ? data.values.value : [];\n}\n\nexport function indata(name, field, value) {\n  const index = this.context.data[name]['index:' + field],\n        entry = index ? index.value.get(value) : undefined;\n  return entry ? entry.count : entry;\n}\n\nexport function setdata(name, tuples) {\n  const df = this.context.dataflow,\n        data = this.context.data[name],\n        input = data.input;\n\n  df.pulse(input, df.changeset().remove(truthy).insert(tuples));\n  return 1;\n}\n"]},"metadata":{},"sourceType":"module"}