{"ast":null,"code":"var _jsxFileName = \"C:\\\\NewReactResume\\\\resm\\\\src\\\\Components\\\\FirstML\\\\AnotherMl.js\";\nimport React from \"react\"; //import * as t_f from '@tensorflow/tfjs-node'\n\nimport * as tf from '@tensorflow/tfjs'; //const model = tf.sequential();\n\nconst input = tf.input({\n  shape: [784]\n});\nconst dense1 = tf.layers.dense({\n  units: 32,\n  activation: 'relu'\n}).apply(input);\nconst dense2 = tf.layers.dense({\n  units: 10,\n  activation: 'softmax'\n}).apply(dense1);\nconst model = tf.model({\n  inputs: input,\n  outputs: dense2\n});\nconst t = tf.tensor([-2, 1, 0, 5]);\nconst o = tf.layers.activation({\n  activation: 'relu'\n}).apply(t);\nexport default class AnotherMl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isTfReady: false,\n      training: false,\n      thet: t,\n      theo: o,\n      prediction: null\n    };\n  }\n\n  async componentDidMount() {\n    // Wait for tf to be ready.\n    await tf.ready(); // Signal to the app that tensorflow.js can now be used.\n\n    this.setState({\n      isTfReady: true\n    }); //this.train()\n\n    this.setState({\n      training: true\n    }); //const source = { uri: response.uri }\n  }\n\n  render() {\n    const {\n      isTfReady,\n      isModelReady,\n      prediction\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.state.isTfReady ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Yes Ready\") : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Not Ready\"), this.state.training ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Yes Trained\") : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Still Training\"), JSON.stringify(this.state.theo));\n  }\n\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/src/Components/FirstML/AnotherMl.js"],"names":["React","tf","input","shape","dense1","layers","dense","units","activation","apply","dense2","model","inputs","outputs","t","tensor","o","AnotherMl","Component","constructor","props","state","isTfReady","training","thet","theo","prediction","componentDidMount","ready","setState","render","isModelReady","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,KAAKC,EAAZ,MAAoB,kBAApB,C,CAEA;;AAGA,MAAMC,KAAK,GAAGD,EAAE,CAACC,KAAH,CAAS;AAACC,EAAAA,KAAK,EAAE,CAAC,GAAD;AAAR,CAAT,CAAd;AACA,MAAMC,MAAM,GAAGH,EAAE,CAACI,MAAH,CAAUC,KAAV,CAAgB;AAACC,EAAAA,KAAK,EAAE,EAAR;AAAYC,EAAAA,UAAU,EAAE;AAAxB,CAAhB,EAAiDC,KAAjD,CAAuDP,KAAvD,CAAf;AACA,MAAMQ,MAAM,GAAGT,EAAE,CAACI,MAAH,CAAUC,KAAV,CAAgB;AAACC,EAAAA,KAAK,EAAE,EAAR;AAAYC,EAAAA,UAAU,EAAE;AAAxB,CAAhB,EAAoDC,KAApD,CAA0DL,MAA1D,CAAf;AACA,MAAMO,KAAK,GAAGV,EAAE,CAACU,KAAH,CAAS;AAACC,EAAAA,MAAM,EAAEV,KAAT;AAAgBW,EAAAA,OAAO,EAAEH;AAAzB,CAAT,CAAd;AACA,MAAMI,CAAC,GAAGb,EAAE,CAACc,MAAH,CAAU,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,CAAV,CAAV;AACA,MAAMC,CAAC,GAAGf,EAAE,CAACI,MAAH,CAAUG,UAAV,CAAqB;AAACA,EAAAA,UAAU,EAAE;AAAb,CAArB,EAA2CC,KAA3C,CAAiDK,CAAjD,CAAV;AAEA,eAAe,MAAMG,SAAN,SAAwBjB,KAAK,CAACkB,SAA9B,CAAuC;AAElDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAEf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAC,KADD;AAETC,MAAAA,QAAQ,EAAC,KAFA;AAGTC,MAAAA,IAAI,EAAEV,CAHG;AAITW,MAAAA,IAAI,EAAET,CAJG;AAKTU,MAAAA,UAAU,EAAC;AALF,KAAb;AAQD;;AAEH,QAAMC,iBAAN,GAA0B;AACtB;AACA,UAAM1B,EAAE,CAAC2B,KAAH,EAAN,CAFsB,CAGtB;;AACA,SAAKC,QAAL,CAAc;AAACP,MAAAA,SAAS,EAAE;AAAZ,KAAd,EAJsB,CAKtB;;AACA,SAAKO,QAAL,CAAc;AAACN,MAAAA,QAAQ,EAAC;AAAV,KAAd,EANsB,CAOtB;AAEH;;AAGDO,EAAAA,MAAM,GACF;AACI,UAAM;AAAER,MAAAA,SAAF;AAAaS,MAAAA,YAAb;AAA2BL,MAAAA;AAA3B,QAA0C,KAAKL,KAArD;AAEA,WAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKA,KAAL,CAAWC,SAAX,GAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAArB,GAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAF3C,EAGK,KAAKD,KAAL,CAAWE,QAAX,GAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAApB,GAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAH5C,EAIKS,IAAI,CAACC,SAAL,CAAe,KAAKZ,KAAL,CAAWI,IAA1B,CAJL,CAFA;AAWH;;AA3C6C","sourcesContent":["import React from \"react\";\r\n//import * as t_f from '@tensorflow/tfjs-node'\r\nimport * as tf from '@tensorflow/tfjs';\r\n\r\n//const model = tf.sequential();\r\n\r\n\r\nconst input = tf.input({shape: [784]});\r\nconst dense1 = tf.layers.dense({units: 32, activation: 'relu'}).apply(input);\r\nconst dense2 = tf.layers.dense({units: 10, activation: 'softmax'}).apply(dense1);\r\nconst model = tf.model({inputs: input, outputs: dense2});\r\nconst t = tf.tensor([-2, 1, 0, 5]);\r\nconst o = tf.layers.activation({activation: 'relu'}).apply(t);\r\n\r\nexport default class AnotherMl extends React.Component{\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            isTfReady:false,\r\n            training:false,\r\n            thet: t,\r\n            theo: o,\r\n            prediction:null\r\n        }\r\n        \r\n      }\r\n    \r\n    async componentDidMount() {\r\n        // Wait for tf to be ready.\r\n        await tf.ready();\r\n        // Signal to the app that tensorflow.js can now be used.\r\n        this.setState({isTfReady: true})\r\n        //this.train()\r\n        this.setState({training:true})\r\n        //const source = { uri: response.uri }\r\n\r\n    }\r\n\r\n\r\n    render()\r\n        {\r\n            const { isTfReady, isModelReady, prediction } = this.state\r\n\r\n            return (\r\n\r\n            <div>\r\n\r\n                {this.state.isTfReady?<p>Yes Ready</p>:<p>Not Ready</p>}\r\n                {this.state.training?<p>Yes Trained</p>:<p>Still Training</p>}\r\n                {JSON.stringify(this.state.theo)}\r\n                \r\n                \r\n            </div>\r\n            );\r\n        }\r\n    \r\n\r\n}"]},"metadata":{},"sourceType":"module"}