{"ast":null,"code":"import parseExpression from './expression';\nimport { View, Scope } from '../util';\nimport { error, stringValue } from 'vega-util';\nvar Timer = 'timer';\nexport default function parseStream(stream, scope) {\n  var method = stream.merge ? mergeStream : stream.stream ? nestedStream : stream.type ? eventStream : error('Invalid stream specification: ' + stringValue(stream));\n  return method(stream, scope);\n}\n\nfunction eventSource(source) {\n  return source === Scope ? View : source || View;\n}\n\nfunction mergeStream(stream, scope) {\n  var list = stream.merge.map(s => parseStream(s, scope)),\n      entry = streamParameters({\n    merge: list\n  }, stream, scope);\n  return scope.addStream(entry).id;\n}\n\nfunction nestedStream(stream, scope) {\n  var id = parseStream(stream.stream, scope),\n      entry = streamParameters({\n    stream: id\n  }, stream, scope);\n  return scope.addStream(entry).id;\n}\n\nfunction eventStream(stream, scope) {\n  var id, entry;\n\n  if (stream.type === Timer) {\n    id = scope.event(Timer, stream.throttle);\n    stream = {\n      between: stream.between,\n      filter: stream.filter\n    };\n  } else {\n    id = scope.event(eventSource(stream.source), stream.type);\n  }\n\n  entry = streamParameters({\n    stream: id\n  }, stream, scope);\n  return Object.keys(entry).length === 1 ? id : scope.addStream(entry).id;\n}\n\nfunction streamParameters(entry, stream, scope) {\n  var param = stream.between;\n\n  if (param) {\n    if (param.length !== 2) {\n      error('Stream \"between\" parameter must have 2 entries: ' + stringValue(stream));\n    }\n\n    entry.between = [parseStream(param[0], scope), parseStream(param[1], scope)];\n  }\n\n  param = stream.filter ? [].concat(stream.filter) : [];\n\n  if (stream.marktype || stream.markname || stream.markrole) {\n    // add filter for mark type, name and/or role\n    param.push(filterMark(stream.marktype, stream.markname, stream.markrole));\n  }\n\n  if (stream.source === Scope) {\n    // add filter to limit events from sub-scope only\n    param.push('inScope(event.item)');\n  }\n\n  if (param.length) {\n    entry.filter = parseExpression('(' + param.join(')&&(') + ')').$expr;\n  }\n\n  if ((param = stream.throttle) != null) {\n    entry.throttle = +param;\n  }\n\n  if ((param = stream.debounce) != null) {\n    entry.debounce = +param;\n  }\n\n  if (stream.consume) {\n    entry.consume = true;\n  }\n\n  return entry;\n}\n\nfunction filterMark(type, name, role) {\n  var item = 'event.item';\n  return item + (type && type !== '*' ? '&&' + item + '.mark.marktype===\\'' + type + '\\'' : '') + (role ? '&&' + item + '.mark.role===\\'' + role + '\\'' : '') + (name ? '&&' + item + '.mark.name===\\'' + name + '\\'' : '');\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-parser/src/parsers/stream.js"],"names":["parseExpression","View","Scope","error","stringValue","Timer","parseStream","stream","scope","method","merge","mergeStream","nestedStream","type","eventStream","eventSource","source","list","map","s","entry","streamParameters","addStream","id","event","throttle","between","filter","Object","keys","length","param","concat","marktype","markname","markrole","push","filterMark","join","$expr","debounce","consume","name","role","item"],"mappings":"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","sourcesContent":["import parseExpression from './expression';\nimport {View, Scope} from '../util';\nimport {error, stringValue} from 'vega-util';\n\nvar Timer = 'timer';\n\nexport default function parseStream(stream, scope) {\n  var method = stream.merge ? mergeStream\n    : stream.stream ? nestedStream\n    : stream.type ? eventStream\n    : error('Invalid stream specification: ' + stringValue(stream));\n\n  return method(stream, scope);\n}\n\nfunction eventSource(source) {\n   return source === Scope ? View : (source || View);\n}\n\nfunction mergeStream(stream, scope) {\n  var list = stream.merge.map(s => parseStream(s, scope)),\n      entry = streamParameters({merge: list}, stream, scope);\n  return scope.addStream(entry).id;\n}\n\nfunction nestedStream(stream, scope) {\n  var id = parseStream(stream.stream, scope),\n      entry = streamParameters({stream: id}, stream, scope);\n  return scope.addStream(entry).id;\n}\n\nfunction eventStream(stream, scope) {\n  var id, entry;\n\n  if (stream.type === Timer) {\n    id = scope.event(Timer, stream.throttle);\n    stream = {between: stream.between, filter: stream.filter};\n  } else {\n    id = scope.event(eventSource(stream.source), stream.type);\n  }\n\n  entry = streamParameters({stream: id}, stream, scope);\n  return Object.keys(entry).length === 1\n    ? id\n    : scope.addStream(entry).id;\n}\n\nfunction streamParameters(entry, stream, scope) {\n  var param = stream.between;\n\n  if (param) {\n    if (param.length !== 2) {\n      error('Stream \"between\" parameter must have 2 entries: ' + stringValue(stream));\n    }\n    entry.between = [\n      parseStream(param[0], scope),\n      parseStream(param[1], scope)\n    ];\n  }\n\n  param = stream.filter ? [].concat(stream.filter) : [];\n  if (stream.marktype || stream.markname || stream.markrole) {\n    // add filter for mark type, name and/or role\n    param.push(filterMark(stream.marktype, stream.markname, stream.markrole));\n  }\n  if (stream.source === Scope) {\n    // add filter to limit events from sub-scope only\n    param.push('inScope(event.item)');\n  }\n  if (param.length) {\n    entry.filter = parseExpression('(' + param.join(')&&(') + ')').$expr;\n  }\n\n  if ((param = stream.throttle) != null) {\n    entry.throttle = +param;\n  }\n\n  if ((param = stream.debounce) != null) {\n    entry.debounce = +param;\n  }\n\n  if (stream.consume) {\n    entry.consume = true;\n  }\n\n  return entry;\n}\n\nfunction filterMark(type, name, role) {\n  var item = 'event.item';\n  return item\n    + (type && type !== '*' ? '&&' + item + '.mark.marktype===\\'' + type + '\\'' : '')\n    + (role ? '&&' + item + '.mark.role===\\'' + role + '\\'' : '')\n    + (name ? '&&' + item + '.mark.name===\\'' + name + '\\'' : '');\n}\n"]},"metadata":{},"sourceType":"module"}