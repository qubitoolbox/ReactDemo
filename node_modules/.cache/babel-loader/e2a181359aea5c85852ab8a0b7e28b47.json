{"ast":null,"code":"import { field, identity, isFunction, isObject } from 'vega-util';\n\nfunction isBuffer(_) {\n  return typeof Buffer === 'function' && isFunction(Buffer.isBuffer) ? Buffer.isBuffer(_) : false;\n}\n\nexport default function json(data, format) {\n  const prop = format && format.property ? field(format.property) : identity;\n  return isObject(data) && !isBuffer(data) ? parseJSON(prop(data)) : prop(JSON.parse(data));\n}\njson.responseType = 'json';\n\nfunction parseJSON(data, format) {\n  return format && format.copy ? JSON.parse(JSON.stringify(data)) : data;\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-loader/src/formats/json.js"],"names":["field","identity","isFunction","isObject","isBuffer","_","Buffer","json","data","format","prop","property","parseJSON","JSON","parse","responseType","copy","stringify"],"mappings":"AAAA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,QAArC,QAAoD,WAApD;;AAEA,SAASC,QAAT,CAAkBC,CAAlB,EAAqB;AACnB,SAAQ,OAAOC,MAAP,KAAkB,UAAlB,IAAgCJ,UAAU,CAACI,MAAM,CAACF,QAAR,CAA3C,GACHE,MAAM,CAACF,QAAP,CAAgBC,CAAhB,CADG,GACkB,KADzB;AAED;;AAED,eAAe,SAASE,IAAT,CAAcC,IAAd,EAAoBC,MAApB,EAA4B;AACzC,QAAMC,IAAI,GAAID,MAAM,IAAIA,MAAM,CAACE,QAAlB,GAA8BX,KAAK,CAACS,MAAM,CAACE,QAAR,CAAnC,GAAuDV,QAApE;AACA,SAAOE,QAAQ,CAACK,IAAD,CAAR,IAAkB,CAACJ,QAAQ,CAACI,IAAD,CAA3B,GACHI,SAAS,CAACF,IAAI,CAACF,IAAD,CAAL,CADN,GAEHE,IAAI,CAACG,IAAI,CAACC,KAAL,CAAWN,IAAX,CAAD,CAFR;AAGD;AAEDD,IAAI,CAACQ,YAAL,GAAoB,MAApB;;AAEA,SAASH,SAAT,CAAmBJ,IAAnB,EAAyBC,MAAzB,EAAiC;AAC/B,SAAQA,MAAM,IAAIA,MAAM,CAACO,IAAlB,GACHH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACI,SAAL,CAAeT,IAAf,CAAX,CADG,GAEHA,IAFJ;AAGD","sourcesContent":["import {field, identity, isFunction, isObject} from 'vega-util';\n\nfunction isBuffer(_) {\n  return (typeof Buffer === 'function' && isFunction(Buffer.isBuffer))\n    ? Buffer.isBuffer(_) : false;\n}\n\nexport default function json(data, format) {\n  const prop = (format && format.property) ? field(format.property) : identity;\n  return isObject(data) && !isBuffer(data)\n    ? parseJSON(prop(data))\n    : prop(JSON.parse(data));\n}\n\njson.responseType = 'json';\n\nfunction parseJSON(data, format) {\n  return (format && format.copy)\n    ? JSON.parse(JSON.stringify(data))\n    : data;\n}\n"]},"metadata":{},"sourceType":"module"}