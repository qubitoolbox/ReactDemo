{"ast":null,"code":"import { isArray } from 'vega-util';\nimport { FACET_CHANNELS } from '../../channel';\nimport { vgField } from '../../channeldef';\nimport { HEADER_LABEL_PROPERTIES, HEADER_LABEL_PROPERTIES_MAP, HEADER_TITLE_PROPERTIES, HEADER_TITLE_PROPERTIES_MAP } from '../../header';\nimport { isSortField } from '../../sort';\nimport { isFacetMapping } from '../../spec/facet';\nimport { contains, keys, replaceAll } from '../../util';\nimport { defaultLabelAlign, defaultLabelBaseline } from '../axis/properties';\nimport { formatSignalRef } from '../common';\nimport { sortArrayIndexField } from '../data/calculate';\nimport { isFacetModel } from '../model';\nimport { getHeaderChannel, getHeaderProperties, getHeaderProperty } from './common';\nimport { HEADER_TYPES } from './component'; // TODO: rename to assembleHeaderTitleGroup\n\nexport function assembleTitleGroup(model, channel) {\n  const title = model.component.layoutHeaders[channel].title;\n  const config = model.config ? model.config : undefined;\n  const facetFieldDef = model.component.layoutHeaders[channel].facetFieldDef ? model.component.layoutHeaders[channel].facetFieldDef : undefined;\n  const {\n    titleAnchor,\n    titleAngle,\n    titleOrient\n  } = getHeaderProperties(['titleAnchor', 'titleAngle', 'titleOrient'], facetFieldDef, config, channel);\n  const headerChannel = getHeaderChannel(channel, titleOrient);\n  return {\n    name: `${channel}-title`,\n    type: 'group',\n    role: `${headerChannel}-title`,\n    title: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n      text: title\n    }, channel === 'row' ? {\n      orient: 'left'\n    } : {}), {\n      style: 'guide-title'\n    }), defaultHeaderGuideBaseline(titleAngle, headerChannel)), defaultHeaderGuideAlign(headerChannel, titleAngle, titleAnchor)), assembleHeaderProperties(config, facetFieldDef, channel, HEADER_TITLE_PROPERTIES, HEADER_TITLE_PROPERTIES_MAP))\n  };\n}\nexport function defaultHeaderGuideAlign(headerChannel, angle, anchor = 'middle') {\n  switch (anchor) {\n    case 'start':\n      return {\n        align: 'left'\n      };\n\n    case 'end':\n      return {\n        align: 'right'\n      };\n  }\n\n  const align = defaultLabelAlign(angle, headerChannel === 'row' ? 'left' : 'top');\n  return align ? {\n    align\n  } : {};\n}\nexport function defaultHeaderGuideBaseline(angle, channel) {\n  const baseline = defaultLabelBaseline(angle, channel === 'row' ? 'left' : 'top');\n  return baseline ? {\n    baseline\n  } : {};\n}\nexport function assembleHeaderGroups(model, channel) {\n  const layoutHeader = model.component.layoutHeaders[channel];\n  const groups = [];\n\n  for (const headerType of HEADER_TYPES) {\n    if (layoutHeader[headerType]) {\n      for (const headerCmpt of layoutHeader[headerType]) {\n        groups.push(assembleHeaderGroup(model, channel, headerType, layoutHeader, headerCmpt));\n      }\n    }\n  }\n\n  return groups;\n}\n\nfunction getSort(facetFieldDef, channel) {\n  var _a;\n\n  const {\n    sort\n  } = facetFieldDef;\n\n  if (isSortField(sort)) {\n    return {\n      field: vgField(sort, {\n        expr: 'datum'\n      }),\n      order: (_a = sort.order, _a !== null && _a !== void 0 ? _a : 'ascending')\n    };\n  } else if (isArray(sort)) {\n    return {\n      field: sortArrayIndexField(facetFieldDef, channel, {\n        expr: 'datum'\n      }),\n      order: 'ascending'\n    };\n  } else {\n    return {\n      field: vgField(facetFieldDef, {\n        expr: 'datum'\n      }),\n      order: sort !== null && sort !== void 0 ? sort : 'ascending'\n    };\n  }\n}\n\nexport function assembleLabelTitle(facetFieldDef, channel, config) {\n  const {\n    format,\n    labelAngle,\n    labelAnchor,\n    labelOrient,\n    labelExpr\n  } = getHeaderProperties(['format', 'labelAngle', 'labelAnchor', 'labelOrient', 'labelExpr'], facetFieldDef, config, channel);\n  const titleTextExpr = formatSignalRef(facetFieldDef, format, 'parent', config).signal;\n  const headerChannel = getHeaderChannel(channel, labelOrient);\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n    text: {\n      signal: labelExpr ? replaceAll(replaceAll(labelExpr, 'datum.label', titleTextExpr), 'datum.value', vgField(facetFieldDef, {\n        expr: 'parent'\n      })) : titleTextExpr\n    }\n  }, channel === 'row' ? {\n    orient: 'left'\n  } : {}), {\n    style: 'guide-label',\n    frame: 'group'\n  }), defaultHeaderGuideBaseline(labelAngle, headerChannel)), defaultHeaderGuideAlign(headerChannel, labelAngle, labelAnchor)), assembleHeaderProperties(config, facetFieldDef, channel, HEADER_LABEL_PROPERTIES, HEADER_LABEL_PROPERTIES_MAP));\n}\nexport function assembleHeaderGroup(model, channel, headerType, layoutHeader, headerCmpt) {\n  var _a;\n\n  if (headerCmpt) {\n    let title = null;\n    const {\n      facetFieldDef\n    } = layoutHeader;\n    const config = model.config ? model.config : undefined;\n\n    if (facetFieldDef && headerCmpt.labels) {\n      const {\n        labelOrient\n      } = getHeaderProperties(['labelOrient'], facetFieldDef, config, channel); // Include label title in the header if orient aligns with the channel\n\n      if (channel === 'row' && !contains(['top', 'bottom'], labelOrient) || channel === 'column' && !contains(['left', 'right'], labelOrient)) {\n        title = assembleLabelTitle(facetFieldDef, channel, config);\n      }\n    }\n\n    const isFacetWithoutRowCol = isFacetModel(model) && !isFacetMapping(model.facet);\n    const axes = headerCmpt.axes;\n    const hasAxes = ((_a = axes) === null || _a === void 0 ? void 0 : _a.length) > 0;\n\n    if (title || hasAxes) {\n      const sizeChannel = channel === 'row' ? 'height' : 'width';\n      return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n        name: model.getName(`${channel}_${headerType}`),\n        type: 'group',\n        role: `${channel}-${headerType}`\n      }, layoutHeader.facetFieldDef ? {\n        from: {\n          data: model.getName(channel + '_domain')\n        },\n        sort: getSort(facetFieldDef, channel)\n      } : {}), hasAxes && isFacetWithoutRowCol ? {\n        from: {\n          data: model.getName(`facet_domain_${channel}`)\n        }\n      } : {}), title ? {\n        title\n      } : {}), headerCmpt.sizeSignal ? {\n        encode: {\n          update: {\n            [sizeChannel]: headerCmpt.sizeSignal\n          }\n        }\n      } : {}), hasAxes ? {\n        axes\n      } : {});\n    }\n  }\n\n  return null;\n}\nconst LAYOUT_TITLE_BAND = {\n  column: {\n    start: 0,\n    end: 1\n  },\n  row: {\n    start: 1,\n    end: 0\n  }\n};\nexport function getLayoutTitleBand(titleAnchor, headerChannel) {\n  return LAYOUT_TITLE_BAND[headerChannel][titleAnchor];\n}\nexport function assembleLayoutTitleBand(headerComponentIndex, config) {\n  var _a;\n\n  const titleBand = {};\n\n  for (const channel of FACET_CHANNELS) {\n    const headerComponent = headerComponentIndex[channel];\n\n    if ((_a = headerComponent) === null || _a === void 0 ? void 0 : _a.facetFieldDef) {\n      const {\n        titleAnchor,\n        titleOrient\n      } = getHeaderProperties(['titleAnchor', 'titleOrient'], headerComponent.facetFieldDef, config, channel);\n      const headerChannel = getHeaderChannel(channel, titleOrient);\n      const band = getLayoutTitleBand(titleAnchor, headerChannel);\n\n      if (band !== undefined) {\n        titleBand[headerChannel] = band;\n      }\n    }\n  }\n\n  return keys(titleBand).length > 0 ? titleBand : undefined;\n}\nexport function assembleHeaderProperties(config, facetFieldDef, channel, properties, propertiesMap) {\n  const props = {};\n\n  for (const prop of properties) {\n    if (!propertiesMap[prop]) {\n      continue;\n    }\n\n    const value = getHeaderProperty(prop, facetFieldDef, config, channel);\n\n    if (value !== undefined) {\n      props[propertiesMap[prop]] = value;\n    }\n  }\n\n  return props;\n}","map":{"version":3,"sources":["../../../../src/compile/header/assemble.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Utility for generating row / column headers\n */\nimport {TitleAnchor, TitleConfig} from 'vega';\nimport {isArray} from 'vega-util';\nimport {FACET_CHANNELS, FacetChannel} from '../../channel';\nimport {vgField} from '../../channeldef';\nimport {Config} from '../../config';\nimport {\n  CoreHeader,\n  HEADER_LABEL_PROPERTIES,\n  HEADER_LABEL_PROPERTIES_MAP,\n  HEADER_TITLE_PROPERTIES,\n  HEADER_TITLE_PROPERTIES_MAP\n} from '../../header';\nimport {isSortField} from '../../sort';\nimport {FacetFieldDef, isFacetMapping} from '../../spec/facet';\nimport {contains, keys, replaceAll} from '../../util';\nimport {RowCol, VgComparator, VgMarkGroup, VgTitle} from '../../vega.schema';\nimport {defaultLabelAlign, defaultLabelBaseline} from '../axis/properties';\nimport {formatSignalRef} from '../common';\nimport {sortArrayIndexField} from '../data/calculate';\nimport {isFacetModel, Model} from '../model';\nimport {getHeaderChannel, getHeaderProperties, getHeaderProperty} from './common';\nimport {\n  HEADER_TYPES,\n  HeaderChannel,\n  HeaderComponent,\n  HeaderType,\n  LayoutHeaderComponent,\n  LayoutHeaderComponentIndex\n} from './component';\n\n// TODO: rename to assembleHeaderTitleGroup\nexport function assembleTitleGroup(model: Model, channel: FacetChannel) {\n  const title = model.component.layoutHeaders[channel].title;\n  const config = model.config ? model.config : undefined;\n  const facetFieldDef = model.component.layoutHeaders[channel].facetFieldDef\n    ? model.component.layoutHeaders[channel].facetFieldDef\n    : undefined;\n\n  const {titleAnchor, titleAngle, titleOrient} = getHeaderProperties(\n    ['titleAnchor', 'titleAngle', 'titleOrient'],\n    facetFieldDef,\n    config,\n    channel\n  );\n  const headerChannel = getHeaderChannel(channel, titleOrient);\n\n  return {\n    name: `${channel}-title`,\n    type: 'group',\n    role: `${headerChannel}-title`,\n    title: {\n      text: title,\n      ...(channel === 'row' ? {orient: 'left'} : {}),\n      style: 'guide-title',\n      ...defaultHeaderGuideBaseline(titleAngle, headerChannel),\n      ...defaultHeaderGuideAlign(headerChannel, titleAngle, titleAnchor),\n      ...assembleHeaderProperties(config, facetFieldDef, channel, HEADER_TITLE_PROPERTIES, HEADER_TITLE_PROPERTIES_MAP)\n    }\n  };\n}\n\nexport function defaultHeaderGuideAlign(headerChannel: HeaderChannel, angle: number, anchor: TitleAnchor = 'middle') {\n  switch (anchor) {\n    case 'start':\n      return {align: 'left'};\n    case 'end':\n      return {align: 'right'};\n  }\n\n  const align = defaultLabelAlign(angle, headerChannel === 'row' ? 'left' : 'top');\n  return align ? {align} : {};\n}\n\nexport function defaultHeaderGuideBaseline(angle: number, channel: FacetChannel) {\n  const baseline = defaultLabelBaseline(angle, channel === 'row' ? 'left' : 'top');\n  return baseline ? {baseline} : {};\n}\n\nexport function assembleHeaderGroups(model: Model, channel: HeaderChannel): VgMarkGroup[] {\n  const layoutHeader = model.component.layoutHeaders[channel];\n  const groups = [];\n  for (const headerType of HEADER_TYPES) {\n    if (layoutHeader[headerType]) {\n      for (const headerCmpt of layoutHeader[headerType]) {\n        groups.push(assembleHeaderGroup(model, channel, headerType, layoutHeader, headerCmpt));\n      }\n    }\n  }\n  return groups;\n}\n\nfunction getSort(facetFieldDef: FacetFieldDef<string>, channel: HeaderChannel): VgComparator {\n  const {sort} = facetFieldDef;\n  if (isSortField(sort)) {\n    return {\n      field: vgField(sort, {expr: 'datum'}),\n      order: sort.order ?? 'ascending'\n    };\n  } else if (isArray(sort)) {\n    return {\n      field: sortArrayIndexField(facetFieldDef, channel, {expr: 'datum'}),\n      order: 'ascending'\n    };\n  } else {\n    return {\n      field: vgField(facetFieldDef, {expr: 'datum'}),\n      order: sort ?? 'ascending'\n    };\n  }\n}\n\nexport function assembleLabelTitle(facetFieldDef: FacetFieldDef<string>, channel: FacetChannel, config: Config) {\n  const {format, labelAngle, labelAnchor, labelOrient, labelExpr} = getHeaderProperties(\n    ['format', 'labelAngle', 'labelAnchor', 'labelOrient', 'labelExpr'],\n    facetFieldDef,\n    config,\n    channel\n  );\n\n  const titleTextExpr = formatSignalRef(facetFieldDef, format, 'parent', config).signal;\n  const headerChannel = getHeaderChannel(channel, labelOrient);\n\n  return {\n    text: {\n      signal: labelExpr\n        ? replaceAll(\n            replaceAll(labelExpr, 'datum.label', titleTextExpr),\n            'datum.value',\n            vgField(facetFieldDef, {expr: 'parent'})\n          )\n        : titleTextExpr\n    },\n    ...(channel === 'row' ? {orient: 'left'} : {}),\n    style: 'guide-label',\n    frame: 'group',\n    ...defaultHeaderGuideBaseline(labelAngle, headerChannel),\n    ...defaultHeaderGuideAlign(headerChannel, labelAngle, labelAnchor),\n    ...assembleHeaderProperties(config, facetFieldDef, channel, HEADER_LABEL_PROPERTIES, HEADER_LABEL_PROPERTIES_MAP)\n  };\n}\n\nexport function assembleHeaderGroup(\n  model: Model,\n  channel: HeaderChannel,\n  headerType: HeaderType,\n  layoutHeader: LayoutHeaderComponent,\n  headerCmpt: HeaderComponent\n) {\n  if (headerCmpt) {\n    let title = null;\n    const {facetFieldDef} = layoutHeader;\n    const config = model.config ? model.config : undefined;\n    if (facetFieldDef && headerCmpt.labels) {\n      const {labelOrient} = getHeaderProperties(['labelOrient'], facetFieldDef, config, channel);\n\n      // Include label title in the header if orient aligns with the channel\n      if (\n        (channel === 'row' && !contains(['top', 'bottom'], labelOrient)) ||\n        (channel === 'column' && !contains(['left', 'right'], labelOrient))\n      ) {\n        title = assembleLabelTitle(facetFieldDef, channel, config);\n      }\n    }\n\n    const isFacetWithoutRowCol = isFacetModel(model) && !isFacetMapping(model.facet);\n\n    const axes = headerCmpt.axes;\n\n    const hasAxes = axes?.length > 0;\n    if (title || hasAxes) {\n      const sizeChannel = channel === 'row' ? 'height' : 'width';\n\n      return {\n        name: model.getName(`${channel}_${headerType}`),\n        type: 'group',\n        role: `${channel}-${headerType}`,\n\n        ...(layoutHeader.facetFieldDef\n          ? {\n              from: {data: model.getName(channel + '_domain')},\n              sort: getSort(facetFieldDef, channel)\n            }\n          : {}),\n        ...(hasAxes && isFacetWithoutRowCol\n          ? {\n              from: {data: model.getName(`facet_domain_${channel}`)}\n            }\n          : {}),\n\n        ...(title ? {title} : {}),\n        ...(headerCmpt.sizeSignal\n          ? {\n              encode: {\n                update: {\n                  [sizeChannel]: headerCmpt.sizeSignal\n                }\n              }\n            }\n          : {}),\n        ...(hasAxes ? {axes} : {})\n      };\n    }\n  }\n  return null;\n}\n\nconst LAYOUT_TITLE_BAND = {\n  column: {\n    start: 0,\n    end: 1\n  },\n  row: {\n    start: 1,\n    end: 0\n  }\n};\n\nexport function getLayoutTitleBand(titleAnchor: TitleAnchor, headerChannel: HeaderChannel) {\n  return LAYOUT_TITLE_BAND[headerChannel][titleAnchor];\n}\n\nexport function assembleLayoutTitleBand(\n  headerComponentIndex: LayoutHeaderComponentIndex,\n  config: Config\n): RowCol<number> {\n  const titleBand = {};\n\n  for (const channel of FACET_CHANNELS) {\n    const headerComponent = headerComponentIndex[channel];\n    if (headerComponent?.facetFieldDef) {\n      const {titleAnchor, titleOrient} = getHeaderProperties(\n        ['titleAnchor', 'titleOrient'],\n        headerComponent.facetFieldDef,\n        config,\n        channel\n      );\n\n      const headerChannel = getHeaderChannel(channel, titleOrient);\n      const band = getLayoutTitleBand(titleAnchor, headerChannel);\n      if (band !== undefined) {\n        titleBand[headerChannel] = band;\n      }\n    }\n  }\n\n  return keys(titleBand).length > 0 ? titleBand : undefined;\n}\n\nexport function assembleHeaderProperties(\n  config: Config,\n  facetFieldDef: FacetFieldDef<string>,\n  channel: FacetChannel,\n  properties: (keyof CoreHeader)[],\n  propertiesMap: {[k in keyof CoreHeader]: keyof TitleConfig}\n): Partial<VgTitle> {\n  const props = {};\n  for (const prop of properties) {\n    if (!propertiesMap[prop]) {\n      continue;\n    }\n\n    const value = getHeaderProperty(prop, facetFieldDef, config, channel);\n    if (value !== undefined) {\n      props[propertiesMap[prop]] = value;\n    }\n  }\n  return props;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}