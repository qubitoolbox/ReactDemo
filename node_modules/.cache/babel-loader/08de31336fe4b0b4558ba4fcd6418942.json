{"ast":null,"code":"import { identity, toBoolean, toDate, toNumber, toString } from 'vega-util';\nexport var typeParsers = {\n  boolean: toBoolean,\n  integer: toNumber,\n  number: toNumber,\n  date: toDate,\n  string: toString,\n  unknown: identity\n};\nvar typeTests = [isBoolean, isInteger, isNumber, isDate];\nvar typeList = ['boolean', 'integer', 'number', 'date'];\nexport function inferType(values, field) {\n  if (!values || !values.length) return 'unknown';\n  var value,\n      i,\n      j,\n      t = 0,\n      n = values.length,\n      m = typeTests.length,\n      a = typeTests.map(function (_, i) {\n    return i + 1;\n  });\n\n  for (i = 0, n = values.length; i < n; ++i) {\n    value = field ? values[i][field] : values[i];\n\n    for (j = 0; j < m; ++j) {\n      if (a[j] && isValid(value) && !typeTests[j](value)) {\n        a[j] = 0;\n        ++t;\n        if (t === typeTests.length) return 'string';\n      }\n    }\n  }\n\n  t = a.reduce(function (u, v) {\n    return u === 0 ? v : u;\n  }, 0) - 1;\n  return typeList[t];\n}\nexport function inferTypes(data, fields) {\n  return fields.reduce(function (types, field) {\n    types[field] = inferType(data, field);\n    return types;\n  }, {});\n} // -- Type Checks ----\n\nfunction isValid(_) {\n  return _ != null && _ === _;\n}\n\nfunction isBoolean(_) {\n  return _ === 'true' || _ === 'false' || _ === true || _ === false;\n}\n\nfunction isDate(_) {\n  return !Number.isNaN(Date.parse(_));\n}\n\nfunction isNumber(_) {\n  return !Number.isNaN(+_) && !(_ instanceof Date);\n}\n\nfunction isInteger(_) {\n  return isNumber(_) && Number.isInteger(+_);\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-loader/src/type.js"],"names":["identity","toBoolean","toDate","toNumber","toString","typeParsers","boolean","integer","number","date","string","unknown","typeTests","isBoolean","isInteger","isNumber","isDate","typeList","inferType","values","field","length","value","i","j","t","n","m","a","map","_","isValid","reduce","u","v","inferTypes","data","fields","types","Number","isNaN","Date","parse"],"mappings":"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","sourcesContent":["import {identity, toBoolean, toDate, toNumber, toString} from 'vega-util';\n\nexport var typeParsers = {\n  boolean: toBoolean,\n  integer: toNumber,\n  number:  toNumber,\n  date:    toDate,\n  string:  toString,\n  unknown: identity\n};\n\nvar typeTests = [\n  isBoolean,\n  isInteger,\n  isNumber,\n  isDate\n];\n\nvar typeList = [\n  'boolean',\n  'integer',\n  'number',\n  'date'\n];\n\nexport function inferType(values, field) {\n  if (!values || !values.length) return 'unknown';\n\n  var value, i, j, t = 0,\n      n = values.length,\n      m = typeTests.length,\n      a = typeTests.map(function(_, i) { return i + 1; });\n\n  for (i=0, n=values.length; i<n; ++i) {\n    value = field ? values[i][field] : values[i];\n    for (j=0; j<m; ++j) {\n      if (a[j] && isValid(value) && !typeTests[j](value)) {\n        a[j] = 0;\n        ++t;\n        if (t === typeTests.length) return 'string';\n      }\n    }\n  }\n\n  t = a.reduce(function(u, v) { return u === 0 ? v : u; }, 0) - 1;\n  return typeList[t];\n}\n\nexport function inferTypes(data, fields) {\n  return fields.reduce(function(types, field) {\n    types[field] = inferType(data, field);\n    return types;\n  }, {});\n}\n\n// -- Type Checks ----\n\nfunction isValid(_) {\n  return _ != null && _ === _;\n}\n\nfunction isBoolean(_) {\n  return _ === 'true' || _ === 'false' || _ === true || _ === false;\n}\n\nfunction isDate(_) {\n  return !Number.isNaN(Date.parse(_));\n}\n\nfunction isNumber(_) {\n  return !Number.isNaN(+_) && !(_ instanceof Date);\n}\n\nfunction isInteger(_) {\n  return isNumber(_) && Number.isInteger(+_);\n}\n"]},"metadata":{},"sourceType":"module"}