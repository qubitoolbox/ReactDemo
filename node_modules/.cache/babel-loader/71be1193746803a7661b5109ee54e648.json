{"ast":null,"code":"import json from './json';\nimport { feature, mesh } from 'topojson-client';\nimport { error } from 'vega-util';\nconst filters = {\n  interior: (a, b) => a !== b,\n  exterior: (a, b) => a === b\n};\nexport default function topojson(data, format) {\n  let method, object, property, filter;\n  data = json(data, format);\n\n  if (format && format.feature) {\n    method = feature;\n    property = format.feature;\n  } else if (format && format.mesh) {\n    method = mesh;\n    property = format.mesh;\n    filter = filters[format.filter];\n  } else {\n    error('Missing TopoJSON feature or mesh parameter.');\n  }\n\n  object = (object = data.objects[property]) ? method(data, object, filter) : error('Invalid TopoJSON object: ' + property);\n  return object && object.features || [object];\n}\ntopojson.responseType = 'json';","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-loader/src/formats/topojson.js"],"names":["json","feature","mesh","error","filters","interior","a","b","exterior","topojson","data","format","method","object","property","filter","objects","features","responseType"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAAQC,OAAR,EAAiBC,IAAjB,QAA4B,iBAA5B;AACA,SAAQC,KAAR,QAAoB,WAApB;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,QAAQ,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,KAAKC,CADZ;AAEdC,EAAAA,QAAQ,EAAE,CAACF,CAAD,EAAIC,CAAJ,KAAUD,CAAC,KAAKC;AAFZ,CAAhB;AAKA,eAAe,SAASE,QAAT,CAAkBC,IAAlB,EAAwBC,MAAxB,EAAgC;AAC7C,MAAIC,MAAJ,EAAYC,MAAZ,EAAoBC,QAApB,EAA8BC,MAA9B;AACAL,EAAAA,IAAI,GAAGV,IAAI,CAACU,IAAD,EAAOC,MAAP,CAAX;;AAEA,MAAIA,MAAM,IAAIA,MAAM,CAACV,OAArB,EAA8B;AAC5BW,IAAAA,MAAM,GAAGX,OAAT;AACAa,IAAAA,QAAQ,GAAGH,MAAM,CAACV,OAAlB;AACD,GAHD,MAGO,IAAIU,MAAM,IAAIA,MAAM,CAACT,IAArB,EAA2B;AAChCU,IAAAA,MAAM,GAAGV,IAAT;AACAY,IAAAA,QAAQ,GAAGH,MAAM,CAACT,IAAlB;AACAa,IAAAA,MAAM,GAAGX,OAAO,CAACO,MAAM,CAACI,MAAR,CAAhB;AACD,GAJM,MAIA;AACLZ,IAAAA,KAAK,CAAC,6CAAD,CAAL;AACD;;AAEDU,EAAAA,MAAM,GAAG,CAACA,MAAM,GAAGH,IAAI,CAACM,OAAL,CAAaF,QAAb,CAAV,IACLF,MAAM,CAACF,IAAD,EAAOG,MAAP,EAAeE,MAAf,CADD,GAELZ,KAAK,CAAC,8BAA8BW,QAA/B,CAFT;AAIA,SAAOD,MAAM,IAAIA,MAAM,CAACI,QAAjB,IAA6B,CAACJ,MAAD,CAApC;AACD;AAEDJ,QAAQ,CAACS,YAAT,GAAwB,MAAxB","sourcesContent":["import json from './json';\nimport {feature, mesh} from 'topojson-client';\nimport {error} from 'vega-util';\n\nconst filters = {\n  interior: (a, b) => a !== b,\n  exterior: (a, b) => a === b\n};\n\nexport default function topojson(data, format) {\n  let method, object, property, filter;\n  data = json(data, format);\n\n  if (format && format.feature) {\n    method = feature;\n    property = format.feature;\n  } else if (format && format.mesh) {\n    method = mesh;\n    property = format.mesh;\n    filter = filters[format.filter];\n  } else {\n    error('Missing TopoJSON feature or mesh parameter.');\n  }\n\n  object = (object = data.objects[property])\n    ? method(data, object, filter)\n    : error('Invalid TopoJSON object: ' + property);\n\n  return object && object.features || [object];\n}\n\ntopojson.responseType = 'json';\n"]},"metadata":{},"sourceType":"module"}