{"ast":null,"code":"function log(method, level, input) {\n  var args = [level].concat([].slice.call(input));\n  console[method].apply(console, args); // eslint-disable-line no-console\n}\n\nexport var None = 0;\nexport var Error = 1;\nexport var Warn = 2;\nexport var Info = 3;\nexport var Debug = 4;\nexport default function (_, method) {\n  var level = _ || None;\n  return {\n    level: function (_) {\n      if (arguments.length) {\n        level = +_;\n        return this;\n      } else {\n        return level;\n      }\n    },\n    error: function () {\n      if (level >= Error) log(method || 'error', 'ERROR', arguments);\n      return this;\n    },\n    warn: function () {\n      if (level >= Warn) log(method || 'warn', 'WARN', arguments);\n      return this;\n    },\n    info: function () {\n      if (level >= Info) log(method || 'log', 'INFO', arguments);\n      return this;\n    },\n    debug: function () {\n      if (level >= Debug) log(method || 'log', 'DEBUG', arguments);\n      return this;\n    }\n  };\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-lite/node_modules/vega-util/src/logger.js"],"names":["log","method","level","input","args","concat","slice","call","console","apply","None","Error","Warn","Info","Debug","_","arguments","length","error","warn","info","debug"],"mappings":"AAAA,SAASA,GAAT,CAAaC,MAAb,EAAqBC,KAArB,EAA4BC,KAA5B,EAAmC;AACjC,MAAIC,IAAI,GAAG,CAACF,KAAD,EAAQG,MAAR,CAAe,GAAGC,KAAH,CAASC,IAAT,CAAcJ,KAAd,CAAf,CAAX;AACAK,EAAAA,OAAO,CAACP,MAAD,CAAP,CAAgBQ,KAAhB,CAAsBD,OAAtB,EAA+BJ,IAA/B,EAFiC,CAEK;AACvC;;AAED,OAAO,IAAIM,IAAI,GAAI,CAAZ;AACP,OAAO,IAAIC,KAAK,GAAG,CAAZ;AACP,OAAO,IAAIC,IAAI,GAAI,CAAZ;AACP,OAAO,IAAIC,IAAI,GAAI,CAAZ;AACP,OAAO,IAAIC,KAAK,GAAG,CAAZ;AAEP,eAAe,UAASC,CAAT,EAAYd,MAAZ,EAAoB;AACjC,MAAIC,KAAK,GAAGa,CAAC,IAAIL,IAAjB;AACA,SAAO;AACLR,IAAAA,KAAK,EAAE,UAASa,CAAT,EAAY;AACjB,UAAIC,SAAS,CAACC,MAAd,EAAsB;AACpBf,QAAAA,KAAK,GAAG,CAACa,CAAT;AACA,eAAO,IAAP;AACD,OAHD,MAGO;AACL,eAAOb,KAAP;AACD;AACF,KARI;AASLgB,IAAAA,KAAK,EAAE,YAAW;AAChB,UAAIhB,KAAK,IAAIS,KAAb,EAAoBX,GAAG,CAACC,MAAM,IAAI,OAAX,EAAoB,OAApB,EAA6Be,SAA7B,CAAH;AACpB,aAAO,IAAP;AACD,KAZI;AAaLG,IAAAA,IAAI,EAAE,YAAW;AACf,UAAIjB,KAAK,IAAIU,IAAb,EAAmBZ,GAAG,CAACC,MAAM,IAAI,MAAX,EAAmB,MAAnB,EAA2Be,SAA3B,CAAH;AACnB,aAAO,IAAP;AACD,KAhBI;AAiBLI,IAAAA,IAAI,EAAE,YAAW;AACf,UAAIlB,KAAK,IAAIW,IAAb,EAAmBb,GAAG,CAACC,MAAM,IAAI,KAAX,EAAkB,MAAlB,EAA0Be,SAA1B,CAAH;AACnB,aAAO,IAAP;AACD,KApBI;AAqBLK,IAAAA,KAAK,EAAE,YAAW;AAChB,UAAInB,KAAK,IAAIY,KAAb,EAAoBd,GAAG,CAACC,MAAM,IAAI,KAAX,EAAkB,OAAlB,EAA2Be,SAA3B,CAAH;AACpB,aAAO,IAAP;AACD;AAxBI,GAAP;AA0BD","sourcesContent":["function log(method, level, input) {\n  var args = [level].concat([].slice.call(input));\n  console[method].apply(console, args); // eslint-disable-line no-console\n}\n\nexport var None  = 0;\nexport var Error = 1;\nexport var Warn  = 2;\nexport var Info  = 3;\nexport var Debug = 4;\n\nexport default function(_, method) {\n  var level = _ || None;\n  return {\n    level: function(_) {\n      if (arguments.length) {\n        level = +_;\n        return this;\n      } else {\n        return level;\n      }\n    },\n    error: function() {\n      if (level >= Error) log(method || 'error', 'ERROR', arguments);\n      return this;\n    },\n    warn: function() {\n      if (level >= Warn) log(method || 'warn', 'WARN', arguments);\n      return this;\n    },\n    info: function() {\n      if (level >= Info) log(method || 'log', 'INFO', arguments);\n      return this;\n    },\n    debug: function() {\n      if (level >= Debug) log(method || 'log', 'DEBUG', arguments);\n      return this;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}