{"ast":null,"code":"import { dsvFormat } from 'd3-dsv';\nimport { extend, stringValue } from 'vega-util';\nexport function delimitedFormat(delimiter) {\n  const parse = function (data, format) {\n    const delim = {\n      delimiter: delimiter\n    };\n    return dsv(data, format ? extend(format, delim) : delim);\n  };\n\n  parse.responseType = 'text';\n  return parse;\n}\nexport default function dsv(data, format) {\n  if (format.header) {\n    data = format.header.map(stringValue).join(format.delimiter) + '\\n' + data;\n  }\n\n  return dsvFormat(format.delimiter).parse(data + '');\n}\ndsv.responseType = 'text';","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-loader/src/formats/dsv.js"],"names":["dsvFormat","extend","stringValue","delimitedFormat","delimiter","parse","data","format","delim","dsv","responseType","header","map","join"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,QAAxB;AACA,SAAQC,MAAR,EAAgBC,WAAhB,QAAkC,WAAlC;AAEA,OAAO,SAASC,eAAT,CAAyBC,SAAzB,EAAoC;AACzC,QAAMC,KAAK,GAAG,UAASC,IAAT,EAAeC,MAAf,EAAuB;AACnC,UAAMC,KAAK,GAAG;AAACJ,MAAAA,SAAS,EAAEA;AAAZ,KAAd;AACA,WAAOK,GAAG,CAACH,IAAD,EAAOC,MAAM,GAAGN,MAAM,CAACM,MAAD,EAASC,KAAT,CAAT,GAA2BA,KAAxC,CAAV;AACD,GAHD;;AAKAH,EAAAA,KAAK,CAACK,YAAN,GAAqB,MAArB;AAEA,SAAOL,KAAP;AACD;AAED,eAAe,SAASI,GAAT,CAAaH,IAAb,EAAmBC,MAAnB,EAA2B;AACxC,MAAIA,MAAM,CAACI,MAAX,EAAmB;AACjBL,IAAAA,IAAI,GAAGC,MAAM,CAACI,MAAP,CACJC,GADI,CACAV,WADA,EAEJW,IAFI,CAECN,MAAM,CAACH,SAFR,IAEqB,IAFrB,GAE4BE,IAFnC;AAGD;;AACD,SAAON,SAAS,CAACO,MAAM,CAACH,SAAR,CAAT,CAA4BC,KAA5B,CAAkCC,IAAI,GAAG,EAAzC,CAAP;AACD;AAEDG,GAAG,CAACC,YAAJ,GAAmB,MAAnB","sourcesContent":["import {dsvFormat} from 'd3-dsv';\nimport {extend, stringValue} from 'vega-util';\n\nexport function delimitedFormat(delimiter) {\n  const parse = function(data, format) {\n    const delim = {delimiter: delimiter};\n    return dsv(data, format ? extend(format, delim) : delim);\n  };\n\n  parse.responseType = 'text';\n\n  return parse;\n}\n\nexport default function dsv(data, format) {\n  if (format.header) {\n    data = format.header\n      .map(stringValue)\n      .join(format.delimiter) + '\\n' + data;\n  }\n  return dsvFormat(format.delimiter).parse(data + '');\n}\n\ndsv.responseType = 'text';\n"]},"metadata":{},"sourceType":"module"}