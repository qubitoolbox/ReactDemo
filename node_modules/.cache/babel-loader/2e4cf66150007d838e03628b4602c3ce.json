{"ast":null,"code":"import { codegen, constants, functions } from 'vega-expression';\nimport { isTuple } from 'vega-dataflow';\nimport { selectionTest, selectionResolve, selectionVisitor } from 'vega-selections';\nimport { random, cumulativeNormal, cumulativeLogNormal, cumulativeUniform, densityNormal, densityLogNormal, densityUniform, quantileNormal, quantileLogNormal, quantileUniform, sampleNormal, sampleLogNormal, sampleUniform } from 'vega-statistics';\nimport { timeOffset, timeSequence, timeUnitSpecifier, utcOffset, utcSequence } from 'vega-time';\nimport { isArray, isBoolean, isDate, isNumber, isObject, isRegExp, isString, panLinear, panLog, panPow, panSymlog, zoomLinear, zoomLog, zoomPow, zoomSymlog, toBoolean, toDate, toNumber, toString, clampRange, extent, flush, inrange, lerp, pad, peek, quarter, utcquarter, span, stringValue, truncate } from 'vega-util';\nimport { range as sequence } from 'd3-array';\nimport { rgb, lab, hcl, hsl } from 'd3-color';\nimport { luminance, contrast } from './luminance';\nimport { data, indata, setdata } from './data';\nimport { default as encode } from './encode';\nimport { format, utcFormat, timeFormat, utcParse, timeParse, monthFormat, monthAbbrevFormat, dayFormat, dayAbbrevFormat } from './format';\nimport { geoArea, geoBounds, geoCentroid } from './geo';\nimport { default as inScope } from './inscope';\nimport { default as intersect } from './intersect';\nimport { warn, info, debug } from './log';\nimport { default as merge } from './merge';\nimport { default as modify } from './modify';\nimport { pinchDistance, pinchAngle } from './pinch';\nimport { range, domain, bandwidth, bandspace, copy, scale, invert } from './scale';\nimport { default as scaleGradient } from './scale-gradient';\nimport { geoShape, pathShape } from './shape';\nimport { treePath, treeAncestors } from './tree';\nimport { containerSize, screen, windowSize } from './window';\nimport { dataVisitor, indataVisitor, scaleVisitor } from './visitors';\nimport { SignalPrefix } from './prefix'; // Expression function context object\n\nexport const functionContext = {\n  random: function () {\n    return random();\n  },\n  // override default\n  cumulativeNormal,\n  cumulativeLogNormal,\n  cumulativeUniform,\n  densityNormal,\n  densityLogNormal,\n  densityUniform,\n  quantileNormal,\n  quantileLogNormal,\n  quantileUniform,\n  sampleNormal,\n  sampleLogNormal,\n  sampleUniform,\n  isArray,\n  isBoolean,\n  isDate,\n  isDefined: function (_) {\n    return _ !== undefined;\n  },\n  isNumber,\n  isObject,\n  isRegExp,\n  isString,\n  isTuple,\n  isValid: function (_) {\n    return _ != null && _ === _;\n  },\n  toBoolean,\n  toDate,\n  toNumber,\n  toString,\n  flush,\n  lerp,\n  merge,\n  pad,\n  peek,\n  span,\n  inrange,\n  truncate,\n  rgb,\n  lab,\n  hcl,\n  hsl,\n  luminance,\n  contrast,\n  sequence,\n  format,\n  utcFormat,\n  utcParse,\n  utcOffset,\n  utcSequence,\n  timeFormat,\n  timeParse,\n  timeOffset,\n  timeSequence,\n  timeUnitSpecifier,\n  monthFormat,\n  monthAbbrevFormat,\n  dayFormat,\n  dayAbbrevFormat,\n  quarter,\n  utcquarter,\n  warn,\n  info,\n  debug,\n  extent,\n  inScope,\n  intersect,\n  clampRange,\n  pinchDistance,\n  pinchAngle,\n  screen,\n  containerSize,\n  windowSize,\n  bandspace,\n  setdata,\n  pathShape,\n  panLinear,\n  panLog,\n  panPow,\n  panSymlog,\n  zoomLinear,\n  zoomLog,\n  zoomPow,\n  zoomSymlog,\n  encode,\n  modify\n};\nconst eventFunctions = ['view', 'item', 'group', 'xy', 'x', 'y'],\n      // event functions\neventPrefix = 'event.vega.',\n      // event function prefix\nthisPrefix = 'this.',\n      // function context prefix\nastVisitors = {}; // AST visitors for dependency analysis\n// Build expression function registry\n\nfunction buildFunctions(codegen) {\n  const fn = functions(codegen);\n  eventFunctions.forEach(name => fn[name] = eventPrefix + name);\n\n  for (let name in functionContext) {\n    fn[name] = thisPrefix + name;\n  }\n\n  return fn;\n} // Register an expression function\n\n\nexport function expressionFunction(name, fn, visitor) {\n  if (arguments.length === 1) {\n    return functionContext[name];\n  } // register with the functionContext\n\n\n  functionContext[name] = fn; // if there is an astVisitor register that, too\n\n  if (visitor) astVisitors[name] = visitor; // if the code generator has already been initialized,\n  // we need to also register the function with it\n\n  if (codeGenerator) codeGenerator.functions[name] = thisPrefix + name;\n  return this;\n} // register expression functions with ast visitors\n\nexpressionFunction('bandwidth', bandwidth, scaleVisitor);\nexpressionFunction('copy', copy, scaleVisitor);\nexpressionFunction('domain', domain, scaleVisitor);\nexpressionFunction('range', range, scaleVisitor);\nexpressionFunction('invert', invert, scaleVisitor);\nexpressionFunction('scale', scale, scaleVisitor);\nexpressionFunction('gradient', scaleGradient, scaleVisitor);\nexpressionFunction('geoArea', geoArea, scaleVisitor);\nexpressionFunction('geoBounds', geoBounds, scaleVisitor);\nexpressionFunction('geoCentroid', geoCentroid, scaleVisitor);\nexpressionFunction('geoShape', geoShape, scaleVisitor);\nexpressionFunction('indata', indata, indataVisitor);\nexpressionFunction('data', data, dataVisitor);\nexpressionFunction('treePath', treePath, dataVisitor);\nexpressionFunction('treeAncestors', treeAncestors, dataVisitor); // register Vega-Lite selection functions\n\nexpressionFunction('vlSelectionTest', selectionTest, selectionVisitor);\nexpressionFunction('vlSelectionResolve', selectionResolve, selectionVisitor); // Export code generator and parameters\n\nexport const codegenParams = {\n  blacklist: ['_'],\n  whitelist: ['datum', 'event', 'item'],\n  fieldvar: 'datum',\n  globalvar: function (id) {\n    return '_[' + stringValue(SignalPrefix + id) + ']';\n  },\n  functions: buildFunctions,\n  constants: constants,\n  visitors: astVisitors\n};\nexport var codeGenerator = codegen(codegenParams);","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-functions/src/codegen.js"],"names":["codegen","constants","functions","isTuple","selectionTest","selectionResolve","selectionVisitor","random","cumulativeNormal","cumulativeLogNormal","cumulativeUniform","densityNormal","densityLogNormal","densityUniform","quantileNormal","quantileLogNormal","quantileUniform","sampleNormal","sampleLogNormal","sampleUniform","timeOffset","timeSequence","timeUnitSpecifier","utcOffset","utcSequence","isArray","isBoolean","isDate","isNumber","isObject","isRegExp","isString","panLinear","panLog","panPow","panSymlog","zoomLinear","zoomLog","zoomPow","zoomSymlog","toBoolean","toDate","toNumber","toString","clampRange","extent","flush","inrange","lerp","pad","peek","quarter","utcquarter","span","stringValue","truncate","range","sequence","rgb","lab","hcl","hsl","luminance","contrast","data","indata","setdata","default","encode","format","utcFormat","timeFormat","utcParse","timeParse","monthFormat","monthAbbrevFormat","dayFormat","dayAbbrevFormat","geoArea","geoBounds","geoCentroid","inScope","intersect","warn","info","debug","merge","modify","pinchDistance","pinchAngle","domain","bandwidth","bandspace","copy","scale","invert","scaleGradient","geoShape","pathShape","treePath","treeAncestors","containerSize","screen","windowSize","dataVisitor","indataVisitor","scaleVisitor","SignalPrefix","functionContext","isDefined","_","undefined","isValid","eventFunctions","eventPrefix","thisPrefix","astVisitors","buildFunctions","fn","forEach","name","expressionFunction","visitor","arguments","length","codeGenerator","codegenParams","blacklist","whitelist","fieldvar","globalvar","id","visitors"],"mappings":"AAAA,SACEA,OADF,EAEEC,SAFF,EAGEC,SAHF,QAIO,iBAJP;AAMA,SACEC,OADF,QAEO,eAFP;AAIA,SACEC,aADF,EAEEC,gBAFF,EAGEC,gBAHF,QAIO,iBAJP;AAMA,SACEC,MADF,EAEEC,gBAFF,EAGEC,mBAHF,EAIEC,iBAJF,EAKEC,aALF,EAMEC,gBANF,EAOEC,cAPF,EAQEC,cARF,EASEC,iBATF,EAUEC,eAVF,EAWEC,YAXF,EAYEC,eAZF,EAaEC,aAbF,QAcO,iBAdP;AAgBA,SACEC,UADF,EAEEC,YAFF,EAGEC,iBAHF,EAIEC,SAJF,EAKEC,WALF,QAMO,WANP;AAQA,SACEC,OADF,EAEEC,SAFF,EAGEC,MAHF,EAIEC,QAJF,EAKEC,QALF,EAMEC,QANF,EAOEC,QAPF,EAQEC,SARF,EASEC,MATF,EAUEC,MAVF,EAWEC,SAXF,EAYEC,UAZF,EAaEC,OAbF,EAcEC,OAdF,EAeEC,UAfF,EAgBEC,SAhBF,EAiBEC,MAjBF,EAkBEC,QAlBF,EAmBEC,QAnBF,EAoBEC,UApBF,EAqBEC,MArBF,EAsBEC,KAtBF,EAuBEC,OAvBF,EAwBEC,IAxBF,EAyBEC,GAzBF,EA0BEC,IA1BF,EA2BEC,OA3BF,EA4BEC,UA5BF,EA6BEC,IA7BF,EA8BEC,WA9BF,EA+BEC,QA/BF,QAgCO,WAhCP;AAkCA,SACEC,KAAK,IAAIC,QADX,QAEO,UAFP;AAIA,SACEC,GADF,EAEEC,GAFF,EAGEC,GAHF,EAIEC,GAJF,QAKO,UALP;AAOA,SACEC,SADF,EAEEC,QAFF,QAGO,aAHP;AAKA,SACEC,IADF,EAEEC,MAFF,EAGEC,OAHF,QAIO,QAJP;AAMA,SACEC,OAAO,IAAIC,MADb,QAEO,UAFP;AAIA,SACEC,MADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,QAJF,EAKEC,SALF,EAMEC,WANF,EAOEC,iBAPF,EAQEC,SARF,EASEC,eATF,QAUO,UAVP;AAYA,SACEC,OADF,EAEEC,SAFF,EAGEC,WAHF,QAIO,OAJP;AAMA,SACEb,OAAO,IAAIc,OADb,QAEO,WAFP;AAIA,SACEd,OAAO,IAAIe,SADb,QAEO,aAFP;AAIA,SACEC,IADF,EAEEC,IAFF,EAGEC,KAHF,QAIO,OAJP;AAMA,SACElB,OAAO,IAAImB,KADb,QAEO,SAFP;AAIA,SACEnB,OAAO,IAAIoB,MADb,QAEO,UAFP;AAIA,SACEC,aADF,EAEEC,UAFF,QAGO,SAHP;AAKA,SACEjC,KADF,EAEEkC,MAFF,EAGEC,SAHF,EAIEC,SAJF,EAKEC,IALF,EAMEC,KANF,EAOEC,MAPF,QAQO,SARP;AAUA,SACE5B,OAAO,IAAI6B,aADb,QAEO,kBAFP;AAIA,SACEC,QADF,EAEEC,SAFF,QAGO,SAHP;AAKA,SACEC,QADF,EAEEC,aAFF,QAGO,QAHP;AAKA,SACEC,aADF,EAEEC,MAFF,EAGEC,UAHF,QAIO,UAJP;AAMA,SACEC,WADF,EAEEC,aAFF,EAGEC,YAHF,QAIO,YAJP;AAMA,SAAQC,YAAR,QAA2B,UAA3B,C,CAEA;;AACA,OAAO,MAAMC,eAAe,GAAG;AAC7BrG,EAAAA,MAAM,EAAE,YAAW;AAAE,WAAOA,MAAM,EAAb;AAAkB,GADV;AACY;AACzCC,EAAAA,gBAF6B;AAG7BC,EAAAA,mBAH6B;AAI7BC,EAAAA,iBAJ6B;AAK7BC,EAAAA,aAL6B;AAM7BC,EAAAA,gBAN6B;AAO7BC,EAAAA,cAP6B;AAQ7BC,EAAAA,cAR6B;AAS7BC,EAAAA,iBAT6B;AAU7BC,EAAAA,eAV6B;AAW7BC,EAAAA,YAX6B;AAY7BC,EAAAA,eAZ6B;AAa7BC,EAAAA,aAb6B;AAc7BM,EAAAA,OAd6B;AAe7BC,EAAAA,SAf6B;AAgB7BC,EAAAA,MAhB6B;AAiB7BkF,EAAAA,SAAS,EAAE,UAASC,CAAT,EAAY;AAAE,WAAOA,CAAC,KAAKC,SAAb;AAAyB,GAjBrB;AAkB7BnF,EAAAA,QAlB6B;AAmB7BC,EAAAA,QAnB6B;AAoB7BC,EAAAA,QApB6B;AAqB7BC,EAAAA,QArB6B;AAsB7B5B,EAAAA,OAtB6B;AAuB7B6G,EAAAA,OAAO,EAAE,UAASF,CAAT,EAAY;AAAE,WAAOA,CAAC,IAAI,IAAL,IAAaA,CAAC,KAAKA,CAA1B;AAA8B,GAvBxB;AAwB7BtE,EAAAA,SAxB6B;AAyB7BC,EAAAA,MAzB6B;AA0B7BC,EAAAA,QA1B6B;AA2B7BC,EAAAA,QA3B6B;AA4B7BG,EAAAA,KA5B6B;AA6B7BE,EAAAA,IA7B6B;AA8B7BsC,EAAAA,KA9B6B;AA+B7BrC,EAAAA,GA/B6B;AAgC7BC,EAAAA,IAhC6B;AAiC7BG,EAAAA,IAjC6B;AAkC7BN,EAAAA,OAlC6B;AAmC7BQ,EAAAA,QAnC6B;AAoC7BG,EAAAA,GApC6B;AAqC7BC,EAAAA,GArC6B;AAsC7BC,EAAAA,GAtC6B;AAuC7BC,EAAAA,GAvC6B;AAwC7BC,EAAAA,SAxC6B;AAyC7BC,EAAAA,QAzC6B;AA0C7BN,EAAAA,QA1C6B;AA2C7BY,EAAAA,MA3C6B;AA4C7BC,EAAAA,SA5C6B;AA6C7BE,EAAAA,QA7C6B;AA8C7BjD,EAAAA,SA9C6B;AA+C7BC,EAAAA,WA/C6B;AAgD7B+C,EAAAA,UAhD6B;AAiD7BE,EAAAA,SAjD6B;AAkD7BrD,EAAAA,UAlD6B;AAmD7BC,EAAAA,YAnD6B;AAoD7BC,EAAAA,iBApD6B;AAqD7BoD,EAAAA,WArD6B;AAsD7BC,EAAAA,iBAtD6B;AAuD7BC,EAAAA,SAvD6B;AAwD7BC,EAAAA,eAxD6B;AAyD7B1B,EAAAA,OAzD6B;AA0D7BC,EAAAA,UA1D6B;AA2D7B+B,EAAAA,IA3D6B;AA4D7BC,EAAAA,IA5D6B;AA6D7BC,EAAAA,KA7D6B;AA8D7BxC,EAAAA,MA9D6B;AA+D7BoC,EAAAA,OA/D6B;AAgE7BC,EAAAA,SAhE6B;AAiE7BtC,EAAAA,UAjE6B;AAkE7B4C,EAAAA,aAlE6B;AAmE7BC,EAAAA,UAnE6B;AAoE7Ba,EAAAA,MApE6B;AAqE7BD,EAAAA,aArE6B;AAsE7BE,EAAAA,UAtE6B;AAuE7BX,EAAAA,SAvE6B;AAwE7B1B,EAAAA,OAxE6B;AAyE7BgC,EAAAA,SAzE6B;AA0E7BlE,EAAAA,SA1E6B;AA2E7BC,EAAAA,MA3E6B;AA4E7BC,EAAAA,MA5E6B;AA6E7BC,EAAAA,SA7E6B;AA8E7BC,EAAAA,UA9E6B;AA+E7BC,EAAAA,OA/E6B;AAgF7BC,EAAAA,OAhF6B;AAiF7BC,EAAAA,UAjF6B;AAkF7B6B,EAAAA,MAlF6B;AAmF7BmB,EAAAA;AAnF6B,CAAxB;AAsFP,MAAM0B,cAAc,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,EAA0B,IAA1B,EAAgC,GAAhC,EAAqC,GAArC,CAAvB;AAAA,MAAkE;AAC5DC,WAAW,GAAG,aADpB;AAAA,MACmC;AAC7BC,UAAU,GAAG,OAFnB;AAAA,MAE4B;AACtBC,WAAW,GAAG,EAHpB,C,CAGwB;AAExB;;AACA,SAASC,cAAT,CAAwBrH,OAAxB,EAAiC;AAC/B,QAAMsH,EAAE,GAAGpH,SAAS,CAACF,OAAD,CAApB;AACAiH,EAAAA,cAAc,CAACM,OAAf,CAAuBC,IAAI,IAAIF,EAAE,CAACE,IAAD,CAAF,GAAWN,WAAW,GAAGM,IAAxD;;AACA,OAAK,IAAIA,IAAT,IAAiBZ,eAAjB,EAAkC;AAAEU,IAAAA,EAAE,CAACE,IAAD,CAAF,GAAWL,UAAU,GAAGK,IAAxB;AAA+B;;AACnE,SAAOF,EAAP;AACD,C,CAED;;;AACA,OAAO,SAASG,kBAAT,CAA4BD,IAA5B,EAAkCF,EAAlC,EAAsCI,OAAtC,EAA+C;AACpD,MAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,WAAOhB,eAAe,CAACY,IAAD,CAAtB;AACD,GAHmD,CAKpD;;;AACAZ,EAAAA,eAAe,CAACY,IAAD,CAAf,GAAwBF,EAAxB,CANoD,CAQpD;;AACA,MAAII,OAAJ,EAAaN,WAAW,CAACI,IAAD,CAAX,GAAoBE,OAApB,CATuC,CAWpD;AACA;;AACA,MAAIG,aAAJ,EAAmBA,aAAa,CAAC3H,SAAd,CAAwBsH,IAAxB,IAAgCL,UAAU,GAAGK,IAA7C;AACnB,SAAO,IAAP;AACD,C,CAED;;AACAC,kBAAkB,CAAC,WAAD,EAAc9B,SAAd,EAAyBe,YAAzB,CAAlB;AACAe,kBAAkB,CAAC,MAAD,EAAS5B,IAAT,EAAea,YAAf,CAAlB;AACAe,kBAAkB,CAAC,QAAD,EAAW/B,MAAX,EAAmBgB,YAAnB,CAAlB;AACAe,kBAAkB,CAAC,OAAD,EAAUjE,KAAV,EAAiBkD,YAAjB,CAAlB;AACAe,kBAAkB,CAAC,QAAD,EAAW1B,MAAX,EAAmBW,YAAnB,CAAlB;AACAe,kBAAkB,CAAC,OAAD,EAAU3B,KAAV,EAAiBY,YAAjB,CAAlB;AACAe,kBAAkB,CAAC,UAAD,EAAazB,aAAb,EAA4BU,YAA5B,CAAlB;AACAe,kBAAkB,CAAC,SAAD,EAAY3C,OAAZ,EAAqB4B,YAArB,CAAlB;AACAe,kBAAkB,CAAC,WAAD,EAAc1C,SAAd,EAAyB2B,YAAzB,CAAlB;AACAe,kBAAkB,CAAC,aAAD,EAAgBzC,WAAhB,EAA6B0B,YAA7B,CAAlB;AACAe,kBAAkB,CAAC,UAAD,EAAaxB,QAAb,EAAuBS,YAAvB,CAAlB;AACAe,kBAAkB,CAAC,QAAD,EAAWxD,MAAX,EAAmBwC,aAAnB,CAAlB;AACAgB,kBAAkB,CAAC,MAAD,EAASzD,IAAT,EAAewC,WAAf,CAAlB;AACAiB,kBAAkB,CAAC,UAAD,EAAatB,QAAb,EAAuBK,WAAvB,CAAlB;AACAiB,kBAAkB,CAAC,eAAD,EAAkBrB,aAAlB,EAAiCI,WAAjC,CAAlB,C,CAEA;;AACAiB,kBAAkB,CAAC,iBAAD,EAAoBrH,aAApB,EAAmCE,gBAAnC,CAAlB;AACAmH,kBAAkB,CAAC,oBAAD,EAAuBpH,gBAAvB,EAAyCC,gBAAzC,CAAlB,C,CAEA;;AACA,OAAO,MAAMwH,aAAa,GAAG;AAC3BC,EAAAA,SAAS,EAAG,CAAC,GAAD,CADe;AAE3BC,EAAAA,SAAS,EAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,MAAnB,CAFe;AAG3BC,EAAAA,QAAQ,EAAI,OAHe;AAI3BC,EAAAA,SAAS,EAAG,UAASC,EAAT,EAAa;AAAE,WAAO,OAAO7E,WAAW,CAACqD,YAAY,GAAGwB,EAAhB,CAAlB,GAAwC,GAA/C;AAAqD,GAJrD;AAK3BjI,EAAAA,SAAS,EAAGmH,cALe;AAM3BpH,EAAAA,SAAS,EAAGA,SANe;AAO3BmI,EAAAA,QAAQ,EAAIhB;AAPe,CAAtB;AAUP,OAAO,IAAIS,aAAa,GAAG7H,OAAO,CAAC8H,aAAD,CAA3B","sourcesContent":["import {\n  codegen,\n  constants,\n  functions\n} from 'vega-expression';\n\nimport {\n  isTuple\n} from 'vega-dataflow';\n\nimport {\n  selectionTest,\n  selectionResolve,\n  selectionVisitor\n} from 'vega-selections';\n\nimport {\n  random,\n  cumulativeNormal,\n  cumulativeLogNormal,\n  cumulativeUniform,\n  densityNormal,\n  densityLogNormal,\n  densityUniform,\n  quantileNormal,\n  quantileLogNormal,\n  quantileUniform,\n  sampleNormal,\n  sampleLogNormal,\n  sampleUniform\n} from 'vega-statistics';\n\nimport {\n  timeOffset,\n  timeSequence,\n  timeUnitSpecifier,\n  utcOffset,\n  utcSequence\n} from 'vega-time';\n\nimport {\n  isArray,\n  isBoolean,\n  isDate,\n  isNumber,\n  isObject,\n  isRegExp,\n  isString,\n  panLinear,\n  panLog,\n  panPow,\n  panSymlog,\n  zoomLinear,\n  zoomLog,\n  zoomPow,\n  zoomSymlog,\n  toBoolean,\n  toDate,\n  toNumber,\n  toString,\n  clampRange,\n  extent,\n  flush,\n  inrange,\n  lerp,\n  pad,\n  peek,\n  quarter,\n  utcquarter,\n  span,\n  stringValue,\n  truncate\n} from 'vega-util';\n\nimport {\n  range as sequence\n} from 'd3-array';\n\nimport {\n  rgb,\n  lab,\n  hcl,\n  hsl\n} from 'd3-color';\n\nimport {\n  luminance,\n  contrast\n} from './luminance';\n\nimport {\n  data,\n  indata,\n  setdata\n} from './data';\n\nimport {\n  default as encode\n} from './encode';\n\nimport {\n  format,\n  utcFormat,\n  timeFormat,\n  utcParse,\n  timeParse,\n  monthFormat,\n  monthAbbrevFormat,\n  dayFormat,\n  dayAbbrevFormat\n} from './format';\n\nimport {\n  geoArea,\n  geoBounds,\n  geoCentroid\n} from './geo';\n\nimport {\n  default as inScope\n} from './inscope';\n\nimport {\n  default as intersect\n} from './intersect';\n\nimport {\n  warn,\n  info,\n  debug\n} from './log';\n\nimport {\n  default as merge\n} from './merge';\n\nimport {\n  default as modify\n} from './modify';\n\nimport {\n  pinchDistance,\n  pinchAngle\n} from './pinch';\n\nimport {\n  range,\n  domain,\n  bandwidth,\n  bandspace,\n  copy,\n  scale,\n  invert\n} from './scale';\n\nimport {\n  default as scaleGradient\n} from './scale-gradient';\n\nimport {\n  geoShape,\n  pathShape\n} from './shape';\n\nimport {\n  treePath,\n  treeAncestors\n} from './tree';\n\nimport {\n  containerSize,\n  screen,\n  windowSize\n} from './window';\n\nimport {\n  dataVisitor,\n  indataVisitor,\n  scaleVisitor\n} from './visitors';\n\nimport {SignalPrefix} from './prefix';\n\n// Expression function context object\nexport const functionContext = {\n  random: function() { return random(); }, // override default\n  cumulativeNormal,\n  cumulativeLogNormal,\n  cumulativeUniform,\n  densityNormal,\n  densityLogNormal,\n  densityUniform,\n  quantileNormal,\n  quantileLogNormal,\n  quantileUniform,\n  sampleNormal,\n  sampleLogNormal,\n  sampleUniform,\n  isArray,\n  isBoolean,\n  isDate,\n  isDefined: function(_) { return _ !== undefined; },\n  isNumber,\n  isObject,\n  isRegExp,\n  isString,\n  isTuple,\n  isValid: function(_) { return _ != null && _ === _; },\n  toBoolean,\n  toDate,\n  toNumber,\n  toString,\n  flush,\n  lerp,\n  merge,\n  pad,\n  peek,\n  span,\n  inrange,\n  truncate,\n  rgb,\n  lab,\n  hcl,\n  hsl,\n  luminance,\n  contrast,\n  sequence,\n  format,\n  utcFormat,\n  utcParse,\n  utcOffset,\n  utcSequence,\n  timeFormat,\n  timeParse,\n  timeOffset,\n  timeSequence,\n  timeUnitSpecifier,\n  monthFormat,\n  monthAbbrevFormat,\n  dayFormat,\n  dayAbbrevFormat,\n  quarter,\n  utcquarter,\n  warn,\n  info,\n  debug,\n  extent,\n  inScope,\n  intersect,\n  clampRange,\n  pinchDistance,\n  pinchAngle,\n  screen,\n  containerSize,\n  windowSize,\n  bandspace,\n  setdata,\n  pathShape,\n  panLinear,\n  panLog,\n  panPow,\n  panSymlog,\n  zoomLinear,\n  zoomLog,\n  zoomPow,\n  zoomSymlog,\n  encode,\n  modify\n};\n\nconst eventFunctions = ['view', 'item', 'group', 'xy', 'x', 'y'], // event functions\n      eventPrefix = 'event.vega.', // event function prefix\n      thisPrefix = 'this.', // function context prefix\n      astVisitors = {}; // AST visitors for dependency analysis\n\n// Build expression function registry\nfunction buildFunctions(codegen) {\n  const fn = functions(codegen);\n  eventFunctions.forEach(name => fn[name] = eventPrefix + name);\n  for (let name in functionContext) { fn[name] = thisPrefix + name; }\n  return fn;\n}\n\n// Register an expression function\nexport function expressionFunction(name, fn, visitor) {\n  if (arguments.length === 1) {\n    return functionContext[name];\n  }\n\n  // register with the functionContext\n  functionContext[name] = fn;\n\n  // if there is an astVisitor register that, too\n  if (visitor) astVisitors[name] = visitor;\n\n  // if the code generator has already been initialized,\n  // we need to also register the function with it\n  if (codeGenerator) codeGenerator.functions[name] = thisPrefix + name;\n  return this;\n}\n\n// register expression functions with ast visitors\nexpressionFunction('bandwidth', bandwidth, scaleVisitor);\nexpressionFunction('copy', copy, scaleVisitor);\nexpressionFunction('domain', domain, scaleVisitor);\nexpressionFunction('range', range, scaleVisitor);\nexpressionFunction('invert', invert, scaleVisitor);\nexpressionFunction('scale', scale, scaleVisitor);\nexpressionFunction('gradient', scaleGradient, scaleVisitor);\nexpressionFunction('geoArea', geoArea, scaleVisitor);\nexpressionFunction('geoBounds', geoBounds, scaleVisitor);\nexpressionFunction('geoCentroid', geoCentroid, scaleVisitor);\nexpressionFunction('geoShape', geoShape, scaleVisitor);\nexpressionFunction('indata', indata, indataVisitor);\nexpressionFunction('data', data, dataVisitor);\nexpressionFunction('treePath', treePath, dataVisitor);\nexpressionFunction('treeAncestors', treeAncestors, dataVisitor);\n\n// register Vega-Lite selection functions\nexpressionFunction('vlSelectionTest', selectionTest, selectionVisitor);\nexpressionFunction('vlSelectionResolve', selectionResolve, selectionVisitor);\n\n// Export code generator and parameters\nexport const codegenParams = {\n  blacklist:  ['_'],\n  whitelist:  ['datum', 'event', 'item'],\n  fieldvar:   'datum',\n  globalvar:  function(id) { return '_[' + stringValue(SignalPrefix + id) + ']'; },\n  functions:  buildFunctions,\n  constants:  constants,\n  visitors:   astVisitors\n};\n\nexport var codeGenerator = codegen(codegenParams);\n"]},"metadata":{},"sourceType":"module"}