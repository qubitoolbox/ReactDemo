{"ast":null,"code":"import { getFirstDefined } from '../../../util';\nimport { getMarkConfig } from '../../common';\nconst ALIGNED_X_CHANNEL = {\n  left: 'x',\n  center: 'xc',\n  right: 'x2'\n};\nconst BASELINED_Y_CHANNEL = {\n  top: 'y',\n  middle: 'yc',\n  bottom: 'y2'\n};\nexport function alignedPositionChannel(channel, markDef, config) {\n  const alignChannel = channel === 'x' ? 'align' : 'baseline';\n  const align = getFirstDefined(markDef[alignChannel], getMarkConfig(alignChannel, markDef, config));\n\n  if (channel === 'x') {\n    return ALIGNED_X_CHANNEL[align !== null && align !== void 0 ? align : 'center'];\n  } else {\n    return BASELINED_Y_CHANNEL[align !== null && align !== void 0 ? align : 'middle'];\n  }\n}","map":{"version":3,"sources":["../../../../../src/compile/mark/encode/position-align.ts"],"names":[],"mappings":"AAGA,SAAQ,eAAR,QAA8B,eAA9B;AAEA,SAAQ,aAAR,QAA4B,cAA5B;AAEA,MAAM,iBAAiB,GAAoC;AACzD,EAAA,IAAI,EAAE,GADmD;AAEzD,EAAA,MAAM,EAAE,IAFiD;AAGzD,EAAA,KAAK,EAAE;AAHkD,CAA3D;AAMA,MAAM,mBAAmB,GAAG;AAC1B,EAAA,GAAG,EAAE,GADqB;AAE1B,EAAA,MAAM,EAAE,IAFkB;AAG1B,EAAA,MAAM,EAAE;AAHkB,CAA5B;AAMA,OAAM,SAAU,sBAAV,CAAiC,OAAjC,EAAqD,OAArD,EAAuE,MAAvE,EAAqF;AACzF,QAAM,YAAY,GAAG,OAAO,KAAK,GAAZ,GAAkB,OAAlB,GAA4B,UAAjD;AACA,QAAM,KAAK,GAAG,eAAe,CAAC,OAAO,CAAC,YAAD,CAAR,EAAwB,aAAa,CAAC,YAAD,EAAe,OAAf,EAAwB,MAAxB,CAArC,CAA7B;;AACA,MAAI,OAAO,KAAK,GAAhB,EAAqB;AACnB,WAAO,iBAAiB,CAAC,KAAK,KAAA,IAAL,IAAA,KAAK,KAAA,KAAA,CAAL,GAAA,KAAA,GAAS,QAAV,CAAxB;AACD,GAFD,MAEO;AACL,WAAO,mBAAmB,CAAC,KAAK,KAAA,IAAL,IAAA,KAAK,KAAA,KAAA,CAAL,GAAA,KAAA,GAAS,QAAV,CAA1B;AACD;AACF","sourcesContent":["import {Align} from 'vega';\nimport {Config} from '../../../config';\nimport {MarkDef} from '../../../mark';\nimport {getFirstDefined} from '../../../util';\nimport {VgEncodeChannel} from '../../../vega.schema';\nimport {getMarkConfig} from '../../common';\n\nconst ALIGNED_X_CHANNEL: {[a in Align]: VgEncodeChannel} = {\n  left: 'x',\n  center: 'xc',\n  right: 'x2'\n} as const;\n\nconst BASELINED_Y_CHANNEL = {\n  top: 'y',\n  middle: 'yc',\n  bottom: 'y2'\n} as const;\n\nexport function alignedPositionChannel(channel: 'x' | 'y', markDef: MarkDef, config: Config) {\n  const alignChannel = channel === 'x' ? 'align' : 'baseline';\n  const align = getFirstDefined(markDef[alignChannel], getMarkConfig(alignChannel, markDef, config));\n  if (channel === 'x') {\n    return ALIGNED_X_CHANNEL[align ?? 'center'];\n  } else {\n    return BASELINED_Y_CHANNEL[align ?? 'middle'];\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}