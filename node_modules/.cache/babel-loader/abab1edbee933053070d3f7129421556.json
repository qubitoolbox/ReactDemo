{"ast":null,"code":"/**\n * Return an array with minimum and maximum values, in the\n * form [min, max]. Ignores null, undefined, and NaN values.\n */\nexport default function (array, f) {\n  var i = 0,\n      n,\n      v,\n      min,\n      max;\n\n  if (array && (n = array.length)) {\n    if (f == null) {\n      // find first valid value\n      for (v = array[i]; i < n && (v == null || v !== v); v = array[++i]);\n\n      min = max = v; // visit all other values\n\n      for (; i < n; ++i) {\n        v = array[i]; // skip null/undefined; NaN will fail all comparisons\n\n        if (v != null) {\n          if (v < min) min = v;\n          if (v > max) max = v;\n        }\n      }\n    } else {\n      // find first valid value\n      for (v = f(array[i]); i < n && (v == null || v !== v); v = f(array[++i]));\n\n      min = max = v; // visit all other values\n\n      for (; i < n; ++i) {\n        v = f(array[i]); // skip null/undefined; NaN will fail all comparisons\n\n        if (v != null) {\n          if (v < min) min = v;\n          if (v > max) max = v;\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-lite/node_modules/vega-util/src/extent.js"],"names":["array","f","i","n","v","min","max","length"],"mappings":"AAAA;;;;AAIA,eAAe,UAASA,KAAT,EAAgBC,CAAhB,EAAmB;AAChC,MAAIC,CAAC,GAAG,CAAR;AAAA,MAAWC,CAAX;AAAA,MAAcC,CAAd;AAAA,MAAiBC,GAAjB;AAAA,MAAsBC,GAAtB;;AAEA,MAAIN,KAAK,KAAKG,CAAC,GAAGH,KAAK,CAACO,MAAf,CAAT,EAAiC;AAC/B,QAAIN,CAAC,IAAI,IAAT,EAAe;AACb;AACA,WAAKG,CAAC,GAAGJ,KAAK,CAACE,CAAD,CAAd,EAAmBA,CAAC,GAAGC,CAAJ,KAAUC,CAAC,IAAI,IAAL,IAAaA,CAAC,KAAKA,CAA7B,CAAnB,EAAoDA,CAAC,GAAGJ,KAAK,CAAC,EAAEE,CAAH,CAA7D,CAAmE;;AACnEG,MAAAA,GAAG,GAAGC,GAAG,GAAGF,CAAZ,CAHa,CAKb;;AACA,aAAOF,CAAC,GAACC,CAAT,EAAY,EAAED,CAAd,EAAiB;AACfE,QAAAA,CAAC,GAAGJ,KAAK,CAACE,CAAD,CAAT,CADe,CAEf;;AACA,YAAIE,CAAC,IAAI,IAAT,EAAe;AACb,cAAIA,CAAC,GAAGC,GAAR,EAAaA,GAAG,GAAGD,CAAN;AACb,cAAIA,CAAC,GAAGE,GAAR,EAAaA,GAAG,GAAGF,CAAN;AACd;AACF;AACF,KAdD,MAcO;AACL;AACA,WAAKA,CAAC,GAAGH,CAAC,CAACD,KAAK,CAACE,CAAD,CAAN,CAAV,EAAsBA,CAAC,GAAGC,CAAJ,KAAUC,CAAC,IAAI,IAAL,IAAaA,CAAC,KAAKA,CAA7B,CAAtB,EAAuDA,CAAC,GAAGH,CAAC,CAACD,KAAK,CAAC,EAAEE,CAAH,CAAN,CAA5D,CAAyE;;AACzEG,MAAAA,GAAG,GAAGC,GAAG,GAAGF,CAAZ,CAHK,CAKL;;AACA,aAAOF,CAAC,GAACC,CAAT,EAAY,EAAED,CAAd,EAAiB;AACfE,QAAAA,CAAC,GAAGH,CAAC,CAACD,KAAK,CAACE,CAAD,CAAN,CAAL,CADe,CAEf;;AACA,YAAIE,CAAC,IAAI,IAAT,EAAe;AACb,cAAIA,CAAC,GAAGC,GAAR,EAAaA,GAAG,GAAGD,CAAN;AACb,cAAIA,CAAC,GAAGE,GAAR,EAAaA,GAAG,GAAGF,CAAN;AACd;AACF;AACF;AACF;;AAED,SAAO,CAACC,GAAD,EAAMC,GAAN,CAAP;AACD","sourcesContent":["/**\n * Return an array with minimum and maximum values, in the\n * form [min, max]. Ignores null, undefined, and NaN values.\n */\nexport default function(array, f) {\n  var i = 0, n, v, min, max;\n\n  if (array && (n = array.length)) {\n    if (f == null) {\n      // find first valid value\n      for (v = array[i]; i < n && (v == null || v !== v); v = array[++i]);\n      min = max = v;\n\n      // visit all other values\n      for (; i<n; ++i) {\n        v = array[i];\n        // skip null/undefined; NaN will fail all comparisons\n        if (v != null) {\n          if (v < min) min = v;\n          if (v > max) max = v;\n        }\n      }\n    } else {\n      // find first valid value\n      for (v = f(array[i]); i < n && (v == null || v !== v); v = f(array[++i]));\n      min = max = v;\n\n      // visit all other values\n      for (; i<n; ++i) {\n        v = f(array[i]);\n        // skip null/undefined; NaN will fail all comparisons\n        if (v != null) {\n          if (v < min) min = v;\n          if (v > max) max = v;\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n"]},"metadata":{},"sourceType":"module"}