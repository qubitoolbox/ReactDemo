{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst histogram_1 = require(\"../render/histogram\");\n\nconst render_utils_1 = require(\"../render/render_utils\");\n\nconst math_1 = require(\"../util/math\");\n/**\n * Shows a histogram with the distribution of all values in a given tensor.\n *\n * ```js\n * const tensor = tf.tensor1d([0, 0, 0, 0, 2, 3, 4]);\n *\n * const surface = {name: 'Values Distribution', tab: 'Model Inspection'};\n * await tfvis.show.valuesDistribution(surface, tensor);\n * ```\n *\n */\n\n/**\n * @doc {heading: 'Models & Tensors', subheading: 'Model Inspection', namespace:\n * 'show'}\n */\n\n\nfunction valuesDistribution(container, tensor) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const drawArea = render_utils_1.getDrawArea(container);\n    const stats = yield math_1.tensorStats(tensor);\n    const values = yield tensor.data();\n    histogram_1.histogram(drawArea, values, {\n      height: 150,\n      stats\n    });\n  });\n}\n\nexports.valuesDistribution = valuesDistribution;","map":{"version":3,"sources":["../../src/show/tensor.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,MAAA,WAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AACA,MAAA,cAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;;AAEA,MAAA,MAAA,GAAA,OAAA,CAAA,cAAA,CAAA;AAEA;;;;;;;;;;;;AAWA;;;;;;AAIA,SAAsB,kBAAtB,CAAyC,SAAzC,EAA8D,MAA9D,EAA4E;;AAC1E,UAAM,QAAQ,GAAG,cAAA,CAAA,WAAA,CAAY,SAAZ,CAAjB;AACA,UAAM,KAAK,GAAG,MAAM,MAAA,CAAA,WAAA,CAAY,MAAZ,CAApB;AACA,UAAM,MAAM,GAAG,MAAM,MAAM,CAAC,IAAP,EAArB;AACA,IAAA,WAAA,CAAA,SAAA,CAAU,QAAV,EAAoB,MAApB,EAA4B;AAAC,MAAA,MAAM,EAAE,GAAT;AAAc,MAAA;AAAd,KAA5B;AACD,G;AAAA;;AALD,OAAA,CAAA,kBAAA,GAAA,kBAAA","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '@tensorflow/tfjs';\n\nimport {histogram} from '../render/histogram';\nimport {getDrawArea} from '../render/render_utils';\nimport {Drawable} from '../types';\nimport {tensorStats} from '../util/math';\n\n/**\n * Shows a histogram with the distribution of all values in a given tensor.\n *\n * ```js\n * const tensor = tf.tensor1d([0, 0, 0, 0, 2, 3, 4]);\n *\n * const surface = {name: 'Values Distribution', tab: 'Model Inspection'};\n * await tfvis.show.valuesDistribution(surface, tensor);\n * ```\n *\n */\n/**\n * @doc {heading: 'Models & Tensors', subheading: 'Model Inspection', namespace:\n * 'show'}\n */\nexport async function valuesDistribution(container: Drawable, tensor: Tensor) {\n  const drawArea = getDrawArea(container);\n  const stats = await tensorStats(tensor);\n  const values = await tensor.data();\n  histogram(drawArea, values, {height: 150, stats});\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}