{"ast":null,"code":"import { array, error, hasOwnProperty } from 'vega-util';\nexport const YEAR = 'year';\nexport const QUARTER = 'quarter';\nexport const MONTH = 'month';\nexport const WEEK = 'week';\nexport const DATE = 'date';\nexport const DAY = 'day';\nexport const HOURS = 'hours';\nexport const MINUTES = 'minutes';\nexport const SECONDS = 'seconds';\nexport const MILLISECONDS = 'milliseconds';\nconst UNITS = [YEAR, QUARTER, MONTH, WEEK, DATE, DAY, HOURS, MINUTES, SECONDS, MILLISECONDS].reduce((o, u, i) => (o[u] = 1 + i, o), {});\nexport function timeUnits(units) {\n  const u = array(units).slice(),\n        m = {}; // check validity\n\n  if (!u.length) error('Missing time unit.');\n  u.forEach(unit => {\n    if (hasOwnProperty(UNITS, unit)) {\n      m[unit] = 1;\n    } else {\n      error(`Invalid time unit: ${unit}.`);\n    }\n  });\n\n  if ((m[WEEK] || m[DAY]) && (m[QUARTER] || m[MONTH] || m[DATE])) {\n    error(`Incompatible time units: ${units}`);\n  } // ensure proper sort order\n\n\n  u.sort((a, b) => UNITS[a] - UNITS[b]);\n  return u;\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-time/src/units.js"],"names":["array","error","hasOwnProperty","YEAR","QUARTER","MONTH","WEEK","DATE","DAY","HOURS","MINUTES","SECONDS","MILLISECONDS","UNITS","reduce","o","u","i","timeUnits","units","slice","m","length","forEach","unit","sort","a","b"],"mappings":"AAAA,SAAQA,KAAR,EAAeC,KAAf,EAAsBC,cAAtB,QAA2C,WAA3C;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAb;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,KAAK,GAAG,OAAd;AACP,OAAO,MAAMC,IAAI,GAAG,MAAb;AACP,OAAO,MAAMC,IAAI,GAAG,MAAb;AACP,OAAO,MAAMC,GAAG,GAAG,KAAZ;AACP,OAAO,MAAMC,KAAK,GAAG,OAAd;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AAEP,MAAMC,KAAK,GAAG,CACZV,IADY,EAEZC,OAFY,EAGZC,KAHY,EAIZC,IAJY,EAKZC,IALY,EAMZC,GANY,EAOZC,KAPY,EAQZC,OARY,EASZC,OATY,EAUZC,YAVY,EAWZE,MAXY,CAWL,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,MAAcF,CAAC,CAACC,CAAD,CAAD,GAAO,IAAIC,CAAX,EAAcF,CAA5B,CAXK,EAW2B,EAX3B,CAAd;AAaA,OAAO,SAASG,SAAT,CAAmBC,KAAnB,EAA0B;AAC/B,QAAMH,CAAC,GAAGhB,KAAK,CAACmB,KAAD,CAAL,CAAaC,KAAb,EAAV;AAAA,QACMC,CAAC,GAAG,EADV,CAD+B,CAI/B;;AACA,MAAI,CAACL,CAAC,CAACM,MAAP,EAAerB,KAAK,CAAC,oBAAD,CAAL;AAEfe,EAAAA,CAAC,CAACO,OAAF,CAAUC,IAAI,IAAI;AAChB,QAAItB,cAAc,CAACW,KAAD,EAAQW,IAAR,CAAlB,EAAiC;AAC/BH,MAAAA,CAAC,CAACG,IAAD,CAAD,GAAU,CAAV;AACD,KAFD,MAEO;AACLvB,MAAAA,KAAK,CAAE,sBAAqBuB,IAAK,GAA5B,CAAL;AACD;AACF,GAND;;AAQA,MAAI,CAACH,CAAC,CAACf,IAAD,CAAD,IAAWe,CAAC,CAACb,GAAD,CAAb,MAAwBa,CAAC,CAACjB,OAAD,CAAD,IAAciB,CAAC,CAAChB,KAAD,CAAf,IAA0BgB,CAAC,CAACd,IAAD,CAAnD,CAAJ,EAAgE;AAC9DN,IAAAA,KAAK,CAAE,4BAA2BkB,KAAM,EAAnC,CAAL;AACD,GAjB8B,CAmB/B;;;AACAH,EAAAA,CAAC,CAACS,IAAF,CAAO,CAACC,CAAD,EAAIC,CAAJ,KAAUd,KAAK,CAACa,CAAD,CAAL,GAAWb,KAAK,CAACc,CAAD,CAAjC;AAEA,SAAOX,CAAP;AACD","sourcesContent":["import {array, error, hasOwnProperty} from 'vega-util';\n\nexport const YEAR = 'year';\nexport const QUARTER = 'quarter';\nexport const MONTH = 'month';\nexport const WEEK = 'week';\nexport const DATE = 'date';\nexport const DAY = 'day';\nexport const HOURS = 'hours';\nexport const MINUTES = 'minutes';\nexport const SECONDS = 'seconds';\nexport const MILLISECONDS = 'milliseconds';\n\nconst UNITS = [\n  YEAR,\n  QUARTER,\n  MONTH,\n  WEEK,\n  DATE,\n  DAY,\n  HOURS,\n  MINUTES,\n  SECONDS,\n  MILLISECONDS\n].reduce((o, u, i) => (o[u] = 1 + i, o), {});\n\nexport function timeUnits(units) {\n  const u = array(units).slice(),\n        m = {};\n\n  // check validity\n  if (!u.length) error('Missing time unit.');\n\n  u.forEach(unit => {\n    if (hasOwnProperty(UNITS, unit)) {\n      m[unit] = 1;\n    } else {\n      error(`Invalid time unit: ${unit}.`);\n    }\n  });\n\n  if ((m[WEEK] || m[DAY]) && (m[QUARTER] || m[MONTH] || m[DATE])) {\n    error(`Incompatible time units: ${units}`);\n  }\n\n  // ensure proper sort order\n  u.sort((a, b) => UNITS[a] - UNITS[b]);\n\n  return u;\n}\n"]},"metadata":{},"sourceType":"module"}