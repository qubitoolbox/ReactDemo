{"ast":null,"code":"var _jsxFileName = \"C:\\\\NewReactResume\\\\resm\\\\src\\\\Components\\\\FirstML\\\\hmm.js\";\nimport * as tf from '@tensorflow/tfjs';\nimport '@tensorflow/tfjs-react-native';\nexport class TheMl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isTfReady: false\n    };\n  }\n\n  async componentDidMount() {\n    // Wait for tf to be ready.\n    await tf.ready(); // Signal to the app that tensorflow.js can now be used.\n\n    this.setState({\n      isTfReady: true\n    });\n  }\n\n  render() {\n    //\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"(isTfReady?\", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"True\"), \":\", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"False\"), \")\");\n  }\n\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/src/Components/FirstML/hmm.js"],"names":["tf","TheMl","React","Component","constructor","props","state","isTfReady","componentDidMount","ready","setState","render"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,kBAApB;AACA,OAAO,+BAAP;AAEA,OAAO,MAAMC,KAAN,SAAoBC,KAAK,CAACC,SAA1B,CAAoC;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAED,QAAMC,iBAAN,GAA0B;AACxB;AACA,UAAMR,EAAE,CAACS,KAAH,EAAN,CAFwB,CAGxB;;AACA,SAAKC,QAAL,CAAc;AACZH,MAAAA,SAAS,EAAE;AADC,KAAd;AAGD;;AAGDI,EAAAA,MAAM,GAAG;AACP;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADf,OAC2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAD3B,MADJ;AAKD;;AAzBwC","sourcesContent":["import * as tf from '@tensorflow/tfjs';\r\nimport '@tensorflow/tfjs-react-native';\r\n \r\nexport class TheMl extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isTfReady: false,\r\n    };\r\n  }\r\n \r\n  async componentDidMount() {\r\n    // Wait for tf to be ready.\r\n    await tf.ready();\r\n    // Signal to the app that tensorflow.js can now be used.\r\n    this.setState({\r\n      isTfReady: true,\r\n    });\r\n  }\r\n \r\n \r\n  render() {\r\n    //\r\n    return (\r\n        <div>\r\n            (isTfReady?<p>True</p>:<p>False</p>)\r\n        </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}