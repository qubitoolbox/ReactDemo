{"ast":null,"code":"import cloud from './CloudLayout';\nimport { Transform } from 'vega-dataflow';\nimport { constant, error, extent, inherits, isFunction } from 'vega-util';\nimport { scale } from 'vega-scale';\nimport { random } from 'vega-statistics';\nvar Output = ['x', 'y', 'font', 'fontSize', 'fontStyle', 'fontWeight', 'angle'];\nvar Params = ['text', 'font', 'rotate', 'fontSize', 'fontStyle', 'fontWeight'];\nexport default function Wordcloud(params) {\n  Transform.call(this, cloud(), params);\n}\nWordcloud.Definition = {\n  \"type\": \"Wordcloud\",\n  \"metadata\": {\n    \"modifies\": true\n  },\n  \"params\": [{\n    \"name\": \"size\",\n    \"type\": \"number\",\n    \"array\": true,\n    \"length\": 2\n  }, {\n    \"name\": \"font\",\n    \"type\": \"string\",\n    \"expr\": true,\n    \"default\": \"sans-serif\"\n  }, {\n    \"name\": \"fontStyle\",\n    \"type\": \"string\",\n    \"expr\": true,\n    \"default\": \"normal\"\n  }, {\n    \"name\": \"fontWeight\",\n    \"type\": \"string\",\n    \"expr\": true,\n    \"default\": \"normal\"\n  }, {\n    \"name\": \"fontSize\",\n    \"type\": \"number\",\n    \"expr\": true,\n    \"default\": 14\n  }, {\n    \"name\": \"fontSizeRange\",\n    \"type\": \"number\",\n    \"array\": \"nullable\",\n    \"default\": [10, 50]\n  }, {\n    \"name\": \"rotate\",\n    \"type\": \"number\",\n    \"expr\": true,\n    \"default\": 0\n  }, {\n    \"name\": \"text\",\n    \"type\": \"field\"\n  }, {\n    \"name\": \"spiral\",\n    \"type\": \"string\",\n    \"values\": [\"archimedean\", \"rectangular\"]\n  }, {\n    \"name\": \"padding\",\n    \"type\": \"number\",\n    \"expr\": true\n  }, {\n    \"name\": \"as\",\n    \"type\": \"string\",\n    \"array\": true,\n    \"length\": 7,\n    \"default\": Output\n  }]\n};\nvar prototype = inherits(Wordcloud, Transform);\n\nprototype.transform = function (_, pulse) {\n  if (_.size && !(_.size[0] && _.size[1])) {\n    error('Wordcloud size dimensions must be non-zero.');\n  }\n\n  function modp(param) {\n    var p = _[param];\n    return isFunction(p) && pulse.modified(p.fields);\n  }\n\n  var mod = _.modified();\n\n  if (!(mod || pulse.changed(pulse.ADD_REM) || Params.some(modp))) return;\n  var data = pulse.materialize(pulse.SOURCE).source,\n      layout = this.value,\n      as = _.as || Output,\n      fontSize = _.fontSize || 14,\n      range;\n  isFunction(fontSize) ? range = _.fontSizeRange : fontSize = constant(fontSize); // create font size scaling function as needed\n\n  if (range) {\n    var fsize = fontSize,\n        sizeScale = scale('sqrt')().domain(extent(data, fsize)).range(range);\n\n    fontSize = function (x) {\n      return sizeScale(fsize(x));\n    };\n  }\n\n  data.forEach(function (t) {\n    t[as[0]] = NaN;\n    t[as[1]] = NaN;\n    t[as[3]] = 0;\n  }); // configure layout\n\n  var words = layout.words(data).text(_.text).size(_.size || [500, 500]).padding(_.padding || 1).spiral(_.spiral || 'archimedean').rotate(_.rotate || 0).font(_.font || 'sans-serif').fontStyle(_.fontStyle || 'normal').fontWeight(_.fontWeight || 'normal').fontSize(fontSize).random(random).layout();\n  var size = layout.size(),\n      dx = size[0] >> 1,\n      dy = size[1] >> 1,\n      i = 0,\n      n = words.length,\n      w,\n      t;\n\n  for (; i < n; ++i) {\n    w = words[i];\n    t = w.datum;\n    t[as[0]] = w.x + dx;\n    t[as[1]] = w.y + dy;\n    t[as[2]] = w.font;\n    t[as[3]] = w.size;\n    t[as[4]] = w.style;\n    t[as[5]] = w.weight;\n    t[as[6]] = w.rotate;\n  }\n\n  return pulse.reflow(mod).modifies(as);\n};","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-wordcloud/src/Wordcloud.js"],"names":["cloud","Transform","constant","error","extent","inherits","isFunction","scale","random","Output","Params","Wordcloud","params","call","Definition","prototype","transform","_","pulse","size","modp","param","p","modified","fields","mod","changed","ADD_REM","some","data","materialize","SOURCE","source","layout","value","as","fontSize","range","fontSizeRange","fsize","sizeScale","domain","x","forEach","t","NaN","words","text","padding","spiral","rotate","font","fontStyle","fontWeight","dx","dy","i","n","length","w","datum","y","style","weight","reflow","modifies"],"mappings":"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","sourcesContent":["import cloud from './CloudLayout';\nimport {Transform} from 'vega-dataflow';\nimport {constant, error, extent, inherits, isFunction} from 'vega-util';\nimport {scale} from 'vega-scale';\nimport {random} from 'vega-statistics';\n\nvar Output = ['x', 'y', 'font', 'fontSize', 'fontStyle', 'fontWeight', 'angle'];\n\nvar Params = ['text', 'font', 'rotate', 'fontSize', 'fontStyle', 'fontWeight'];\n\nexport default function Wordcloud(params) {\n  Transform.call(this, cloud(), params);\n}\n\nWordcloud.Definition = {\n  \"type\": \"Wordcloud\",\n  \"metadata\": {\"modifies\": true},\n  \"params\": [\n    { \"name\": \"size\", \"type\": \"number\", \"array\": true, \"length\": 2 },\n    { \"name\": \"font\", \"type\": \"string\", \"expr\": true, \"default\": \"sans-serif\" },\n    { \"name\": \"fontStyle\", \"type\": \"string\", \"expr\": true, \"default\": \"normal\" },\n    { \"name\": \"fontWeight\", \"type\": \"string\", \"expr\": true, \"default\": \"normal\" },\n    { \"name\": \"fontSize\", \"type\": \"number\", \"expr\": true, \"default\": 14 },\n    { \"name\": \"fontSizeRange\", \"type\": \"number\", \"array\": \"nullable\", \"default\": [10, 50] },\n    { \"name\": \"rotate\", \"type\": \"number\", \"expr\": true, \"default\": 0 },\n    { \"name\": \"text\", \"type\": \"field\" },\n    { \"name\": \"spiral\", \"type\": \"string\", \"values\": [\"archimedean\", \"rectangular\"] },\n    { \"name\": \"padding\", \"type\": \"number\", \"expr\": true },\n    { \"name\": \"as\", \"type\": \"string\", \"array\": true, \"length\": 7, \"default\": Output }\n  ]\n};\n\nvar prototype = inherits(Wordcloud, Transform);\n\nprototype.transform = function(_, pulse) {\n  if (_.size && !(_.size[0] && _.size[1])) {\n    error('Wordcloud size dimensions must be non-zero.');\n  }\n\n  function modp(param) {\n    var p = _[param];\n    return isFunction(p) && pulse.modified(p.fields);\n  }\n\n  var mod = _.modified();\n  if (!(mod || pulse.changed(pulse.ADD_REM) || Params.some(modp))) return;\n\n  var data = pulse.materialize(pulse.SOURCE).source,\n      layout = this.value,\n      as = _.as || Output,\n      fontSize = _.fontSize || 14,\n      range;\n\n  isFunction(fontSize)\n    ? (range = _.fontSizeRange)\n    : (fontSize = constant(fontSize));\n\n  // create font size scaling function as needed\n  if (range) {\n    var fsize = fontSize,\n        sizeScale = scale('sqrt')()\n          .domain(extent(data, fsize))\n          .range(range);\n    fontSize = function(x) { return sizeScale(fsize(x)); };\n  }\n\n  data.forEach(function(t) {\n    t[as[0]] = NaN;\n    t[as[1]] = NaN;\n    t[as[3]] = 0;\n  });\n\n  // configure layout\n  var words = layout\n    .words(data)\n    .text(_.text)\n    .size(_.size || [500, 500])\n    .padding(_.padding || 1)\n    .spiral(_.spiral || 'archimedean')\n    .rotate(_.rotate || 0)\n    .font(_.font || 'sans-serif')\n    .fontStyle(_.fontStyle || 'normal')\n    .fontWeight(_.fontWeight || 'normal')\n    .fontSize(fontSize)\n    .random(random)\n    .layout();\n\n  var size = layout.size(),\n      dx = size[0] >> 1,\n      dy = size[1] >> 1,\n      i = 0,\n      n = words.length,\n      w, t;\n\n  for (; i<n; ++i) {\n    w = words[i];\n    t = w.datum;\n    t[as[0]] = w.x + dx;\n    t[as[1]] = w.y + dy;\n    t[as[2]] = w.font;\n    t[as[3]] = w.size;\n    t[as[4]] = w.style;\n    t[as[5]] = w.weight;\n    t[as[6]] = w.rotate;\n  }\n\n  return pulse.reflow(mod).modifies(as);\n};\n"]},"metadata":{},"sourceType":"module"}