{"ast":null,"code":"import bind from './bind';\nimport element from './element';\nimport initializeRenderer from './initialize-renderer';\nimport initializeHandler from './initialize-handler';\nimport { CanvasHandler, renderModule } from 'vega-scenegraph';\nexport default function (el, elBind) {\n  var view = this,\n      type = view._renderType,\n      config = view._eventConfig.bind,\n      module = renderModule(type),\n      Handler,\n      Renderer; // containing dom element\n\n  el = view._el = el ? lookup(view, el) : null; // select appropriate renderer & handler\n\n  if (!module) view.error('Unrecognized renderer type: ' + type);\n  Handler = module.handler || CanvasHandler;\n  Renderer = el ? module.renderer : module.headless; // initialize renderer and input handler\n\n  view._renderer = !Renderer ? null : initializeRenderer(view, view._renderer, el, Renderer);\n  view._handler = initializeHandler(view, view._handler, el, Handler);\n  view._redraw = true; // initialize signal bindings\n\n  if (el && config !== 'none') {\n    elBind = elBind ? view._elBind = lookup(view, elBind) : el.appendChild(element('div', {\n      'class': 'vega-bindings'\n    }));\n\n    view._bind.forEach(function (_) {\n      if (_.param.element && config !== 'container') {\n        _.element = lookup(view, _.param.element);\n      }\n    });\n\n    view._bind.forEach(function (_) {\n      bind(view, _.element || elBind, _);\n    });\n  }\n\n  return view;\n}\n\nfunction lookup(view, el) {\n  if (typeof el === 'string') {\n    if (typeof document !== 'undefined') {\n      el = document.querySelector(el);\n\n      if (!el) {\n        view.error('Signal bind element not found: ' + el);\n        return null;\n      }\n    } else {\n      view.error('DOM document instance not found.');\n      return null;\n    }\n  }\n\n  if (el) {\n    try {\n      el.innerHTML = '';\n    } catch (e) {\n      el = null;\n      view.error(e);\n    }\n  }\n\n  return el;\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-view/src/initialize.js"],"names":["bind","element","initializeRenderer","initializeHandler","CanvasHandler","renderModule","el","elBind","view","type","_renderType","config","_eventConfig","module","Handler","Renderer","_el","lookup","error","handler","renderer","headless","_renderer","_handler","_redraw","_elBind","appendChild","_bind","forEach","_","param","document","querySelector","innerHTML","e"],"mappings":"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","sourcesContent":["import bind from './bind';\nimport element from './element';\nimport initializeRenderer from './initialize-renderer';\nimport initializeHandler from './initialize-handler';\nimport {CanvasHandler, renderModule} from 'vega-scenegraph';\n\nexport default function(el, elBind) {\n  var view = this,\n      type = view._renderType,\n      config = view._eventConfig.bind,\n      module = renderModule(type),\n      Handler, Renderer;\n\n  // containing dom element\n  el = view._el = el ? lookup(view, el) : null;\n\n  // select appropriate renderer & handler\n  if (!module) view.error('Unrecognized renderer type: ' + type);\n  Handler = module.handler || CanvasHandler;\n  Renderer = (el ? module.renderer : module.headless);\n\n  // initialize renderer and input handler\n  view._renderer = !Renderer ? null\n    : initializeRenderer(view, view._renderer, el, Renderer);\n  view._handler = initializeHandler(view, view._handler, el, Handler);\n  view._redraw = true;\n\n  // initialize signal bindings\n  if (el && config !== 'none') {\n    elBind = elBind ? (view._elBind = lookup(view, elBind))\n      : el.appendChild(element('div', {'class': 'vega-bindings'}));\n\n    view._bind.forEach(function(_) {\n      if (_.param.element && config !== 'container') {\n        _.element = lookup(view, _.param.element);\n      }\n    });\n\n    view._bind.forEach(function(_) {\n      bind(view, _.element || elBind, _);\n    });\n  }\n\n  return view;\n}\n\nfunction lookup(view, el) {\n  if (typeof el === 'string') {\n    if (typeof document !== 'undefined') {\n      el = document.querySelector(el);\n      if (!el) {\n        view.error('Signal bind element not found: ' + el);\n        return null;\n      }\n    } else {\n      view.error('DOM document instance not found.');\n      return null;\n    }\n  }\n  if (el) {\n    try {\n      el.innerHTML = '';\n    } catch (e) {\n      el = null;\n      view.error(e);\n    }\n  }\n  return el;\n}\n"]},"metadata":{},"sourceType":"module"}