{"ast":null,"code":"import DataScope from './DataScope';\nimport { aggrField, Ascending, compareRef, Entry, isExpr, isSignal, fieldRef, keyRef, operator, ref } from './util';\nimport parseExpression from './parsers/expression';\nimport { Compare, Expression, Field, Key, Projection, Proxy, Scale, Sieve } from './transforms';\nimport { array, error, extend, hasOwnProperty, isArray, isString, isObject, peek, stringValue } from 'vega-util';\nexport default function Scope(config) {\n  this.config = config;\n  this.bindings = [];\n  this.field = {};\n  this.signals = {};\n  this.lambdas = {};\n  this.scales = {};\n  this.events = {};\n  this.data = {};\n  this.streams = [];\n  this.updates = [];\n  this.operators = [];\n  this.background = null;\n  this.eventConfig = null;\n  this._id = 0;\n  this._subid = 0;\n  this._nextsub = [0];\n  this._parent = [];\n  this._encode = [];\n  this._lookup = [];\n  this._markpath = [];\n}\n\nfunction Subscope(scope) {\n  this.config = scope.config;\n  this.legends = scope.legends;\n  this.field = Object.create(scope.field);\n  this.signals = Object.create(scope.signals);\n  this.lambdas = Object.create(scope.lambdas);\n  this.scales = Object.create(scope.scales);\n  this.events = Object.create(scope.events);\n  this.data = Object.create(scope.data);\n  this.streams = [];\n  this.updates = [];\n  this.operators = [];\n  this._id = 0;\n  this._subid = ++scope._nextsub[0];\n  this._nextsub = scope._nextsub;\n  this._parent = scope._parent.slice();\n  this._encode = scope._encode.slice();\n  this._lookup = scope._lookup.slice();\n  this._markpath = scope._markpath;\n}\n\nvar prototype = Scope.prototype = Subscope.prototype; // ----\n\nprototype.fork = function () {\n  return new Subscope(this);\n};\n\nprototype.isSubscope = function () {\n  return this._subid > 0;\n};\n\nprototype.toRuntime = function () {\n  this.finish();\n  return {\n    background: this.background,\n    operators: this.operators,\n    streams: this.streams,\n    updates: this.updates,\n    bindings: this.bindings,\n    eventConfig: this.eventConfig\n  };\n};\n\nprototype.id = function () {\n  return (this._subid ? this._subid + ':' : 0) + this._id++;\n};\n\nprototype.add = function (op) {\n  this.operators.push(op);\n  op.id = this.id(); // if pre-registration references exist, resolve them now\n\n  if (op.refs) {\n    op.refs.forEach(function (ref) {\n      ref.$ref = op.id;\n    });\n    op.refs = null;\n  }\n\n  return op;\n};\n\nprototype.proxy = function (op) {\n  var vref = op instanceof Entry ? ref(op) : op;\n  return this.add(Proxy({\n    value: vref\n  }));\n};\n\nprototype.addStream = function (stream) {\n  this.streams.push(stream);\n  stream.id = this.id();\n  return stream;\n};\n\nprototype.addUpdate = function (update) {\n  this.updates.push(update);\n  return update;\n}; // Apply metadata\n\n\nprototype.finish = function () {\n  var name, ds; // annotate root\n\n  if (this.root) this.root.root = true; // annotate signals\n\n  for (name in this.signals) {\n    this.signals[name].signal = name;\n  } // annotate scales\n\n\n  for (name in this.scales) {\n    this.scales[name].scale = name;\n  } // annotate data sets\n\n\n  function annotate(op, name, type) {\n    var data, list;\n\n    if (op) {\n      data = op.data || (op.data = {});\n      list = data[name] || (data[name] = []);\n      list.push(type);\n    }\n  }\n\n  for (name in this.data) {\n    ds = this.data[name];\n    annotate(ds.input, name, 'input');\n    annotate(ds.output, name, 'output');\n    annotate(ds.values, name, 'values');\n\n    for (var field in ds.index) {\n      annotate(ds.index[field], name, 'index:' + field);\n    }\n  }\n\n  return this;\n}; // ----\n\n\nprototype.pushState = function (encode, parent, lookup) {\n  this._encode.push(ref(this.add(Sieve({\n    pulse: encode\n  }))));\n\n  this._parent.push(parent);\n\n  this._lookup.push(lookup ? ref(this.proxy(lookup)) : null);\n\n  this._markpath.push(-1);\n};\n\nprototype.popState = function () {\n  this._encode.pop();\n\n  this._parent.pop();\n\n  this._lookup.pop();\n\n  this._markpath.pop();\n};\n\nprototype.parent = function () {\n  return peek(this._parent);\n};\n\nprototype.encode = function () {\n  return peek(this._encode);\n};\n\nprototype.lookup = function () {\n  return peek(this._lookup);\n};\n\nprototype.markpath = function () {\n  var p = this._markpath;\n  return ++p[p.length - 1];\n}; // ----\n\n\nprototype.fieldRef = function (field, name) {\n  if (isString(field)) return fieldRef(field, name);\n\n  if (!field.signal) {\n    error('Unsupported field reference: ' + stringValue(field));\n  }\n\n  var s = field.signal,\n      f = this.field[s],\n      params;\n\n  if (!f) {\n    params = {\n      name: this.signalRef(s)\n    };\n    if (name) params.as = name;\n    this.field[s] = f = ref(this.add(Field(params)));\n  }\n\n  return f;\n};\n\nprototype.compareRef = function (cmp) {\n  function check(_) {\n    if (isSignal(_)) {\n      signal = true;\n      return scope.signalRef(_.signal);\n    } else if (isExpr(_)) {\n      signal = true;\n      return scope.exprRef(_.expr);\n    } else {\n      return _;\n    }\n  }\n\n  var scope = this,\n      signal = false,\n      fields = array(cmp.field).map(check),\n      orders = array(cmp.order).map(check);\n  return signal ? ref(this.add(Compare({\n    fields: fields,\n    orders: orders\n  }))) : compareRef(fields, orders);\n};\n\nprototype.keyRef = function (fields, flat) {\n  function check(_) {\n    if (isSignal(_)) {\n      signal = true;\n      return ref(sig[_.signal]);\n    } else {\n      return _;\n    }\n  }\n\n  var sig = this.signals,\n      signal = false;\n  fields = array(fields).map(check);\n  return signal ? ref(this.add(Key({\n    fields: fields,\n    flat: flat\n  }))) : keyRef(fields, flat);\n};\n\nprototype.sortRef = function (sort) {\n  if (!sort) return sort; // including id ensures stable sorting\n\n  var a = aggrField(sort.op, sort.field),\n      o = sort.order || Ascending;\n  return o.signal ? ref(this.add(Compare({\n    fields: a,\n    orders: this.signalRef(o.signal)\n  }))) : compareRef(a, o);\n}; // ----\n\n\nprototype.event = function (source, type) {\n  var key = source + ':' + type;\n\n  if (!this.events[key]) {\n    var id = this.id();\n    this.streams.push({\n      id: id,\n      source: source,\n      type: type\n    });\n    this.events[key] = id;\n  }\n\n  return this.events[key];\n}; // ----\n\n\nprototype.hasOwnSignal = function (name) {\n  return hasOwnProperty(this.signals, name);\n};\n\nprototype.addSignal = function (name, value) {\n  if (this.hasOwnSignal(name)) {\n    error('Duplicate signal name: ' + stringValue(name));\n  }\n\n  var op = value instanceof Entry ? value : this.add(operator(value));\n  return this.signals[name] = op;\n};\n\nprototype.getSignal = function (name) {\n  if (!this.signals[name]) {\n    error('Unrecognized signal name: ' + stringValue(name));\n  }\n\n  return this.signals[name];\n};\n\nprototype.signalRef = function (s) {\n  if (this.signals[s]) {\n    return ref(this.signals[s]);\n  } else if (!hasOwnProperty(this.lambdas, s)) {\n    this.lambdas[s] = this.add(operator(null));\n  }\n\n  return ref(this.lambdas[s]);\n};\n\nprototype.parseLambdas = function () {\n  var code = Object.keys(this.lambdas);\n\n  for (var i = 0, n = code.length; i < n; ++i) {\n    var s = code[i],\n        e = parseExpression(s, this),\n        op = this.lambdas[s];\n    op.params = e.$params;\n    op.update = e.$expr;\n  }\n};\n\nprototype.property = function (spec) {\n  return spec && spec.signal ? this.signalRef(spec.signal) : spec;\n};\n\nprototype.objectProperty = function (spec) {\n  return !spec || !isObject(spec) ? spec : this.signalRef(spec.signal || propertyLambda(spec));\n};\n\nfunction propertyLambda(spec) {\n  return (isArray(spec) ? arrayLambda : objectLambda)(spec);\n}\n\nfunction arrayLambda(array) {\n  var code = '[',\n      i = 0,\n      n = array.length,\n      value;\n\n  for (; i < n; ++i) {\n    value = array[i];\n    code += (i > 0 ? ',' : '') + (isObject(value) ? value.signal || propertyLambda(value) : stringValue(value));\n  }\n\n  return code + ']';\n}\n\nfunction objectLambda(obj) {\n  var code = '{',\n      i = 0,\n      key,\n      value;\n\n  for (key in obj) {\n    value = obj[key];\n    code += (++i > 1 ? ',' : '') + stringValue(key) + ':' + (isObject(value) ? value.signal || propertyLambda(value) : stringValue(value));\n  }\n\n  return code + '}';\n}\n\nprototype.exprRef = function (code, name) {\n  var params = {\n    expr: parseExpression(code, this)\n  };\n  if (name) params.expr.$name = name;\n  return ref(this.add(Expression(params)));\n};\n\nprototype.addBinding = function (name, bind) {\n  if (!this.bindings) {\n    error('Nested signals do not support binding: ' + stringValue(name));\n  }\n\n  this.bindings.push(extend({\n    signal: name\n  }, bind));\n}; // ----\n\n\nprototype.addScaleProj = function (name, transform) {\n  if (hasOwnProperty(this.scales, name)) {\n    error('Duplicate scale or projection name: ' + stringValue(name));\n  }\n\n  this.scales[name] = this.add(transform);\n};\n\nprototype.addScale = function (name, params) {\n  this.addScaleProj(name, Scale(params));\n};\n\nprototype.addProjection = function (name, params) {\n  this.addScaleProj(name, Projection(params));\n};\n\nprototype.getScale = function (name) {\n  if (!this.scales[name]) {\n    error('Unrecognized scale name: ' + stringValue(name));\n  }\n\n  return this.scales[name];\n};\n\nprototype.projectionRef = prototype.scaleRef = function (name) {\n  return ref(this.getScale(name));\n};\n\nprototype.projectionType = prototype.scaleType = function (name) {\n  return this.getScale(name).params.type;\n}; // ----\n\n\nprototype.addData = function (name, dataScope) {\n  if (hasOwnProperty(this.data, name)) {\n    error('Duplicate data set name: ' + stringValue(name));\n  }\n\n  return this.data[name] = dataScope;\n};\n\nprototype.getData = function (name) {\n  if (!this.data[name]) {\n    error('Undefined data set name: ' + stringValue(name));\n  }\n\n  return this.data[name];\n};\n\nprototype.addDataPipeline = function (name, entries) {\n  if (hasOwnProperty(this.data, name)) {\n    error('Duplicate data set name: ' + stringValue(name));\n  }\n\n  return this.addData(name, DataScope.fromEntries(this, entries));\n};","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-parser/src/Scope.js"],"names":["DataScope","aggrField","Ascending","compareRef","Entry","isExpr","isSignal","fieldRef","keyRef","operator","ref","parseExpression","Compare","Expression","Field","Key","Projection","Proxy","Scale","Sieve","array","error","extend","hasOwnProperty","isArray","isString","isObject","peek","stringValue","Scope","config","bindings","field","signals","lambdas","scales","events","data","streams","updates","operators","background","eventConfig","_id","_subid","_nextsub","_parent","_encode","_lookup","_markpath","Subscope","scope","legends","Object","create","slice","prototype","fork","isSubscope","toRuntime","finish","id","add","op","push","refs","forEach","$ref","proxy","vref","value","addStream","stream","addUpdate","update","name","ds","root","signal","scale","annotate","type","list","input","output","values","index","pushState","encode","parent","lookup","pulse","popState","pop","markpath","p","length","s","f","params","signalRef","as","cmp","check","_","exprRef","expr","fields","map","orders","order","flat","sig","sortRef","sort","a","o","event","source","key","hasOwnSignal","addSignal","getSignal","parseLambdas","code","keys","i","n","e","$params","$expr","property","spec","objectProperty","propertyLambda","arrayLambda","objectLambda","obj","$name","addBinding","bind","addScaleProj","transform","addScale","addProjection","getScale","projectionRef","scaleRef","projectionType","scaleType","addData","dataScope","getData","addDataPipeline","entries","fromEntries"],"mappings":"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","sourcesContent":["import DataScope from './DataScope';\nimport {\n  aggrField, Ascending, compareRef, Entry, isExpr, isSignal,\n  fieldRef, keyRef, operator, ref\n} from './util';\nimport parseExpression from './parsers/expression';\nimport {\n  Compare, Expression, Field, Key, Projection, Proxy, Scale, Sieve\n} from './transforms';\nimport {\n  array, error, extend, hasOwnProperty,\n  isArray, isString, isObject, peek, stringValue\n} from 'vega-util';\n\nexport default function Scope(config) {\n  this.config = config;\n\n  this.bindings = [];\n  this.field = {};\n  this.signals = {};\n  this.lambdas = {};\n  this.scales = {};\n  this.events = {};\n  this.data = {};\n\n  this.streams = [];\n  this.updates = [];\n  this.operators = [];\n  this.background = null;\n  this.eventConfig = null;\n\n  this._id = 0;\n  this._subid = 0;\n  this._nextsub = [0];\n\n  this._parent = [];\n  this._encode = [];\n  this._lookup = [];\n  this._markpath = [];\n}\n\nfunction Subscope(scope) {\n  this.config = scope.config;\n  this.legends = scope.legends;\n\n  this.field = Object.create(scope.field);\n  this.signals = Object.create(scope.signals);\n  this.lambdas = Object.create(scope.lambdas);\n  this.scales = Object.create(scope.scales);\n  this.events = Object.create(scope.events);\n  this.data = Object.create(scope.data);\n\n  this.streams = [];\n  this.updates = [];\n  this.operators = [];\n\n  this._id = 0;\n  this._subid = ++scope._nextsub[0];\n  this._nextsub = scope._nextsub;\n\n  this._parent = scope._parent.slice();\n  this._encode = scope._encode.slice();\n  this._lookup = scope._lookup.slice();\n  this._markpath = scope._markpath;\n}\n\nvar prototype = Scope.prototype = Subscope.prototype;\n\n// ----\n\nprototype.fork = function() {\n  return new Subscope(this);\n};\n\nprototype.isSubscope = function() {\n  return this._subid > 0;\n};\n\nprototype.toRuntime = function() {\n  this.finish();\n  return {\n    background:  this.background,\n    operators:   this.operators,\n    streams:     this.streams,\n    updates:     this.updates,\n    bindings:    this.bindings,\n    eventConfig: this.eventConfig\n  };\n};\n\nprototype.id = function() {\n  return (this._subid ? this._subid + ':' : 0) + this._id++;\n};\n\nprototype.add = function(op) {\n  this.operators.push(op);\n  op.id = this.id();\n  // if pre-registration references exist, resolve them now\n  if (op.refs) {\n    op.refs.forEach(function(ref) { ref.$ref = op.id; });\n    op.refs = null;\n  }\n  return op;\n};\n\nprototype.proxy = function(op) {\n  var vref = op instanceof Entry ? ref(op) : op;\n  return this.add(Proxy({value: vref}));\n};\n\nprototype.addStream = function(stream) {\n  this.streams.push(stream);\n  stream.id = this.id();\n  return stream;\n};\n\nprototype.addUpdate = function(update) {\n  this.updates.push(update);\n  return update;\n};\n\n// Apply metadata\nprototype.finish = function() {\n  var name, ds;\n\n  // annotate root\n  if (this.root) this.root.root = true;\n\n  // annotate signals\n  for (name in this.signals) {\n    this.signals[name].signal = name;\n  }\n\n  // annotate scales\n  for (name in this.scales) {\n    this.scales[name].scale = name;\n  }\n\n  // annotate data sets\n  function annotate(op, name, type) {\n    var data, list;\n    if (op) {\n      data = op.data || (op.data = {});\n      list = data[name] || (data[name] = []);\n      list.push(type);\n    }\n  }\n  for (name in this.data) {\n    ds = this.data[name];\n    annotate(ds.input,  name, 'input');\n    annotate(ds.output, name, 'output');\n    annotate(ds.values, name, 'values');\n    for (var field in ds.index) {\n      annotate(ds.index[field], name, 'index:' + field);\n    }\n  }\n\n  return this;\n};\n\n// ----\n\nprototype.pushState = function(encode, parent, lookup) {\n  this._encode.push(ref(this.add(Sieve({pulse: encode}))));\n  this._parent.push(parent);\n  this._lookup.push(lookup ? ref(this.proxy(lookup)) : null);\n  this._markpath.push(-1);\n};\n\nprototype.popState = function() {\n  this._encode.pop();\n  this._parent.pop();\n  this._lookup.pop();\n  this._markpath.pop();\n};\n\nprototype.parent = function() {\n  return peek(this._parent);\n};\n\nprototype.encode = function() {\n  return peek(this._encode);\n};\n\nprototype.lookup = function() {\n  return peek(this._lookup);\n};\n\nprototype.markpath = function() {\n  var p = this._markpath;\n  return ++p[p.length-1];\n};\n\n// ----\n\nprototype.fieldRef = function(field, name) {\n  if (isString(field)) return fieldRef(field, name);\n  if (!field.signal) {\n    error('Unsupported field reference: ' + stringValue(field));\n  }\n\n  var s = field.signal,\n      f = this.field[s],\n      params;\n\n  if (!f) {\n    params = {name: this.signalRef(s)};\n    if (name) params.as = name;\n    this.field[s] = f = ref(this.add(Field(params)));\n  }\n  return f;\n};\n\nprototype.compareRef = function(cmp) {\n  function check(_) {\n    if (isSignal(_)) {\n      signal = true;\n      return scope.signalRef(_.signal);\n    } else if (isExpr(_)) {\n      signal = true;\n      return scope.exprRef(_.expr);\n    } else {\n      return _;\n    }\n  }\n\n  var scope = this,\n      signal = false,\n      fields = array(cmp.field).map(check),\n      orders = array(cmp.order).map(check);\n\n  return signal\n    ? ref(this.add(Compare({fields: fields, orders: orders})))\n    : compareRef(fields, orders);\n};\n\nprototype.keyRef = function(fields, flat) {\n  function check(_) {\n    if (isSignal(_)) {\n      signal = true;\n      return ref(sig[_.signal]);\n    } else {\n      return _;\n    }\n  }\n\n  var sig = this.signals,\n      signal = false;\n  fields = array(fields).map(check);\n\n  return signal\n    ? ref(this.add(Key({fields: fields, flat: flat})))\n    : keyRef(fields, flat);\n};\n\nprototype.sortRef = function(sort) {\n  if (!sort) return sort;\n\n  // including id ensures stable sorting\n  var a = aggrField(sort.op, sort.field),\n      o = sort.order || Ascending;\n\n  return o.signal\n    ? ref(this.add(Compare({\n        fields: a,\n        orders: this.signalRef(o.signal)\n      })))\n    : compareRef(a, o);\n};\n\n// ----\n\nprototype.event = function(source, type) {\n  var key = source + ':' + type;\n  if (!this.events[key]) {\n    var id = this.id();\n    this.streams.push({\n      id: id,\n      source: source,\n      type: type\n    });\n    this.events[key] = id;\n  }\n  return this.events[key];\n};\n\n// ----\n\nprototype.hasOwnSignal = function(name) {\n  return hasOwnProperty(this.signals, name);\n};\n\nprototype.addSignal = function(name, value) {\n  if (this.hasOwnSignal(name)) {\n    error('Duplicate signal name: ' + stringValue(name));\n  }\n  var op = value instanceof Entry ? value : this.add(operator(value));\n  return this.signals[name] = op;\n};\n\nprototype.getSignal = function(name) {\n  if (!this.signals[name]) {\n    error('Unrecognized signal name: ' + stringValue(name));\n  }\n  return this.signals[name];\n};\n\nprototype.signalRef = function(s) {\n  if (this.signals[s]) {\n    return ref(this.signals[s]);\n  } else if (!hasOwnProperty(this.lambdas, s)) {\n    this.lambdas[s] = this.add(operator(null));\n  }\n  return ref(this.lambdas[s]);\n};\n\nprototype.parseLambdas = function() {\n  var code = Object.keys(this.lambdas);\n  for (var i=0, n=code.length; i<n; ++i) {\n    var s = code[i],\n        e = parseExpression(s, this),\n        op = this.lambdas[s];\n    op.params = e.$params;\n    op.update = e.$expr;\n  }\n};\n\nprototype.property = function(spec) {\n  return spec && spec.signal ? this.signalRef(spec.signal) : spec;\n};\n\nprototype.objectProperty = function(spec) {\n  return (!spec || !isObject(spec)) ? spec\n    : this.signalRef(spec.signal || propertyLambda(spec));\n};\n\nfunction propertyLambda(spec) {\n  return (isArray(spec) ? arrayLambda : objectLambda)(spec);\n}\n\nfunction arrayLambda(array) {\n  var code = '[',\n      i = 0,\n      n = array.length,\n      value;\n\n  for (; i<n; ++i) {\n    value = array[i];\n    code += (i > 0 ? ',' : '')\n      + (isObject(value)\n        ? (value.signal || propertyLambda(value))\n        : stringValue(value));\n  }\n  return code + ']';\n}\n\nfunction objectLambda(obj) {\n  var code = '{',\n      i = 0,\n      key, value;\n\n  for (key in obj) {\n    value = obj[key];\n    code += (++i > 1 ? ',' : '')\n      + stringValue(key) + ':'\n      + (isObject(value)\n        ? (value.signal || propertyLambda(value))\n        : stringValue(value));\n  }\n  return code + '}';\n}\n\nprototype.exprRef = function(code, name) {\n  var params = {expr: parseExpression(code, this)};\n  if (name) params.expr.$name = name;\n  return ref(this.add(Expression(params)));\n}\n\nprototype.addBinding = function(name, bind) {\n  if (!this.bindings) {\n    error('Nested signals do not support binding: ' + stringValue(name));\n  }\n  this.bindings.push(extend({signal: name}, bind));\n};\n\n// ----\n\nprototype.addScaleProj = function(name, transform) {\n  if (hasOwnProperty(this.scales, name)) {\n    error('Duplicate scale or projection name: ' + stringValue(name));\n  }\n  this.scales[name] = this.add(transform);\n};\n\nprototype.addScale = function(name, params) {\n  this.addScaleProj(name, Scale(params));\n};\n\nprototype.addProjection = function(name, params) {\n  this.addScaleProj(name, Projection(params));\n};\n\nprototype.getScale = function(name) {\n  if (!this.scales[name]) {\n    error('Unrecognized scale name: ' + stringValue(name));\n  }\n  return this.scales[name];\n};\n\nprototype.projectionRef =\nprototype.scaleRef = function(name) {\n  return ref(this.getScale(name));\n};\n\nprototype.projectionType =\nprototype.scaleType = function(name) {\n  return this.getScale(name).params.type;\n};\n\n// ----\n\nprototype.addData = function(name, dataScope) {\n  if (hasOwnProperty(this.data, name)) {\n    error('Duplicate data set name: ' + stringValue(name));\n  }\n  return (this.data[name] = dataScope);\n};\n\nprototype.getData = function(name) {\n  if (!this.data[name]) {\n    error('Undefined data set name: ' + stringValue(name));\n  }\n  return this.data[name];\n};\n\nprototype.addDataPipeline = function(name, entries) {\n  if (hasOwnProperty(this.data, name)) {\n    error('Duplicate data set name: ' + stringValue(name));\n  }\n  return this.addData(name, DataScope.fromEntries(this, entries));\n};\n"]},"metadata":{},"sourceType":"module"}