{"ast":null,"code":"/**\n * Predicate that returns true if the value lies within the span\n * of the given range. The left and right flags control the use\n * of inclusive (true) or exclusive (false) comparisons.\n */\nexport default function (value, range, left, right) {\n  var r0 = range[0],\n      r1 = range[range.length - 1],\n      t;\n\n  if (r0 > r1) {\n    t = r0;\n    r0 = r1;\n    r1 = t;\n  }\n\n  left = left === undefined || left;\n  right = right === undefined || right;\n  return (left ? r0 <= value : r0 < value) && (right ? value <= r1 : value < r1);\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-lite/node_modules/vega-util/src/inrange.js"],"names":["value","range","left","right","r0","r1","length","t","undefined"],"mappings":"AAAA;;;;;AAKA,eAAe,UAASA,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,KAA7B,EAAoC;AACjD,MAAIC,EAAE,GAAGH,KAAK,CAAC,CAAD,CAAd;AAAA,MAAmBI,EAAE,GAAGJ,KAAK,CAACA,KAAK,CAACK,MAAN,GAAa,CAAd,CAA7B;AAAA,MAA+CC,CAA/C;;AACA,MAAIH,EAAE,GAAGC,EAAT,EAAa;AACXE,IAAAA,CAAC,GAAGH,EAAJ;AACAA,IAAAA,EAAE,GAAGC,EAAL;AACAA,IAAAA,EAAE,GAAGE,CAAL;AACD;;AACDL,EAAAA,IAAI,GAAGA,IAAI,KAAKM,SAAT,IAAsBN,IAA7B;AACAC,EAAAA,KAAK,GAAGA,KAAK,KAAKK,SAAV,IAAuBL,KAA/B;AAEA,SAAO,CAACD,IAAI,GAAGE,EAAE,IAAIJ,KAAT,GAAiBI,EAAE,GAAGJ,KAA3B,MACJG,KAAK,GAAGH,KAAK,IAAIK,EAAZ,GAAiBL,KAAK,GAAGK,EAD1B,CAAP;AAED","sourcesContent":["/**\n * Predicate that returns true if the value lies within the span\n * of the given range. The left and right flags control the use\n * of inclusive (true) or exclusive (false) comparisons.\n */\nexport default function(value, range, left, right) {\n  var r0 = range[0], r1 = range[range.length-1], t;\n  if (r0 > r1) {\n    t = r0;\n    r0 = r1;\n    r1 = t;\n  }\n  left = left === undefined || left;\n  right = right === undefined || right;\n\n  return (left ? r0 <= value : r0 < value) &&\n    (right ? value <= r1 : value < r1);\n}\n"]},"metadata":{},"sourceType":"module"}