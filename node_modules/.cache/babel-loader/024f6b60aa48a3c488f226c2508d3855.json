{"ast":null,"code":"var _jsxFileName = \"C:\\\\NewReactResume\\\\resm\\\\src\\\\Components\\\\WelcomeGame\\\\PlayInstructions.js\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport colors from '@material-ui/core/colors';\nimport Tooltip from '@material-ui/core/Tooltip/';\nimport List from '@material-ui/core/List';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar/ListItemAvatar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nexport default function Instr() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Welcome to a demo of ML in action. The two Charts below depict the accuracy and gradient descent of the once trained model.\")))), React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"All you have to do is press next below, and the model will begin training. Once finished it will provide the results of the pre-loaded model..\")))), React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Disclaimer: \"), \" \", React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Due to the heavy in performance nature of training an ML model, I have limited the mode to 100 iterations of batch size 10.. Only for model purposes\")), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Happy \", React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Training\"), \"!\"))))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/src/Components/WelcomeGame/PlayInstructions.js"],"names":["React","Typography","colors","Tooltip","List","ListItemAvatar","ListItem","ListItemText","Divider","Instr"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,iDAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,eAAe,SAASC,KAAT,GAAgB;AAE3B,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mIADA,CADJ,CADJ,CADJ,EAeI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sJADA,CADJ,CADJ,CAfJ,EA6BI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,OAEoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4JAFpB,CADA,EASR,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADV,MATQ,CADJ,CADJ,CA7BJ,CADJ,EAkDI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlDJ,CAFJ;AA8DH","sourcesContent":["import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport colors from '@material-ui/core/colors'\r\nimport Tooltip from '@material-ui/core/Tooltip/'\r\nimport List from '@material-ui/core/List'\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar/ListItemAvatar'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nexport default function Instr(){\r\n\r\n    return (\r\n\r\n        <div>\r\n            <List>\r\n                <ListItemAvatar>\r\n                    <ListItem>\r\n                        <ListItemText>\r\n                        <Typography>\r\n                \r\n                Welcome to a demo of ML in action.\r\n                The two Charts below depict the accuracy and\r\n                gradient descent of the once trained model.\r\n                \r\n                \r\n                </Typography>\r\n                        </ListItemText>\r\n                    </ListItem>\r\n                </ListItemAvatar>\r\n                <ListItemAvatar>\r\n                    <ListItem>\r\n                        <ListItemText>\r\n                        <Typography>\r\n                \r\n                All you have to do is press next below, and the model will begin\r\n                training. Once finished it will provide the results of the pre-loaded\r\n                model..\r\n                \r\n                \r\n                </Typography>\r\n                        </ListItemText>\r\n                    </ListItem>\r\n                </ListItemAvatar>\r\n                <ListItemAvatar>\r\n                    <ListItem>\r\n                        <ListItemText>\r\n                        <Typography>\r\n                    \r\n                        <b>Disclaimer: </b> <i>Due to the heavy in performance nature of\r\n                    training an ML model, I have limited the mode to 100 iterations\r\n                    of batch size 10.. Only for model purposes\r\n                    </i>\r\n                </Typography>\r\n\r\n                <Typography>\r\n                    Happy <i>Training</i>!\r\n                </Typography>\r\n                        </ListItemText>\r\n                    </ListItem>\r\n                </ListItemAvatar>\r\n\r\n            </List>\r\n\r\n            <Divider/>\r\n            \r\n                \r\n\r\n                \r\n        </div>\r\n    )\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}