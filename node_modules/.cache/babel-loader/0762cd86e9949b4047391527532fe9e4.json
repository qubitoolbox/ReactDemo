{"ast":null,"code":"var _jsxFileName = \"C:\\\\NewReactResume\\\\resm\\\\src\\\\Components\\\\ChartJs\\\\Charts.js\";\nimport React, { Component } from 'react';\nimport Chart from \"chart.js\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport classes from \"../../assets/css/LineGraph.module.css\";\nimport Grid from '@material-ui/core/Grid';\nimport { theindata, thelabels } from 'C:/NewReactResume/resm/src/Components/FirstML/AnotherMl.js'; //const data = {data:[1,2,3,3,4]}\n\nexport default class LineGraph extends Component {\n  constructor(...args) {\n    super(...args);\n    this.chartRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n    var progress = document.getElementById('animationProgress');\n    new Chart(myChartRef, {\n      type: \"line\",\n      data: {\n        //Bring in data\n        //in tree structured\n        labels: thelabels.labels.labels,\n        datasets: [{\n          label: 'Forecast',\n          data: [20, 17, 15, 12, 10, 8, 7, 6, 5, 4, 3, 2, 1, 0]\n        }]\n      },\n      options: {\n        //Customize chart options\n        width: '225px',\n        height: '225px',\n        animation: {\n          duration: 1000,\n          onProgress: function (animation) {\n            progress.value = animation.currentStep / animation.numSteps;\n          }\n        }\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"myChart\",\n      ref: this.chartRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"animationProgress\",\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"cambia\"));\n  }\n\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/src/Components/ChartJs/Charts.js"],"names":["React","Component","Chart","makeStyles","classes","Grid","theindata","thelabels","LineGraph","chartRef","createRef","componentDidMount","myChartRef","current","getContext","progress","document","getElementById","type","data","labels","datasets","label","options","width","height","animation","duration","onProgress","value","currentStep","numSteps","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,OAAP,MAAoB,uCAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,SAAR,EAAmBC,SAAnB,QAAmC,4DAAnC,C,CAGA;;AACA,eAAe,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE7CQ,QAF6C,GAElCT,KAAK,CAACU,SAAN,EAFkC;AAAA;;AAK7CC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,UAAU,GAAG,KAAKH,QAAL,CAAcI,OAAd,CAAsBC,UAAtB,CAAiC,IAAjC,CAAnB;AACA,QAAIC,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,CAAf;AACA,QAAIf,KAAJ,CAAUU,UAAV,EAAsB;AAClBM,MAAAA,IAAI,EAAE,MADY;AAElBC,MAAAA,IAAI,EAAE;AACF;AACA;AACAC,QAAAA,MAAM,EAAEb,SAAS,CAACa,MAAV,CAAiBA,MAHvB;AAIFC,QAAAA,QAAQ,EAAE,CACN;AACIC,UAAAA,KAAK,EAAC,UADV;AAEIH,UAAAA,IAAI,EAAE,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,EAAgB,CAAhB,EAAkB,CAAlB,EAAoB,CAApB,EAAsB,CAAtB,EAAwB,CAAxB,EAA0B,CAA1B,EAA4B,CAA5B,EAA8B,CAA9B,EAAgC,CAAhC;AAFV,SADM;AAJR,OAFY;AAclBI,MAAAA,OAAO,EAAE;AACL;AACAC,QAAAA,KAAK,EAAG,OAFH;AAGLC,QAAAA,MAAM,EAAE,OAHH;AAILC,QAAAA,SAAS,EAAE;AACPC,UAAAA,QAAQ,EAAE,IADH;AAEPC,UAAAA,UAAU,EAAE,UAASF,SAAT,EAAoB;AAC9CX,YAAAA,QAAQ,CAACc,KAAT,GAAiBH,SAAS,CAACI,WAAV,GAAwBJ,SAAS,CAACK,QAAnD;AACA;AAJqB;AAJN;AAdS,KAAtB;AA6BH;;AACDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,EAAE,EAAC,SADP;AAEI,MAAA,GAAG,EAAE,KAAKvB,QAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAKC;AAAQ,MAAA,EAAE,EAAC,mBAAX;AAA+B,MAAA,KAAK,EAAE,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALD,CADJ;AAYH;;AAnD4C","sourcesContent":["import React, { Component } from 'react'\r\nimport Chart from \"chart.js\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport classes from \"../../assets/css/LineGraph.module.css\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {theindata, thelabels} from 'C:/NewReactResume/resm/src/Components/FirstML/AnotherMl.js';\r\n\r\n\r\n//const data = {data:[1,2,3,3,4]}\r\nexport default class LineGraph extends Component {\r\n\r\n    chartRef = React.createRef();\r\n    \r\n    \r\n    componentDidMount() {\r\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\r\n        var progress = document.getElementById('animationProgress')\r\n        new Chart(myChartRef, {\r\n            type: \"line\",\r\n            data: {\r\n                //Bring in data\r\n                //in tree structured\r\n                labels: thelabels.labels.labels,\r\n                datasets: [\r\n                    {\r\n                        label:'Forecast',\r\n                        data: [20,17,15,12,10,8,7,6,5,4,3,2,1,0]\r\n                    }]\r\n                ,\r\n                \r\n            },\r\n            options: {\r\n                //Customize chart options\r\n                width : '225px',\r\n                height: '225px',\r\n                animation: {\r\n                    duration: 1000,\r\n                    onProgress: function(animation) {\r\n\t\t\t\t\t\tprogress.value = animation.currentStep / animation.numSteps;\r\n\t\t\t\t\t}\r\n                    \r\n            }\r\n            }\r\n        });\r\n\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <div  >\r\n                <canvas\r\n                    id=\"myChart\"\r\n                    ref={this.chartRef}\r\n             />\r\n             <button id=\"animationProgress\" value={1}>\r\n                cambia\r\n             </button>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}