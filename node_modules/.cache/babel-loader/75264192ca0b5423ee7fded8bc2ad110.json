{"ast":null,"code":"import { toSet } from 'vega-util';\nvar Skip = toSet(['rule']),\n    Swap = toSet(['group', 'image', 'rect']);\nexport default function (encode, marktype) {\n  var code = '';\n  if (Skip[marktype]) return code;\n\n  if (encode.x2) {\n    if (encode.x) {\n      if (Swap[marktype]) {\n        code += 'if(o.x>o.x2)$=o.x,o.x=o.x2,o.x2=$;';\n      }\n\n      code += 'o.width=o.x2-o.x;';\n    } else {\n      code += 'o.x=o.x2-(o.width||0);';\n    }\n  }\n\n  if (encode.xc) {\n    code += 'o.x=o.xc-(o.width||0)/2;';\n  }\n\n  if (encode.y2) {\n    if (encode.y) {\n      if (Swap[marktype]) {\n        code += 'if(o.y>o.y2)$=o.y,o.y=o.y2,o.y2=$;';\n      }\n\n      code += 'o.height=o.y2-o.y;';\n    } else {\n      code += 'o.y=o.y2-(o.height||0);';\n    }\n  }\n\n  if (encode.yc) {\n    code += 'o.y=o.yc-(o.height||0)/2;';\n  }\n\n  return code;\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-parser/src/parsers/encode/adjust-spatial.js"],"names":["toSet","Skip","Swap","encode","marktype","code","x2","x","xc","y2","y","yc"],"mappings":"AAAA,SAAQA,KAAR,QAAoB,WAApB;AAEA,IAAIC,IAAI,GAAGD,KAAK,CAAC,CAAC,MAAD,CAAD,CAAhB;AAAA,IACIE,IAAI,GAAGF,KAAK,CAAC,CAAC,OAAD,EAAU,OAAV,EAAmB,MAAnB,CAAD,CADhB;AAGA,eAAe,UAASG,MAAT,EAAiBC,QAAjB,EAA2B;AACxC,MAAIC,IAAI,GAAG,EAAX;AAEA,MAAIJ,IAAI,CAACG,QAAD,CAAR,EAAoB,OAAOC,IAAP;;AAEpB,MAAIF,MAAM,CAACG,EAAX,EAAe;AACb,QAAIH,MAAM,CAACI,CAAX,EAAc;AACZ,UAAIL,IAAI,CAACE,QAAD,CAAR,EAAoB;AAClBC,QAAAA,IAAI,IAAI,oCAAR;AACD;;AACDA,MAAAA,IAAI,IAAI,mBAAR;AACD,KALD,MAKO;AACLA,MAAAA,IAAI,IAAI,wBAAR;AACD;AACF;;AAED,MAAIF,MAAM,CAACK,EAAX,EAAe;AACbH,IAAAA,IAAI,IAAI,0BAAR;AACD;;AAED,MAAIF,MAAM,CAACM,EAAX,EAAe;AACb,QAAIN,MAAM,CAACO,CAAX,EAAc;AACZ,UAAIR,IAAI,CAACE,QAAD,CAAR,EAAoB;AAClBC,QAAAA,IAAI,IAAI,oCAAR;AACD;;AACDA,MAAAA,IAAI,IAAI,oBAAR;AACD,KALD,MAKO;AACLA,MAAAA,IAAI,IAAI,yBAAR;AACD;AACF;;AAED,MAAIF,MAAM,CAACQ,EAAX,EAAe;AACbN,IAAAA,IAAI,IAAI,2BAAR;AACD;;AAED,SAAOA,IAAP;AACD","sourcesContent":["import {toSet} from 'vega-util';\n\nvar Skip = toSet(['rule']),\n    Swap = toSet(['group', 'image', 'rect']);\n\nexport default function(encode, marktype) {\n  var code = '';\n\n  if (Skip[marktype]) return code;\n\n  if (encode.x2) {\n    if (encode.x) {\n      if (Swap[marktype]) {\n        code += 'if(o.x>o.x2)$=o.x,o.x=o.x2,o.x2=$;';\n      }\n      code += 'o.width=o.x2-o.x;';\n    } else {\n      code += 'o.x=o.x2-(o.width||0);';\n    }\n  }\n\n  if (encode.xc) {\n    code += 'o.x=o.xc-(o.width||0)/2;';\n  }\n\n  if (encode.y2) {\n    if (encode.y) {\n      if (Swap[marktype]) {\n        code += 'if(o.y>o.y2)$=o.y,o.y=o.y2,o.y2=$;';\n      }\n      code += 'o.height=o.y2-o.y;';\n    } else {\n      code += 'o.y=o.y2-(o.height||0);';\n    }\n  }\n\n  if (encode.yc) {\n    code += 'o.y=o.yc-(o.height||0)/2;';\n  }\n\n  return code;\n}\n"]},"metadata":{},"sourceType":"module"}