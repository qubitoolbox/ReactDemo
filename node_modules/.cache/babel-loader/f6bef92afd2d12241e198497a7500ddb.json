{"ast":null,"code":"import { getScale } from './scale';\nimport { scaleFraction, scale as get } from 'vega-scale';\nimport { Gradient } from 'vega-scenegraph';\nimport { identity, peek } from 'vega-util';\nexport default function (scale, p0, p1, count, group) {\n  scale = getScale(scale, (group || this).context);\n  const gradient = Gradient(p0, p1);\n  let stops = scale.domain(),\n      min = stops[0],\n      max = peek(stops),\n      fraction = identity;\n\n  if (!(max - min)) {\n    // expand scale if domain has zero span, fix #1479\n    scale = (scale.interpolator ? get('sequential')().interpolator(scale.interpolator()) : get('linear')().interpolate(scale.interpolate()).range(scale.range())).domain([min = 0, max = 1]);\n  } else {\n    fraction = scaleFraction(scale, min, max);\n  }\n\n  if (scale.ticks) {\n    stops = scale.ticks(+count || 15);\n    if (min !== stops[0]) stops.unshift(min);\n    if (max !== peek(stops)) stops.push(max);\n  }\n\n  stops.forEach(_ => gradient.stop(fraction(_), scale(_)));\n  return gradient;\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-functions/src/scale-gradient.js"],"names":["getScale","scaleFraction","scale","get","Gradient","identity","peek","p0","p1","count","group","context","gradient","stops","domain","min","max","fraction","interpolator","interpolate","range","ticks","unshift","push","forEach","_","stop"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,SAAvB;AACA,SAAQC,aAAR,EAAuBC,KAAK,IAAIC,GAAhC,QAA0C,YAA1C;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,SAAQC,QAAR,EAAkBC,IAAlB,QAA6B,WAA7B;AAEA,eAAe,UAASJ,KAAT,EAAgBK,EAAhB,EAAoBC,EAApB,EAAwBC,KAAxB,EAA+BC,KAA/B,EAAsC;AACnDR,EAAAA,KAAK,GAAGF,QAAQ,CAACE,KAAD,EAAQ,CAACQ,KAAK,IAAI,IAAV,EAAgBC,OAAxB,CAAhB;AAEA,QAAMC,QAAQ,GAAGR,QAAQ,CAACG,EAAD,EAAKC,EAAL,CAAzB;AAEA,MAAIK,KAAK,GAAGX,KAAK,CAACY,MAAN,EAAZ;AAAA,MACIC,GAAG,GAAGF,KAAK,CAAC,CAAD,CADf;AAAA,MAEIG,GAAG,GAAGV,IAAI,CAACO,KAAD,CAFd;AAAA,MAGII,QAAQ,GAAGZ,QAHf;;AAKA,MAAI,EAAEW,GAAG,GAAGD,GAAR,CAAJ,EAAkB;AAChB;AACAb,IAAAA,KAAK,GAAG,CAACA,KAAK,CAACgB,YAAN,GACLf,GAAG,CAAC,YAAD,CAAH,GAAoBe,YAApB,CAAiChB,KAAK,CAACgB,YAAN,EAAjC,CADK,GAELf,GAAG,CAAC,QAAD,CAAH,GAAgBgB,WAAhB,CAA4BjB,KAAK,CAACiB,WAAN,EAA5B,EAAiDC,KAAjD,CAAuDlB,KAAK,CAACkB,KAAN,EAAvD,CAFI,EAGNN,MAHM,CAGC,CAACC,GAAG,GAAC,CAAL,EAAQC,GAAG,GAAC,CAAZ,CAHD,CAAR;AAID,GAND,MAMO;AACLC,IAAAA,QAAQ,GAAGhB,aAAa,CAACC,KAAD,EAAQa,GAAR,EAAaC,GAAb,CAAxB;AACD;;AAED,MAAId,KAAK,CAACmB,KAAV,EAAiB;AACfR,IAAAA,KAAK,GAAGX,KAAK,CAACmB,KAAN,CAAY,CAACZ,KAAD,IAAU,EAAtB,CAAR;AACA,QAAIM,GAAG,KAAKF,KAAK,CAAC,CAAD,CAAjB,EAAsBA,KAAK,CAACS,OAAN,CAAcP,GAAd;AACtB,QAAIC,GAAG,KAAKV,IAAI,CAACO,KAAD,CAAhB,EAAyBA,KAAK,CAACU,IAAN,CAAWP,GAAX;AAC1B;;AAEDH,EAAAA,KAAK,CAACW,OAAN,CAAcC,CAAC,IAAIb,QAAQ,CAACc,IAAT,CAAcT,QAAQ,CAACQ,CAAD,CAAtB,EAA2BvB,KAAK,CAACuB,CAAD,CAAhC,CAAnB;AAEA,SAAOb,QAAP;AACD","sourcesContent":["import {getScale} from './scale';\nimport {scaleFraction, scale as get} from 'vega-scale';\nimport {Gradient} from 'vega-scenegraph';\nimport {identity, peek} from 'vega-util';\n\nexport default function(scale, p0, p1, count, group) {\n  scale = getScale(scale, (group || this).context);\n\n  const gradient = Gradient(p0, p1);\n\n  let stops = scale.domain(),\n      min = stops[0],\n      max = peek(stops),\n      fraction = identity\n\n  if (!(max - min)) {\n    // expand scale if domain has zero span, fix #1479\n    scale = (scale.interpolator\n      ? get('sequential')().interpolator(scale.interpolator())\n      : get('linear')().interpolate(scale.interpolate()).range(scale.range())\n    ).domain([min=0, max=1]);\n  } else {\n    fraction = scaleFraction(scale, min, max);\n  }\n\n  if (scale.ticks) {\n    stops = scale.ticks(+count || 15);\n    if (min !== stops[0]) stops.unshift(min);\n    if (max !== peek(stops)) stops.push(max);\n  }\n\n  stops.forEach(_ => gradient.stop(fraction(_), scale(_)));\n\n  return gradient;\n}\n"]},"metadata":{},"sourceType":"module"}