{"ast":null,"code":"import { Top, Bottom, Left, GuideTitleStyle, zero, one } from './constants';\nimport guideMark from './guide-mark';\nimport { alignExpr, anchorExpr, lookup } from './guide-util';\nimport { encoder, has } from '../encode/encode-util';\nimport { TextMark } from '../marks/marktypes';\nimport { AxisTitleRole } from '../marks/roles';\nimport { addEncode, addEncoders } from '../encode/encode-util';\nimport { extend } from 'vega-util';\nexport default function (spec, config, userEncode, dataRef) {\n  var _ = lookup(spec, config),\n      orient = spec.orient,\n      sign = orient === Left || orient === Top ? -1 : 1,\n      horizontal = orient === Top || orient === Bottom,\n      encode,\n      enter,\n      update,\n      titlePos;\n\n  encode = {\n    enter: enter = {\n      opacity: zero,\n      anchor: encoder(_('titleAnchor')),\n      align: {\n        signal: alignExpr\n      }\n    },\n    update: update = extend({}, enter, {\n      opacity: one,\n      text: encoder(spec.title)\n    }),\n    exit: {\n      opacity: zero\n    }\n  };\n  titlePos = {\n    signal: `lerp(range(\"${spec.scale}\"), ${anchorExpr(0, 1, 0.5)})`\n  };\n\n  if (horizontal) {\n    update.x = titlePos;\n    enter.angle = {\n      value: 0\n    };\n    enter.baseline = {\n      value: orient === Top ? 'bottom' : 'top'\n    };\n  } else {\n    update.y = titlePos;\n    enter.angle = {\n      value: sign * 90\n    };\n    enter.baseline = {\n      value: 'bottom'\n    };\n  }\n\n  addEncoders(encode, {\n    angle: _('titleAngle'),\n    baseline: _('titleBaseline'),\n    fill: _('titleColor'),\n    fillOpacity: _('titleOpacity'),\n    font: _('titleFont'),\n    fontSize: _('titleFontSize'),\n    fontStyle: _('titleFontStyle'),\n    fontWeight: _('titleFontWeight'),\n    limit: _('titleLimit'),\n    lineHeight: _('titleLineHeight')\n  }, {\n    // require update\n    align: _('titleAlign')\n  });\n  !addEncode(encode, 'x', _('titleX'), 'update') && !horizontal && !has('x', userEncode) && (encode.enter.auto = {\n    value: true\n  });\n  !addEncode(encode, 'y', _('titleY'), 'update') && horizontal && !has('y', userEncode) && (encode.enter.auto = {\n    value: true\n  });\n  return guideMark(TextMark, AxisTitleRole, GuideTitleStyle, null, dataRef, encode, userEncode);\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-parser/src/parsers/guides/axis-title.js"],"names":["Top","Bottom","Left","GuideTitleStyle","zero","one","guideMark","alignExpr","anchorExpr","lookup","encoder","has","TextMark","AxisTitleRole","addEncode","addEncoders","extend","spec","config","userEncode","dataRef","_","orient","sign","horizontal","encode","enter","update","titlePos","opacity","anchor","align","signal","text","title","exit","scale","x","angle","value","baseline","y","fill","fillOpacity","font","fontSize","fontStyle","fontWeight","limit","lineHeight","auto"],"mappings":"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","sourcesContent":["import {Top, Bottom, Left, GuideTitleStyle, zero, one} from './constants';\nimport guideMark from './guide-mark';\nimport {alignExpr, anchorExpr, lookup} from './guide-util';\nimport {encoder, has} from '../encode/encode-util';\nimport {TextMark} from '../marks/marktypes';\nimport {AxisTitleRole} from '../marks/roles';\nimport {addEncode, addEncoders} from '../encode/encode-util';\nimport {extend} from 'vega-util';\n\nexport default function(spec, config, userEncode, dataRef) {\n  var _ = lookup(spec, config),\n      orient = spec.orient,\n      sign = (orient === Left || orient === Top) ? -1 : 1,\n      horizontal = (orient === Top || orient === Bottom),\n      encode, enter, update, titlePos;\n\n  encode = {\n    enter: enter = {\n      opacity: zero,\n      anchor: encoder(_('titleAnchor')),\n      align: {signal: alignExpr}\n    },\n    update: update = extend({}, enter, {\n      opacity: one,\n      text: encoder(spec.title)\n    }),\n    exit: {\n      opacity: zero\n    }\n  };\n\n  titlePos = {\n    signal: `lerp(range(\"${spec.scale}\"), ${anchorExpr(0, 1, 0.5)})`\n  };\n\n  if (horizontal) {\n    update.x = titlePos;\n    enter.angle = {value: 0};\n    enter.baseline = {value: orient === Top ? 'bottom' : 'top'};\n  } else {\n    update.y = titlePos;\n    enter.angle = {value: sign * 90};\n    enter.baseline = {value: 'bottom'};\n  }\n\n  addEncoders(encode, {\n    angle:       _('titleAngle'),\n    baseline:    _('titleBaseline'),\n    fill:        _('titleColor'),\n    fillOpacity: _('titleOpacity'),\n    font:        _('titleFont'),\n    fontSize:    _('titleFontSize'),\n    fontStyle:   _('titleFontStyle'),\n    fontWeight:  _('titleFontWeight'),\n    limit:       _('titleLimit'),\n    lineHeight:  _('titleLineHeight')\n  }, { // require update\n    align:       _('titleAlign')\n  });\n\n  !addEncode(encode, 'x', _('titleX'), 'update')\n    && !horizontal && !has('x', userEncode)\n    && (encode.enter.auto = {value: true});\n\n  !addEncode(encode, 'y', _('titleY'), 'update')\n    && horizontal && !has('y', userEncode)\n    && (encode.enter.auto = {value: true});\n\n  return guideMark(TextMark, AxisTitleRole, GuideTitleStyle, null, dataRef, encode, userEncode);\n}\n"]},"metadata":{},"sourceType":"module"}