{"ast":null,"code":"import { GuideTitleStyle, zero, one } from './constants';\nimport guideMark from './guide-mark';\nimport { lookup, alignExpr, anchorExpr } from './guide-util';\nimport { TextMark } from '../marks/marktypes';\nimport { LegendTitleRole } from '../marks/roles';\nimport { addEncoders } from '../encode/encode-util'; // expression logic for align, anchor, angle, and baseline calculation\n\nconst isL = 'item.orient === \"left\"',\n      isR = 'item.orient === \"right\"',\n      isLR = `(${isL} || ${isR})`,\n      isVG = `datum.vgrad && ${isLR}`,\n      baseline = anchorExpr('\"top\"', '\"bottom\"', '\"middle\"'),\n      alignFlip = anchorExpr('\"right\"', '\"left\"', '\"center\"'),\n      exprAlign = `datum.vgrad && ${isR} ? (${alignFlip}) : (${isLR} && !(datum.vgrad && ${isL})) ? \"left\" : ${alignExpr}`,\n      exprAnchor = `item._anchor || (${isLR} ? \"middle\" : \"start\")`,\n      exprAngle = `${isVG} ? (${isL} ? -90 : 90) : 0`,\n      exprBaseline = `${isLR} ? (datum.vgrad ? (${isR} ? \"bottom\" : \"top\") : ${baseline}) : \"top\"`;\nexport default function (spec, config, userEncode, dataRef) {\n  var _ = lookup(spec, config),\n      encode;\n\n  encode = {\n    enter: {\n      opacity: zero\n    },\n    update: {\n      opacity: one,\n      x: {\n        field: {\n          group: 'padding'\n        }\n      },\n      y: {\n        field: {\n          group: 'padding'\n        }\n      }\n    },\n    exit: {\n      opacity: zero\n    }\n  };\n  addEncoders(encode, {\n    orient: _('titleOrient'),\n    _anchor: _('titleAnchor'),\n    anchor: {\n      signal: exprAnchor\n    },\n    angle: {\n      signal: exprAngle\n    },\n    align: {\n      signal: exprAlign\n    },\n    baseline: {\n      signal: exprBaseline\n    },\n    text: spec.title,\n    fill: _('titleColor'),\n    fillOpacity: _('titleOpacity'),\n    font: _('titleFont'),\n    fontSize: _('titleFontSize'),\n    fontStyle: _('titleFontStyle'),\n    fontWeight: _('titleFontWeight'),\n    limit: _('titleLimit'),\n    lineHeight: _('titleLineHeight')\n  }, {\n    // require update\n    align: _('titleAlign'),\n    baseline: _('titleBaseline')\n  });\n  return guideMark(TextMark, LegendTitleRole, GuideTitleStyle, null, dataRef, encode, userEncode);\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-parser/src/parsers/guides/legend-title.js"],"names":["GuideTitleStyle","zero","one","guideMark","lookup","alignExpr","anchorExpr","TextMark","LegendTitleRole","addEncoders","isL","isR","isLR","isVG","baseline","alignFlip","exprAlign","exprAnchor","exprAngle","exprBaseline","spec","config","userEncode","dataRef","_","encode","enter","opacity","update","x","field","group","y","exit","orient","_anchor","anchor","signal","angle","align","text","title","fill","fillOpacity","font","fontSize","fontStyle","fontWeight","limit","lineHeight"],"mappings":"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","sourcesContent":["import {GuideTitleStyle, zero, one} from './constants';\nimport guideMark from './guide-mark';\nimport {lookup, alignExpr, anchorExpr} from './guide-util';\nimport {TextMark} from '../marks/marktypes';\nimport {LegendTitleRole} from '../marks/roles';\nimport {addEncoders} from '../encode/encode-util';\n\n// expression logic for align, anchor, angle, and baseline calculation\nconst isL = 'item.orient === \"left\"',\n      isR = 'item.orient === \"right\"',\n      isLR = `(${isL} || ${isR})`,\n      isVG = `datum.vgrad && ${isLR}`,\n      baseline = anchorExpr('\"top\"', '\"bottom\"', '\"middle\"'),\n      alignFlip = anchorExpr('\"right\"', '\"left\"', '\"center\"'),\n      exprAlign = `datum.vgrad && ${isR} ? (${alignFlip}) : (${isLR} && !(datum.vgrad && ${isL})) ? \"left\" : ${alignExpr}`,\n      exprAnchor = `item._anchor || (${isLR} ? \"middle\" : \"start\")`,\n      exprAngle = `${isVG} ? (${isL} ? -90 : 90) : 0`,\n      exprBaseline = `${isLR} ? (datum.vgrad ? (${isR} ? \"bottom\" : \"top\") : ${baseline}) : \"top\"`;\n\nexport default function(spec, config, userEncode, dataRef) {\n  var _ = lookup(spec, config), encode;\n\n  encode = {\n    enter: {opacity: zero},\n    update: {\n      opacity: one,\n      x: {field: {group: 'padding'}},\n      y: {field: {group: 'padding'}}\n    },\n    exit: {opacity: zero}\n  };\n\n  addEncoders(encode, {\n    orient:      _('titleOrient'),\n    _anchor:     _('titleAnchor'),\n    anchor:      {signal: exprAnchor},\n    angle:       {signal: exprAngle},\n    align:       {signal: exprAlign},\n    baseline:    {signal: exprBaseline},\n    text:        spec.title,\n    fill:        _('titleColor'),\n    fillOpacity: _('titleOpacity'),\n    font:        _('titleFont'),\n    fontSize:    _('titleFontSize'),\n    fontStyle:   _('titleFontStyle'),\n    fontWeight:  _('titleFontWeight'),\n    limit:       _('titleLimit'),\n    lineHeight:  _('titleLineHeight')\n  }, { // require update\n    align:       _('titleAlign'),\n    baseline:    _('titleBaseline'),\n  });\n\n  return guideMark(TextMark, LegendTitleRole, GuideTitleStyle, null, dataRef, encode, userEncode);\n}\n"]},"metadata":{},"sourceType":"module"}