{"ast":null,"code":"import parseEncode from '../encode';\nimport { FrameRole, MarkRole } from '../marks/roles';\nimport { array, extend, hasOwnProperty, isArray, isObject } from 'vega-util';\nexport function encoder(_) {\n  return isObject(_) && !isArray(_) ? extend({}, _) : {\n    value: _\n  };\n}\nexport function addEncode(object, name, value, set) {\n  if (value != null) {\n    if (isObject(value) && !isArray(value)) {\n      object.update[name] = value;\n    } else {\n      object[set || 'enter'][name] = {\n        value: value\n      };\n    }\n\n    return 1;\n  } else {\n    return 0;\n  }\n}\nexport function addEncoders(object, enter, update) {\n  for (let name in enter) {\n    addEncode(object, name, enter[name]);\n  }\n\n  for (let name in update) {\n    addEncode(object, name, update[name], 'update');\n  }\n}\nexport function extendEncode(encode, extra, skip) {\n  for (var name in extra) {\n    if (skip && hasOwnProperty(skip, name)) continue;\n    encode[name] = extend(encode[name] || {}, extra[name]);\n  }\n\n  return encode;\n}\nexport function encoders(encode, type, role, style, scope, params) {\n  var enc, key;\n  params = params || {};\n  params.encoders = {\n    $encode: enc = {}\n  };\n  encode = applyDefaults(encode, type, role, style, scope.config);\n\n  for (key in encode) {\n    enc[key] = parseEncode(encode[key], type, params, scope);\n  }\n\n  return params;\n}\n\nfunction applyDefaults(encode, type, role, style, config) {\n  var defaults = {},\n      enter = {},\n      update,\n      key,\n      skip,\n      props; // ignore legend and axis\n\n  if (role == 'legend' || String(role).indexOf('axis') === 0) {\n    role = null;\n  } // resolve mark config\n\n\n  props = role === FrameRole ? config.group : role === MarkRole ? extend({}, config.mark, config[type]) : null;\n\n  for (key in props) {\n    // do not apply defaults if relevant fields are defined\n    skip = has(key, encode) || (key === 'fill' || key === 'stroke') && (has('fill', encode) || has('stroke', encode));\n    if (!skip) applyDefault(defaults, key, props[key]);\n  } // resolve styles, apply with increasing precedence\n\n\n  array(style).forEach(function (name) {\n    var props = config.style && config.style[name];\n\n    for (var key in props) {\n      if (!has(key, encode)) {\n        applyDefault(defaults, key, props[key]);\n      }\n    }\n  });\n  encode = extend({}, encode); // defensive copy\n\n  for (key in defaults) {\n    props = defaults[key];\n\n    if (props.signal) {\n      (update = update || {})[key] = props;\n    } else {\n      enter[key] = props;\n    }\n  }\n\n  encode.enter = extend(enter, encode.enter);\n  if (update) encode.update = extend(update, encode.update);\n  return encode;\n}\n\nfunction applyDefault(defaults, key, value) {\n  defaults[key] = value && value.signal ? {\n    signal: value.signal\n  } : {\n    value: value\n  };\n}\n\nexport function has(key, encode) {\n  return encode && (encode.enter && encode.enter[key] || encode.update && encode.update[key]);\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-parser/src/parsers/encode/encode-util.js"],"names":["parseEncode","FrameRole","MarkRole","array","extend","hasOwnProperty","isArray","isObject","encoder","_","value","addEncode","object","name","set","update","addEncoders","enter","extendEncode","encode","extra","skip","encoders","type","role","style","scope","params","enc","key","$encode","applyDefaults","config","defaults","props","String","indexOf","group","mark","has","applyDefault","forEach","signal"],"mappings":"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","sourcesContent":["import parseEncode from '../encode';\nimport {FrameRole, MarkRole} from '../marks/roles';\nimport {array, extend, hasOwnProperty, isArray, isObject} from 'vega-util';\n\nexport function encoder(_) {\n  return isObject(_) && !isArray(_) ? extend({}, _) : {value: _};\n}\n\nexport function addEncode(object, name, value, set) {\n  if (value != null) {\n    if (isObject(value) && !isArray(value)) {\n      object.update[name] = value;\n    } else {\n      object[set || 'enter'][name] = {value: value};\n    }\n    return 1;\n  } else {\n    return 0;\n  }\n}\n\nexport function addEncoders(object, enter, update) {\n  for (let name in enter) {\n    addEncode(object, name, enter[name]);\n  }\n  for (let name in update) {\n    addEncode(object, name, update[name], 'update');\n  }\n}\n\nexport function extendEncode(encode, extra, skip) {\n  for (var name in extra) {\n    if (skip && hasOwnProperty(skip, name)) continue;\n    encode[name] = extend(encode[name] || {}, extra[name]);\n  }\n  return encode;\n}\n\nexport function encoders(encode, type, role, style, scope, params) {\n  var enc, key;\n  params = params || {};\n  params.encoders = {$encode: (enc = {})};\n\n  encode = applyDefaults(encode, type, role, style, scope.config);\n\n  for (key in encode) {\n    enc[key] = parseEncode(encode[key], type, params, scope);\n  }\n\n  return params;\n}\n\nfunction applyDefaults(encode, type, role, style, config) {\n  var defaults = {}, enter = {}, update, key, skip, props;\n\n  // ignore legend and axis\n  if (role == 'legend' || String(role).indexOf('axis') === 0) {\n    role = null;\n  }\n\n  // resolve mark config\n  props = role === FrameRole ? config.group\n    : (role === MarkRole) ? extend({}, config.mark, config[type])\n    : null;\n\n  for (key in props) {\n    // do not apply defaults if relevant fields are defined\n    skip = has(key, encode)\n      || (key === 'fill' || key === 'stroke')\n      && (has('fill', encode) || has('stroke', encode));\n\n    if (!skip) applyDefault(defaults, key, props[key]);\n  }\n\n  // resolve styles, apply with increasing precedence\n  array(style).forEach(function(name) {\n    var props = config.style && config.style[name];\n    for (var key in props) {\n      if (!has(key, encode)) {\n        applyDefault(defaults, key, props[key]);\n      }\n    }\n  });\n\n  encode = extend({}, encode); // defensive copy\n  for (key in defaults) {\n    props = defaults[key];\n    if (props.signal) {\n      (update = update || {})[key] = props;\n    } else {\n      enter[key] = props;\n    }\n  }\n\n  encode.enter = extend(enter, encode.enter);\n  if (update) encode.update = extend(update, encode.update);\n\n  return encode;\n}\n\nfunction applyDefault(defaults, key, value) {\n  defaults[key] = value && value.signal\n    ? {signal: value.signal}\n    : {value: value}\n}\n\nexport function has(key, encode) {\n  return encode && (\n    (encode.enter && encode.enter[key]) ||\n    (encode.update && encode.update[key])\n  );\n}\n"]},"metadata":{},"sourceType":"module"}