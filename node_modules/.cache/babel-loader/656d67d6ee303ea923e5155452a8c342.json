{"ast":null,"code":"import { tupleid } from 'vega-dataflow';\nimport { bootstrapCI, quartiles } from 'vega-statistics';\nimport { extentIndex, field, hasOwnProperty } from 'vega-util';\nexport default function TupleStore(key) {\n  this._key = key ? field(key) : tupleid;\n  this.reset();\n}\nvar prototype = TupleStore.prototype;\n\nprototype.reset = function () {\n  this._add = [];\n  this._rem = [];\n  this._ext = null;\n  this._get = null;\n  this._q = null;\n};\n\nprototype.add = function (v) {\n  this._add.push(v);\n};\n\nprototype.rem = function (v) {\n  this._rem.push(v);\n};\n\nprototype.values = function () {\n  this._get = null;\n  if (this._rem.length === 0) return this._add;\n  var a = this._add,\n      r = this._rem,\n      k = this._key,\n      n = a.length,\n      m = r.length,\n      x = Array(n - m),\n      map = {},\n      i,\n      j,\n      v; // use unique key field to clear removed values\n\n  for (i = 0; i < m; ++i) {\n    map[k(r[i])] = 1;\n  }\n\n  for (i = 0, j = 0; i < n; ++i) {\n    if (map[k(v = a[i])]) {\n      map[k(v)] = 0;\n    } else {\n      x[j++] = v;\n    }\n  }\n\n  this._rem = [];\n  return this._add = x;\n}; // memoizing statistics methods\n\n\nprototype.distinct = function (get) {\n  var v = this.values(),\n      n = v.length,\n      map = {},\n      count = 0,\n      s;\n\n  while (--n >= 0) {\n    s = get(v[n]) + '';\n\n    if (!hasOwnProperty(map, s)) {\n      map[s] = 1;\n      ++count;\n    }\n  }\n\n  return count;\n};\n\nprototype.extent = function (get) {\n  if (this._get !== get || !this._ext) {\n    var v = this.values(),\n        i = extentIndex(v, get);\n    this._ext = [v[i[0]], v[i[1]]];\n    this._get = get;\n  }\n\n  return this._ext;\n};\n\nprototype.argmin = function (get) {\n  return this.extent(get)[0] || {};\n};\n\nprototype.argmax = function (get) {\n  return this.extent(get)[1] || {};\n};\n\nprototype.min = function (get) {\n  var m = this.extent(get)[0];\n  return m != null ? get(m) : undefined;\n};\n\nprototype.max = function (get) {\n  var m = this.extent(get)[1];\n  return m != null ? get(m) : undefined;\n};\n\nprototype.quartile = function (get) {\n  if (this._get !== get || !this._q) {\n    this._q = quartiles(this.values(), get);\n    this._get = get;\n  }\n\n  return this._q;\n};\n\nprototype.q1 = function (get) {\n  return this.quartile(get)[0];\n};\n\nprototype.q2 = function (get) {\n  return this.quartile(get)[1];\n};\n\nprototype.q3 = function (get) {\n  return this.quartile(get)[2];\n};\n\nprototype.ci = function (get) {\n  if (this._get !== get || !this._ci) {\n    this._ci = bootstrapCI(this.values(), 1000, 0.05, get);\n    this._get = get;\n  }\n\n  return this._ci;\n};\n\nprototype.ci0 = function (get) {\n  return this.ci(get)[0];\n};\n\nprototype.ci1 = function (get) {\n  return this.ci(get)[1];\n};","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-transforms/src/util/TupleStore.js"],"names":["tupleid","bootstrapCI","quartiles","extentIndex","field","hasOwnProperty","TupleStore","key","_key","reset","prototype","_add","_rem","_ext","_get","_q","add","v","push","rem","values","length","a","r","k","n","m","x","Array","map","i","j","distinct","get","count","s","extent","argmin","argmax","min","undefined","max","quartile","q1","q2","q3","ci","_ci","ci0","ci1"],"mappings":"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","sourcesContent":["import {tupleid} from 'vega-dataflow';\nimport {bootstrapCI, quartiles} from 'vega-statistics';\nimport {extentIndex, field, hasOwnProperty} from 'vega-util';\n\nexport default function TupleStore(key) {\n  this._key = key ? field(key) : tupleid;\n  this.reset();\n}\n\nvar prototype = TupleStore.prototype;\n\nprototype.reset = function() {\n  this._add = [];\n  this._rem = [];\n  this._ext = null;\n  this._get = null;\n  this._q = null;\n};\n\nprototype.add = function(v) {\n  this._add.push(v);\n};\n\nprototype.rem = function(v) {\n  this._rem.push(v);\n};\n\nprototype.values = function() {\n  this._get = null;\n  if (this._rem.length === 0) return this._add;\n\n  var a = this._add,\n      r = this._rem,\n      k = this._key,\n      n = a.length,\n      m = r.length,\n      x = Array(n - m),\n      map = {}, i, j, v;\n\n  // use unique key field to clear removed values\n  for (i=0; i<m; ++i) {\n    map[k(r[i])] = 1;\n  }\n  for (i=0, j=0; i<n; ++i) {\n    if (map[k(v = a[i])]) {\n      map[k(v)] = 0;\n    } else {\n      x[j++] = v;\n    }\n  }\n\n  this._rem = [];\n  return (this._add = x);\n};\n\n// memoizing statistics methods\n\nprototype.distinct = function(get) {\n  var v = this.values(),\n      n = v.length,\n      map = {},\n      count = 0, s;\n\n  while (--n >= 0) {\n    s = get(v[n]) + '';\n    if (!hasOwnProperty(map, s)) {\n      map[s] = 1;\n      ++count;\n    }\n  }\n\n  return count;\n};\n\nprototype.extent = function(get) {\n  if (this._get !== get || !this._ext) {\n    var v = this.values(),\n        i = extentIndex(v, get);\n    this._ext = [v[i[0]], v[i[1]]];\n    this._get = get;\n  }\n  return this._ext;\n};\n\nprototype.argmin = function(get) {\n  return this.extent(get)[0] || {};\n};\n\nprototype.argmax = function(get) {\n  return this.extent(get)[1] || {};\n};\n\nprototype.min = function(get) {\n  var m = this.extent(get)[0];\n  return m != null ? get(m) : undefined;\n};\n\nprototype.max = function(get) {\n  var m = this.extent(get)[1];\n  return m != null ? get(m) : undefined;\n};\n\nprototype.quartile = function(get) {\n  if (this._get !== get || !this._q) {\n    this._q = quartiles(this.values(), get);\n    this._get = get;\n  }\n  return this._q;\n};\n\nprototype.q1 = function(get) {\n  return this.quartile(get)[0];\n};\n\nprototype.q2 = function(get) {\n  return this.quartile(get)[1];\n};\n\nprototype.q3 = function(get) {\n  return this.quartile(get)[2];\n};\n\nprototype.ci = function(get) {\n  if (this._get !== get || !this._ci) {\n    this._ci = bootstrapCI(this.values(), 1000, 0.05, get);\n    this._get = get;\n  }\n  return this._ci;\n};\n\nprototype.ci0 = function(get) {\n  return this.ci(get)[0];\n};\n\nprototype.ci1 = function(get) {\n  return this.ci(get)[1];\n};\n"]},"metadata":{},"sourceType":"module"}