{"ast":null,"code":"import { Transform, ingest, tupleid } from 'vega-dataflow';\nimport { error, fastmap, inherits, isArray } from 'vega-util';\n/**\n * Joins a set of data elements against a set of visual items.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): object} [params.item] - An item generator function.\n * @param {function(object): *} [params.key] - The key field associating data and visual items.\n */\n\nexport default function DataJoin(params) {\n  Transform.call(this, null, params);\n}\nvar prototype = inherits(DataJoin, Transform);\n\nfunction defaultItemCreate() {\n  return ingest({});\n}\n\nfunction isExit(t) {\n  return t.exit;\n}\n\nprototype.transform = function (_, pulse) {\n  var df = pulse.dataflow,\n      out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n      item = _.item || defaultItemCreate,\n      key = _.key || tupleid,\n      map = this.value; // prevent transient (e.g., hover) requests from\n  // cascading across marks derived from marks\n\n  if (isArray(out.encode)) {\n    out.encode = null;\n  }\n\n  if (map && (_.modified('key') || pulse.modified(key))) {\n    error('DataJoin does not support modified key function or fields.');\n  }\n\n  if (!map) {\n    pulse = pulse.addAll();\n    this.value = map = fastmap().test(isExit);\n\n    map.lookup = function (t) {\n      return map.get(key(t));\n    };\n  }\n\n  pulse.visit(pulse.ADD, function (t) {\n    var k = key(t),\n        x = map.get(k);\n\n    if (x) {\n      if (x.exit) {\n        map.empty--;\n        out.add.push(x);\n      } else {\n        out.mod.push(x);\n      }\n    } else {\n      map.set(k, x = item(t));\n      out.add.push(x);\n    }\n\n    x.datum = t;\n    x.exit = false;\n  });\n  pulse.visit(pulse.MOD, function (t) {\n    var k = key(t),\n        x = map.get(k);\n\n    if (x) {\n      x.datum = t;\n      out.mod.push(x);\n    }\n  });\n  pulse.visit(pulse.REM, function (t) {\n    var k = key(t),\n        x = map.get(k);\n\n    if (t === x.datum && !x.exit) {\n      out.rem.push(x);\n      x.exit = true;\n      ++map.empty;\n    }\n  });\n  if (pulse.changed(pulse.ADD_MOD)) out.modifies('datum');\n  if (_.clean && map.empty > df.cleanThreshold) df.runAfter(map.clean);\n  return out;\n};","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-encode/src/DataJoin.js"],"names":["Transform","ingest","tupleid","error","fastmap","inherits","isArray","DataJoin","params","call","prototype","defaultItemCreate","isExit","t","exit","transform","_","pulse","df","dataflow","out","fork","NO_SOURCE","NO_FIELDS","item","key","map","value","encode","modified","addAll","test","lookup","get","visit","ADD","k","x","empty","add","push","mod","set","datum","MOD","REM","rem","changed","ADD_MOD","modifies","clean","cleanThreshold","runAfter"],"mappings":"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","sourcesContent":["import {Transform, ingest, tupleid} from 'vega-dataflow';\nimport {error, fastmap, inherits, isArray} from 'vega-util';\n\n/**\n * Joins a set of data elements against a set of visual items.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): object} [params.item] - An item generator function.\n * @param {function(object): *} [params.key] - The key field associating data and visual items.\n */\nexport default function DataJoin(params) {\n  Transform.call(this, null, params);\n}\n\nvar prototype = inherits(DataJoin, Transform);\n\nfunction defaultItemCreate() {\n  return ingest({});\n}\n\nfunction isExit(t) {\n  return t.exit;\n}\n\nprototype.transform = function(_, pulse) {\n  var df = pulse.dataflow,\n      out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n      item = _.item || defaultItemCreate,\n      key = _.key || tupleid,\n      map = this.value;\n\n  // prevent transient (e.g., hover) requests from\n  // cascading across marks derived from marks\n  if (isArray(out.encode)) {\n    out.encode = null;\n  }\n\n  if (map && (_.modified('key') || pulse.modified(key))) {\n    error('DataJoin does not support modified key function or fields.');\n  }\n\n  if (!map) {\n    pulse = pulse.addAll();\n    this.value = map = fastmap().test(isExit);\n    map.lookup = function(t) { return map.get(key(t)); };\n  }\n\n  pulse.visit(pulse.ADD, function(t) {\n    var k = key(t),\n        x = map.get(k);\n\n    if (x) {\n      if (x.exit) {\n        map.empty--;\n        out.add.push(x);\n      } else {\n        out.mod.push(x);\n      }\n    } else {\n      map.set(k, (x = item(t)));\n      out.add.push(x);\n    }\n\n    x.datum = t;\n    x.exit = false;\n  });\n\n  pulse.visit(pulse.MOD, function(t) {\n    var k = key(t),\n        x = map.get(k);\n\n    if (x) {\n      x.datum = t;\n      out.mod.push(x);\n    }\n  });\n\n  pulse.visit(pulse.REM, function(t) {\n    var k = key(t),\n        x = map.get(k);\n\n    if (t === x.datum && !x.exit) {\n      out.rem.push(x);\n      x.exit = true;\n      ++map.empty;\n    }\n  });\n\n  if (pulse.changed(pulse.ADD_MOD)) out.modifies('datum');\n\n  if (_.clean && map.empty > df.cleanThreshold) df.runAfter(map.clean);\n\n  return out;\n};\n"]},"metadata":{},"sourceType":"module"}