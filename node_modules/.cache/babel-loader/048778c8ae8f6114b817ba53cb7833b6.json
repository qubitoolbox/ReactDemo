{"ast":null,"code":"import { Top, Bottom, Left, Right } from '../constants';\nimport { set, tempBounds } from './util';\nimport { boundStroke, multiLineOffset } from 'vega-scenegraph';\nexport function isYAxis(mark) {\n  var orient = mark.items[0].datum.orient;\n  return orient === Left || orient === Right;\n}\n\nfunction axisIndices(datum) {\n  var index = +datum.grid;\n  return [datum.ticks ? index++ : -1, // ticks index\n  datum.labels ? index++ : -1, // labels index\n  index + +datum.domain // title index\n  ];\n}\n\nexport function axisLayout(view, axis, width, height) {\n  var item = axis.items[0],\n      datum = item.datum,\n      orient = datum.orient,\n      delta = datum.translate != null ? datum.translate : 0.5,\n      indices = axisIndices(datum),\n      range = item.range,\n      offset = item.offset,\n      position = item.position,\n      minExtent = item.minExtent,\n      maxExtent = item.maxExtent,\n      title = datum.title && item.items[indices[2]].items[0],\n      titlePadding = item.titlePadding,\n      bounds = item.bounds,\n      dl = title && multiLineOffset(title),\n      x = 0,\n      y = 0,\n      i,\n      s;\n  tempBounds.clear().union(bounds);\n  bounds.clear();\n  if ((i = indices[0]) > -1) bounds.union(item.items[i].bounds);\n  if ((i = indices[1]) > -1) bounds.union(item.items[i].bounds); // position axis group and title\n\n  switch (orient) {\n    case Top:\n      x = position || 0;\n      y = -offset;\n      s = Math.max(minExtent, Math.min(maxExtent, -bounds.y1));\n      if (title) s = axisTitleLayout(view, title, s, titlePadding, dl, 0, -1, bounds);\n      bounds.add(0, -s).add(range, 0);\n      break;\n\n    case Left:\n      x = -offset;\n      y = position || 0;\n      s = Math.max(minExtent, Math.min(maxExtent, -bounds.x1));\n      if (title) s = axisTitleLayout(view, title, s, titlePadding, dl, 1, -1, bounds);\n      bounds.add(-s, 0).add(0, range);\n      break;\n\n    case Right:\n      x = width + offset;\n      y = position || 0;\n      s = Math.max(minExtent, Math.min(maxExtent, bounds.x2));\n      if (title) s = axisTitleLayout(view, title, s, titlePadding, dl, 1, 1, bounds);\n      bounds.add(0, 0).add(s, range);\n      break;\n\n    case Bottom:\n      x = position || 0;\n      y = height + offset;\n      s = Math.max(minExtent, Math.min(maxExtent, bounds.y2));\n      if (title) s = axisTitleLayout(view, title, s, titlePadding, 0, 0, 1, bounds);\n      bounds.add(0, 0).add(range, s);\n      break;\n\n    default:\n      x = item.x;\n      y = item.y;\n  } // update bounds\n\n\n  boundStroke(bounds.translate(x, y), item);\n\n  if (set(item, 'x', x + delta) | set(item, 'y', y + delta)) {\n    item.bounds = tempBounds;\n    view.dirty(item);\n    item.bounds = bounds;\n    view.dirty(item);\n  }\n\n  return item.mark.bounds.clear().union(bounds);\n}\n\nfunction axisTitleLayout(view, title, offset, pad, dl, isYAxis, sign, bounds) {\n  var b = title.bounds,\n      dx = 0,\n      dy = 0;\n\n  if (title.auto) {\n    view.dirty(title);\n    offset += pad;\n    isYAxis ? dx = (title.x || 0) - (title.x = sign * (offset + dl)) : dy = (title.y || 0) - (title.y = sign * (offset + dl));\n    title.mark.bounds.clear().union(b.translate(-dx, -dy));\n    view.dirty(title);\n\n    if (isYAxis) {\n      bounds.add(0, b.y1).add(0, b.y2);\n      offset += b.width();\n    } else {\n      bounds.add(b.x1, 0).add(b.x2, 0);\n      offset += b.height();\n    }\n  } else {\n    bounds.union(b);\n  }\n\n  return offset;\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-view-transforms/src/layout/axis.js"],"names":["Top","Bottom","Left","Right","set","tempBounds","boundStroke","multiLineOffset","isYAxis","mark","orient","items","datum","axisIndices","index","grid","ticks","labels","domain","axisLayout","view","axis","width","height","item","delta","translate","indices","range","offset","position","minExtent","maxExtent","title","titlePadding","bounds","dl","x","y","i","s","clear","union","Math","max","min","y1","axisTitleLayout","add","x1","x2","y2","dirty","pad","sign","b","dx","dy","auto"],"mappings":"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","sourcesContent":["import {Top, Bottom, Left, Right} from '../constants';\nimport {set, tempBounds} from './util';\nimport {boundStroke, multiLineOffset} from 'vega-scenegraph';\n\nexport function isYAxis(mark) {\n  var orient = mark.items[0].datum.orient;\n  return orient === Left || orient === Right;\n}\n\nfunction axisIndices(datum) {\n  var index = +datum.grid;\n  return [\n    datum.ticks  ? index++ : -1, // ticks index\n    datum.labels ? index++ : -1, // labels index\n    index + (+datum.domain)      // title index\n  ];\n}\n\nexport function axisLayout(view, axis, width, height) {\n  var item = axis.items[0],\n      datum = item.datum,\n      orient = datum.orient,\n      delta = datum.translate != null ? datum.translate : 0.5,\n      indices = axisIndices(datum),\n      range = item.range,\n      offset = item.offset,\n      position = item.position,\n      minExtent = item.minExtent,\n      maxExtent = item.maxExtent,\n      title = datum.title && item.items[indices[2]].items[0],\n      titlePadding = item.titlePadding,\n      bounds = item.bounds,\n      dl = title && multiLineOffset(title),\n      x = 0, y = 0, i, s;\n\n  tempBounds.clear().union(bounds);\n  bounds.clear();\n  if ((i=indices[0]) > -1) bounds.union(item.items[i].bounds);\n  if ((i=indices[1]) > -1) bounds.union(item.items[i].bounds);\n\n  // position axis group and title\n  switch (orient) {\n    case Top:\n      x = position || 0;\n      y = -offset;\n      s = Math.max(minExtent, Math.min(maxExtent, -bounds.y1));\n      if (title) s = axisTitleLayout(view, title, s, titlePadding, dl, 0, -1, bounds);\n      bounds.add(0, -s).add(range, 0);\n      break;\n    case Left:\n      x = -offset;\n      y = position || 0;\n      s = Math.max(minExtent, Math.min(maxExtent, -bounds.x1));\n      if (title) s = axisTitleLayout(view, title, s, titlePadding, dl, 1, -1, bounds);\n      bounds.add(-s, 0).add(0, range);\n      break;\n    case Right:\n      x = width + offset;\n      y = position || 0;\n      s = Math.max(minExtent, Math.min(maxExtent, bounds.x2));\n      if (title) s = axisTitleLayout(view, title, s, titlePadding, dl, 1, 1, bounds);\n      bounds.add(0, 0).add(s, range);\n      break;\n    case Bottom:\n      x = position || 0;\n      y = height + offset;\n      s = Math.max(minExtent, Math.min(maxExtent, bounds.y2));\n      if (title) s = axisTitleLayout(view, title, s, titlePadding, 0, 0, 1, bounds);\n      bounds.add(0, 0).add(range, s);\n      break;\n    default:\n      x = item.x;\n      y = item.y;\n  }\n\n  // update bounds\n  boundStroke(bounds.translate(x, y), item);\n\n  if (set(item, 'x', x + delta) | set(item, 'y', y + delta)) {\n    item.bounds = tempBounds;\n    view.dirty(item);\n    item.bounds = bounds;\n    view.dirty(item);\n  }\n\n  return item.mark.bounds.clear().union(bounds);\n}\n\nfunction axisTitleLayout(view, title, offset, pad, dl, isYAxis, sign, bounds) {\n  var b = title.bounds, dx = 0, dy = 0;\n\n  if (title.auto) {\n    view.dirty(title);\n\n    offset += pad;\n\n    isYAxis\n      ? dx = (title.x || 0) - (title.x = sign * (offset + dl))\n      : dy = (title.y || 0) - (title.y = sign * (offset + dl));\n\n    title.mark.bounds.clear().union(b.translate(-dx, -dy));\n    view.dirty(title);\n\n    if (isYAxis) {\n      bounds.add(0, b.y1).add(0, b.y2);\n      offset += b.width();\n    } else {\n      bounds.add(b.x1, 0).add(b.x2, 0);\n      offset += b.height();\n    }\n  } else {\n    bounds.union(b);\n  }\n\n  return offset;\n}\n"]},"metadata":{},"sourceType":"module"}