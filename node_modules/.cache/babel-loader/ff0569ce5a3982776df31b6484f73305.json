{"ast":null,"code":"import { eventExpression } from './expression';\nimport { error } from 'vega-util';\n/**\n * Parse an event stream specification.\n */\n\nexport default function (spec, ctx) {\n  var filter = spec.filter != null ? eventExpression(spec.filter, ctx) : undefined,\n      stream = spec.stream != null ? ctx.get(spec.stream) : undefined,\n      args;\n\n  if (spec.source) {\n    stream = ctx.events(spec.source, spec.type, filter);\n  } else if (spec.merge) {\n    args = spec.merge.map(ctx.get.bind(ctx));\n    stream = args[0].merge.apply(args[0], args.slice(1));\n  }\n\n  if (spec.between) {\n    args = spec.between.map(ctx.get.bind(ctx));\n    stream = stream.between(args[0], args[1]);\n  }\n\n  if (spec.filter) {\n    stream = stream.filter(filter);\n  }\n\n  if (spec.throttle != null) {\n    stream = stream.throttle(+spec.throttle);\n  }\n\n  if (spec.debounce != null) {\n    stream = stream.debounce(+spec.debounce);\n  }\n\n  if (stream == null) {\n    error('Invalid stream definition: ' + JSON.stringify(spec));\n  }\n\n  if (spec.consume) stream.consume(true);\n  ctx.stream(spec, stream);\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-runtime/src/stream.js"],"names":["eventExpression","error","spec","ctx","filter","undefined","stream","get","args","source","events","type","merge","map","bind","apply","slice","between","throttle","debounce","JSON","stringify","consume"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,cAA9B;AACA,SAAQC,KAAR,QAAoB,WAApB;AAEA;;;;AAGA,eAAe,UAASC,IAAT,EAAeC,GAAf,EAAoB;AACjC,MAAIC,MAAM,GAAGF,IAAI,CAACE,MAAL,IAAe,IAAf,GAAsBJ,eAAe,CAACE,IAAI,CAACE,MAAN,EAAcD,GAAd,CAArC,GAA0DE,SAAvE;AAAA,MACIC,MAAM,GAAGJ,IAAI,CAACI,MAAL,IAAe,IAAf,GAAsBH,GAAG,CAACI,GAAJ,CAAQL,IAAI,CAACI,MAAb,CAAtB,GAA6CD,SAD1D;AAAA,MAEIG,IAFJ;;AAIA,MAAIN,IAAI,CAACO,MAAT,EAAiB;AACfH,IAAAA,MAAM,GAAGH,GAAG,CAACO,MAAJ,CAAWR,IAAI,CAACO,MAAhB,EAAwBP,IAAI,CAACS,IAA7B,EAAmCP,MAAnC,CAAT;AACD,GAFD,MAGK,IAAIF,IAAI,CAACU,KAAT,EAAgB;AACnBJ,IAAAA,IAAI,GAAGN,IAAI,CAACU,KAAL,CAAWC,GAAX,CAAeV,GAAG,CAACI,GAAJ,CAAQO,IAAR,CAAaX,GAAb,CAAf,CAAP;AACAG,IAAAA,MAAM,GAAGE,IAAI,CAAC,CAAD,CAAJ,CAAQI,KAAR,CAAcG,KAAd,CAAoBP,IAAI,CAAC,CAAD,CAAxB,EAA6BA,IAAI,CAACQ,KAAL,CAAW,CAAX,CAA7B,CAAT;AACD;;AAED,MAAId,IAAI,CAACe,OAAT,EAAkB;AAChBT,IAAAA,IAAI,GAAGN,IAAI,CAACe,OAAL,CAAaJ,GAAb,CAAiBV,GAAG,CAACI,GAAJ,CAAQO,IAAR,CAAaX,GAAb,CAAjB,CAAP;AACAG,IAAAA,MAAM,GAAGA,MAAM,CAACW,OAAP,CAAeT,IAAI,CAAC,CAAD,CAAnB,EAAwBA,IAAI,CAAC,CAAD,CAA5B,CAAT;AACD;;AAED,MAAIN,IAAI,CAACE,MAAT,EAAiB;AACfE,IAAAA,MAAM,GAAGA,MAAM,CAACF,MAAP,CAAcA,MAAd,CAAT;AACD;;AAED,MAAIF,IAAI,CAACgB,QAAL,IAAiB,IAArB,EAA2B;AACzBZ,IAAAA,MAAM,GAAGA,MAAM,CAACY,QAAP,CAAgB,CAAChB,IAAI,CAACgB,QAAtB,CAAT;AACD;;AAED,MAAIhB,IAAI,CAACiB,QAAL,IAAiB,IAArB,EAA2B;AACzBb,IAAAA,MAAM,GAAGA,MAAM,CAACa,QAAP,CAAgB,CAACjB,IAAI,CAACiB,QAAtB,CAAT;AACD;;AAED,MAAIb,MAAM,IAAI,IAAd,EAAoB;AAClBL,IAAAA,KAAK,CAAC,gCAAgCmB,IAAI,CAACC,SAAL,CAAenB,IAAf,CAAjC,CAAL;AACD;;AAED,MAAIA,IAAI,CAACoB,OAAT,EAAkBhB,MAAM,CAACgB,OAAP,CAAe,IAAf;AAElBnB,EAAAA,GAAG,CAACG,MAAJ,CAAWJ,IAAX,EAAiBI,MAAjB;AACD","sourcesContent":["import {eventExpression} from './expression';\nimport {error} from 'vega-util';\n\n/**\n * Parse an event stream specification.\n */\nexport default function(spec, ctx) {\n  var filter = spec.filter != null ? eventExpression(spec.filter, ctx) : undefined,\n      stream = spec.stream != null ? ctx.get(spec.stream) : undefined,\n      args;\n\n  if (spec.source) {\n    stream = ctx.events(spec.source, spec.type, filter);\n  }\n  else if (spec.merge) {\n    args = spec.merge.map(ctx.get.bind(ctx));\n    stream = args[0].merge.apply(args[0], args.slice(1));\n  }\n\n  if (spec.between) {\n    args = spec.between.map(ctx.get.bind(ctx));\n    stream = stream.between(args[0], args[1]);\n  }\n\n  if (spec.filter) {\n    stream = stream.filter(filter);\n  }\n\n  if (spec.throttle != null) {\n    stream = stream.throttle(+spec.throttle);\n  }\n\n  if (spec.debounce != null) {\n    stream = stream.debounce(+spec.debounce);\n  }\n\n  if (stream == null) {\n    error('Invalid stream definition: ' + JSON.stringify(spec));\n  }\n\n  if (spec.consume) stream.consume(true);\n\n  ctx.stream(spec, stream);\n}\n"]},"metadata":{},"sourceType":"module"}