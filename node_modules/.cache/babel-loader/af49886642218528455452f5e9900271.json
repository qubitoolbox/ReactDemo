{"ast":null,"code":"import { default as accessor, accessorFields } from './accessor';\nimport array from './array';\nimport isFunction from './isFunction';\nimport splitAccessPath from './splitAccessPath';\nimport stringValue from './stringValue';\nexport default function (fields, orders) {\n  var idx = [],\n      cmp = (fields = array(fields)).map(function (f, i) {\n    if (f == null) {\n      return null;\n    } else {\n      idx.push(i);\n      return isFunction(f) ? f : splitAccessPath(f).map(stringValue).join('][');\n    }\n  }),\n      n = idx.length - 1,\n      ord = array(orders),\n      code = 'var u,v;return ',\n      i,\n      j,\n      f,\n      u,\n      v,\n      d,\n      t,\n      lt,\n      gt;\n  if (n < 0) return null;\n\n  for (j = 0; j <= n; ++j) {\n    i = idx[j];\n    f = cmp[i];\n\n    if (isFunction(f)) {\n      d = 'f' + i;\n      u = '(u=this.' + d + '(a))';\n      v = '(v=this.' + d + '(b))';\n      (t = t || {})[d] = f;\n    } else {\n      u = '(u=a[' + f + '])';\n      v = '(v=b[' + f + '])';\n    }\n\n    d = '((v=v instanceof Date?+v:v),(u=u instanceof Date?+u:u))';\n\n    if (ord[i] !== 'descending') {\n      gt = 1;\n      lt = -1;\n    } else {\n      gt = -1;\n      lt = 1;\n    }\n\n    code += '(' + u + '<' + v + '||u==null)&&v!=null?' + lt + ':(u>v||v==null)&&u!=null?' + gt + ':' + d + '!==u&&v===v?' + lt + ':v!==v&&u===u?' + gt + (i < n ? ':' : ':0');\n  }\n\n  f = Function('a', 'b', code + ';');\n  if (t) f = f.bind(t);\n  fields = fields.reduce(function (map, field) {\n    if (isFunction(field)) {\n      (accessorFields(field) || []).forEach(function (_) {\n        map[_] = 1;\n      });\n    } else if (field != null) {\n      map[field + ''] = 1;\n    }\n\n    return map;\n  }, {});\n  return accessor(f, Object.keys(fields));\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-lite/node_modules/vega-util/src/compare.js"],"names":["default","accessor","accessorFields","array","isFunction","splitAccessPath","stringValue","fields","orders","idx","cmp","map","f","i","push","join","n","length","ord","code","j","u","v","d","t","lt","gt","Function","bind","reduce","field","forEach","_","Object","keys"],"mappings":"AAAA,SAAQA,OAAO,IAAIC,QAAnB,EAA6BC,cAA7B,QAAkD,YAAlD;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,eAAe,UAASC,MAAT,EAAiBC,MAAjB,EAAyB;AACtC,MAAIC,GAAG,GAAG,EAAV;AAAA,MACIC,GAAG,GAAG,CAACH,MAAM,GAAGJ,KAAK,CAACI,MAAD,CAAf,EAAyBI,GAAzB,CAA6B,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAChD,QAAID,CAAC,IAAI,IAAT,EAAe;AACb,aAAO,IAAP;AACD,KAFD,MAEO;AACLH,MAAAA,GAAG,CAACK,IAAJ,CAASD,CAAT;AACA,aAAOT,UAAU,CAACQ,CAAD,CAAV,GAAgBA,CAAhB,GACHP,eAAe,CAACO,CAAD,CAAf,CAAmBD,GAAnB,CAAuBL,WAAvB,EAAoCS,IAApC,CAAyC,IAAzC,CADJ;AAED;AACF,GARK,CADV;AAAA,MAUIC,CAAC,GAAGP,GAAG,CAACQ,MAAJ,GAAa,CAVrB;AAAA,MAWIC,GAAG,GAAGf,KAAK,CAACK,MAAD,CAXf;AAAA,MAYIW,IAAI,GAAG,iBAZX;AAAA,MAaIN,CAbJ;AAAA,MAaOO,CAbP;AAAA,MAaUR,CAbV;AAAA,MAaaS,CAbb;AAAA,MAagBC,CAbhB;AAAA,MAamBC,CAbnB;AAAA,MAasBC,CAbtB;AAAA,MAayBC,EAbzB;AAAA,MAa6BC,EAb7B;AAeA,MAAIV,CAAC,GAAG,CAAR,EAAW,OAAO,IAAP;;AAEX,OAAKI,CAAC,GAAC,CAAP,EAAUA,CAAC,IAAEJ,CAAb,EAAgB,EAAEI,CAAlB,EAAqB;AACnBP,IAAAA,CAAC,GAAGJ,GAAG,CAACW,CAAD,CAAP;AACAR,IAAAA,CAAC,GAAGF,GAAG,CAACG,CAAD,CAAP;;AAEA,QAAIT,UAAU,CAACQ,CAAD,CAAd,EAAmB;AACjBW,MAAAA,CAAC,GAAG,MAAMV,CAAV;AACAQ,MAAAA,CAAC,GAAG,aAAaE,CAAb,GAAiB,MAArB;AACAD,MAAAA,CAAC,GAAG,aAAaC,CAAb,GAAiB,MAArB;AACA,OAACC,CAAC,GAAGA,CAAC,IAAI,EAAV,EAAcD,CAAd,IAAmBX,CAAnB;AACD,KALD,MAKO;AACLS,MAAAA,CAAC,GAAG,UAAQT,CAAR,GAAU,IAAd;AACAU,MAAAA,CAAC,GAAG,UAAQV,CAAR,GAAU,IAAd;AACD;;AAEDW,IAAAA,CAAC,GAAG,yDAAJ;;AAEA,QAAIL,GAAG,CAACL,CAAD,CAAH,KAAW,YAAf,EAA6B;AAC3Ba,MAAAA,EAAE,GAAG,CAAL;AACAD,MAAAA,EAAE,GAAG,CAAC,CAAN;AACD,KAHD,MAGO;AACLC,MAAAA,EAAE,GAAG,CAAC,CAAN;AACAD,MAAAA,EAAE,GAAG,CAAL;AACD;;AAEDN,IAAAA,IAAI,IAAI,MAAME,CAAN,GAAQ,GAAR,GAAYC,CAAZ,GAAc,sBAAd,GAAuCG,EAAvC,GACJ,2BADI,GAC0BC,EAD1B,GAEJ,GAFI,GAEAH,CAFA,GAEE,cAFF,GAEmBE,EAFnB,GAGJ,gBAHI,GAGeC,EAHf,IAIHb,CAAC,GAAGG,CAAJ,GAAQ,GAAR,GAAc,IAJX,CAAR;AAKD;;AAEDJ,EAAAA,CAAC,GAAGe,QAAQ,CAAC,GAAD,EAAM,GAAN,EAAWR,IAAI,GAAG,GAAlB,CAAZ;AACA,MAAIK,CAAJ,EAAOZ,CAAC,GAAGA,CAAC,CAACgB,IAAF,CAAOJ,CAAP,CAAJ;AAEPjB,EAAAA,MAAM,GAAGA,MAAM,CAACsB,MAAP,CAAc,UAASlB,GAAT,EAAcmB,KAAd,EAAqB;AAC1C,QAAI1B,UAAU,CAAC0B,KAAD,CAAd,EAAuB;AACrB,OAAC5B,cAAc,CAAC4B,KAAD,CAAd,IAAyB,EAA1B,EAA8BC,OAA9B,CAAsC,UAASC,CAAT,EAAY;AAAErB,QAAAA,GAAG,CAACqB,CAAD,CAAH,GAAS,CAAT;AAAa,OAAjE;AACD,KAFD,MAEO,IAAIF,KAAK,IAAI,IAAb,EAAmB;AACxBnB,MAAAA,GAAG,CAACmB,KAAK,GAAG,EAAT,CAAH,GAAkB,CAAlB;AACD;;AACD,WAAOnB,GAAP;AACD,GAPQ,EAON,EAPM,CAAT;AASA,SAAOV,QAAQ,CAACW,CAAD,EAAIqB,MAAM,CAACC,IAAP,CAAY3B,MAAZ,CAAJ,CAAf;AACD","sourcesContent":["import {default as accessor, accessorFields} from './accessor';\nimport array from './array';\nimport isFunction from './isFunction';\nimport splitAccessPath from './splitAccessPath';\nimport stringValue from './stringValue';\n\nexport default function(fields, orders) {\n  var idx = [],\n      cmp = (fields = array(fields)).map(function(f, i) {\n        if (f == null) {\n          return null;\n        } else {\n          idx.push(i);\n          return isFunction(f) ? f\n            : splitAccessPath(f).map(stringValue).join('][');\n        }\n      }),\n      n = idx.length - 1,\n      ord = array(orders),\n      code = 'var u,v;return ',\n      i, j, f, u, v, d, t, lt, gt;\n\n  if (n < 0) return null;\n\n  for (j=0; j<=n; ++j) {\n    i = idx[j];\n    f = cmp[i];\n\n    if (isFunction(f)) {\n      d = 'f' + i;\n      u = '(u=this.' + d + '(a))';\n      v = '(v=this.' + d + '(b))';\n      (t = t || {})[d] = f;\n    } else {\n      u = '(u=a['+f+'])';\n      v = '(v=b['+f+'])';\n    }\n\n    d = '((v=v instanceof Date?+v:v),(u=u instanceof Date?+u:u))';\n\n    if (ord[i] !== 'descending') {\n      gt = 1;\n      lt = -1;\n    } else {\n      gt = -1;\n      lt = 1;\n    }\n\n    code += '(' + u+'<'+v+'||u==null)&&v!=null?' + lt\n      + ':(u>v||v==null)&&u!=null?' + gt\n      + ':'+d+'!==u&&v===v?' + lt\n      + ':v!==v&&u===u?' + gt\n      + (i < n ? ':' : ':0');\n  }\n\n  f = Function('a', 'b', code + ';');\n  if (t) f = f.bind(t);\n\n  fields = fields.reduce(function(map, field) {\n    if (isFunction(field)) {\n      (accessorFields(field) || []).forEach(function(_) { map[_] = 1; });\n    } else if (field != null) {\n      map[field + ''] = 1;\n    }\n    return map;\n  }, {});\n\n  return accessor(f, Object.keys(fields));\n}\n"]},"metadata":{},"sourceType":"module"}