{"ast":null,"code":"import { Transform } from 'vega-dataflow';\nimport { inherits } from 'vega-util';\n/**\n * Queue modified scenegraph items for rendering.\n * @constructor\n */\n\nexport default function Render(params) {\n  Transform.call(this, null, params);\n}\nvar prototype = inherits(Render, Transform);\n\nprototype.transform = function (_, pulse) {\n  var view = pulse.dataflow;\n  pulse.visit(pulse.ALL, function (item) {\n    view.dirty(item);\n  }); // set z-index dirty flag as needed\n\n  if (pulse.fields && pulse.fields['zindex']) {\n    var item = pulse.source && pulse.source[0];\n    if (item) item.mark.zdirty = true;\n  }\n};","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-view-transforms/src/Render.js"],"names":["Transform","inherits","Render","params","call","prototype","transform","_","pulse","view","dataflow","visit","ALL","item","dirty","fields","source","mark","zdirty"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,eAAxB;AACA,SAAQC,QAAR,QAAuB,WAAvB;AAEA;;;;;AAIA,eAAe,SAASC,MAAT,CAAgBC,MAAhB,EAAwB;AACrCH,EAAAA,SAAS,CAACI,IAAV,CAAe,IAAf,EAAqB,IAArB,EAA2BD,MAA3B;AACD;AAED,IAAIE,SAAS,GAAGJ,QAAQ,CAACC,MAAD,EAASF,SAAT,CAAxB;;AAEAK,SAAS,CAACC,SAAV,GAAsB,UAASC,CAAT,EAAYC,KAAZ,EAAmB;AACvC,MAAIC,IAAI,GAAGD,KAAK,CAACE,QAAjB;AAEAF,EAAAA,KAAK,CAACG,KAAN,CAAYH,KAAK,CAACI,GAAlB,EAAuB,UAASC,IAAT,EAAe;AAAEJ,IAAAA,IAAI,CAACK,KAAL,CAAWD,IAAX;AAAmB,GAA3D,EAHuC,CAKvC;;AACA,MAAIL,KAAK,CAACO,MAAN,IAAgBP,KAAK,CAACO,MAAN,CAAa,QAAb,CAApB,EAA4C;AAC1C,QAAIF,IAAI,GAAGL,KAAK,CAACQ,MAAN,IAAgBR,KAAK,CAACQ,MAAN,CAAa,CAAb,CAA3B;AACA,QAAIH,IAAJ,EAAUA,IAAI,CAACI,IAAL,CAAUC,MAAV,GAAmB,IAAnB;AACX;AACF,CAVD","sourcesContent":["import {Transform} from 'vega-dataflow';\nimport {inherits} from 'vega-util';\n\n/**\n * Queue modified scenegraph items for rendering.\n * @constructor\n */\nexport default function Render(params) {\n  Transform.call(this, null, params);\n}\n\nvar prototype = inherits(Render, Transform);\n\nprototype.transform = function(_, pulse) {\n  var view = pulse.dataflow;\n\n  pulse.visit(pulse.ALL, function(item) { view.dirty(item); });\n\n  // set z-index dirty flag as needed\n  if (pulse.fields && pulse.fields['zindex']) {\n    var item = pulse.source && pulse.source[0];\n    if (item) item.mark.zdirty = true;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}