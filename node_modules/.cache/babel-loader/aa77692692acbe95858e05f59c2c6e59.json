{"ast":null,"code":"import { COMMON_AXIS_PROPERTIES_INDEX } from '../../axis';\nimport { duplicate, keys } from '../../util';\nimport { Split } from '../split';\n\nfunction isFalseOrNull(v) {\n  return v === false || v === null;\n}\n\nconst AXIS_COMPONENT_PROPERTIES_INDEX = Object.assign(Object.assign({\n  gridScale: 1,\n  scale: 1\n}, COMMON_AXIS_PROPERTIES_INDEX), {\n  labelExpr: 1,\n  encode: 1\n});\nexport const AXIS_COMPONENT_PROPERTIES = keys(AXIS_COMPONENT_PROPERTIES_INDEX);\nexport class AxisComponent extends Split {\n  constructor(explicit = {}, implicit = {}, mainExtracted = false) {\n    super();\n    this.explicit = explicit;\n    this.implicit = implicit;\n    this.mainExtracted = mainExtracted;\n  }\n\n  clone() {\n    return new AxisComponent(duplicate(this.explicit), duplicate(this.implicit), this.mainExtracted);\n  }\n\n  hasAxisPart(part) {\n    // FIXME(https://github.com/vega/vega-lite/issues/2552) this method can be wrong if users use a Vega theme.\n    if (part === 'axis') {\n      // always has the axis container part\n      return true;\n    }\n\n    if (part === 'grid' || part === 'title') {\n      return !!this.get(part);\n    } // Other parts are enabled by default, so they should not be false or null.\n\n\n    return !isFalseOrNull(this.get(part));\n  }\n\n}","map":{"version":3,"sources":["../../../../src/compile/axis/component.ts"],"names":[],"mappings":"AACA,SAIE,4BAJF,QAOO,YAPP;AASA,SAAQ,SAAR,EAAyB,IAAzB,QAAoC,YAApC;AACA,SAAQ,KAAR,QAAoB,UAApB;;AAEA,SAAS,aAAT,CAAuB,CAAvB,EAA6B;AAC3B,SAAO,CAAC,KAAK,KAAN,IAAe,CAAC,KAAK,IAA5B;AACD;;AASD,MAAM,+BAA+B,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA;AACnC,EAAA,SAAS,EAAE,CADwB;AAEnC,EAAA,KAAK,EAAE;AAF4B,CAAA,EAGhC,4BAHgC,CAAA,EAGJ;AAC/B,EAAA,SAAS,EAAE,CADoB;AAE/B,EAAA,MAAM,EAAE;AAFuB,CAHI,CAArC;AAQA,OAAO,MAAM,yBAAyB,GAAG,IAAI,CAAC,+BAAD,CAAtC;AAEP,OAAM,MAAO,aAAP,SAA6B,KAA7B,CAAsD;AAC1D,EAAA,WAAA,CACkB,QAAA,GAAwC,EAD1D,EAEkB,QAAA,GAAwC,EAF1D,EAGS,aAAA,GAAgB,KAHzB,EAG8B;AAE5B;AAJgB,SAAA,QAAA,GAAA,QAAA;AACA,SAAA,QAAA,GAAA,QAAA;AACT,SAAA,aAAA,GAAA,aAAA;AAGR;;AAEM,EAAA,KAAK,GAAA;AACV,WAAO,IAAI,aAAJ,CAAkB,SAAS,CAAC,KAAK,QAAN,CAA3B,EAA4C,SAAS,CAAC,KAAK,QAAN,CAArD,EAAsE,KAAK,aAA3E,CAAP;AACD;;AAEM,EAAA,WAAW,CAAC,IAAD,EAAe;AAC/B;AAEA,QAAI,IAAI,KAAK,MAAb,EAAqB;AACnB;AACA,aAAO,IAAP;AACD;;AAED,QAAI,IAAI,KAAK,MAAT,IAAmB,IAAI,KAAK,OAAhC,EAAyC;AACvC,aAAO,CAAC,CAAC,KAAK,GAAL,CAAS,IAAT,CAAT;AACD,KAV8B,CAW/B;;;AACA,WAAO,CAAC,aAAa,CAAC,KAAK,GAAL,CAAS,IAAT,CAAD,CAArB;AACD;;AA1ByD","sourcesContent":["import {Axis as VgAxis, Text} from 'vega';\nimport {\n  Axis,\n  AxisPart,\n  BaseAxisNoValueRefs,\n  COMMON_AXIS_PROPERTIES_INDEX,\n  ConditionalAxisProp,\n  ConditionalAxisProperty\n} from '../../axis';\nimport {FieldDefBase} from '../../channeldef';\nimport {duplicate, Flag, keys} from '../../util';\nimport {Split} from '../split';\n\nfunction isFalseOrNull(v: any) {\n  return v === false || v === null;\n}\n\nexport type AxisComponentProps = Omit<VgAxis, 'title' | ConditionalAxisProp> & {\n  title: Text | FieldDefBase<string>[];\n  labelExpr: string;\n} & {\n    [k in ConditionalAxisProp]?: BaseAxisNoValueRefs[k] | ConditionalAxisProperty<BaseAxisNoValueRefs[k]>;\n  };\n\nconst AXIS_COMPONENT_PROPERTIES_INDEX: Flag<keyof AxisComponentProps> = {\n  gridScale: 1,\n  scale: 1,\n  ...COMMON_AXIS_PROPERTIES_INDEX,\n  labelExpr: 1,\n  encode: 1\n};\n\nexport const AXIS_COMPONENT_PROPERTIES = keys(AXIS_COMPONENT_PROPERTIES_INDEX);\n\nexport class AxisComponent extends Split<AxisComponentProps> {\n  constructor(\n    public readonly explicit: Partial<AxisComponentProps> = {},\n    public readonly implicit: Partial<AxisComponentProps> = {},\n    public mainExtracted = false\n  ) {\n    super();\n  }\n\n  public clone() {\n    return new AxisComponent(duplicate(this.explicit), duplicate(this.implicit), this.mainExtracted);\n  }\n\n  public hasAxisPart(part: AxisPart) {\n    // FIXME(https://github.com/vega/vega-lite/issues/2552) this method can be wrong if users use a Vega theme.\n\n    if (part === 'axis') {\n      // always has the axis container part\n      return true;\n    }\n\n    if (part === 'grid' || part === 'title') {\n      return !!this.get(part);\n    }\n    // Other parts are enabled by default, so they should not be false or null.\n    return !isFalseOrNull(this.get(part));\n  }\n}\n\nexport interface AxisComponentIndex {\n  x?: AxisComponent[];\n  y?: AxisComponent[];\n}\n\nexport interface AxisIndex {\n  x?: Axis;\n  y?: Axis;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}