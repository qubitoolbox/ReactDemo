{"ast":null,"code":"import { getScale } from './scale';\nimport { geoArea as area, geoBounds as bounds, geoCentroid as centroid } from 'd3-geo';\n\nfunction geoMethod(methodName, globalMethod) {\n  return function (projection, geojson, group) {\n    if (projection) {\n      // projection defined, use it\n      const p = getScale(projection, (group || this).context);\n      return p && p.path[methodName](geojson);\n    } else {\n      // projection undefined, use global method\n      return globalMethod(geojson);\n    }\n  };\n}\n\nexport const geoArea = geoMethod('area', area);\nexport const geoBounds = geoMethod('bounds', bounds);\nexport const geoCentroid = geoMethod('centroid', centroid);","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-functions/src/geo.js"],"names":["getScale","geoArea","area","geoBounds","bounds","geoCentroid","centroid","geoMethod","methodName","globalMethod","projection","geojson","group","p","context","path"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,SAAvB;AACA,SACEC,OAAO,IAAIC,IADb,EAEEC,SAAS,IAAIC,MAFf,EAGEC,WAAW,IAAIC,QAHjB,QAIO,QAJP;;AAMA,SAASC,SAAT,CAAmBC,UAAnB,EAA+BC,YAA/B,EAA6C;AAC3C,SAAO,UAASC,UAAT,EAAqBC,OAArB,EAA8BC,KAA9B,EAAqC;AAC1C,QAAIF,UAAJ,EAAgB;AACd;AACA,YAAMG,CAAC,GAAGb,QAAQ,CAACU,UAAD,EAAa,CAACE,KAAK,IAAI,IAAV,EAAgBE,OAA7B,CAAlB;AACA,aAAOD,CAAC,IAAIA,CAAC,CAACE,IAAF,CAAOP,UAAP,EAAmBG,OAAnB,CAAZ;AACD,KAJD,MAIO;AACL;AACA,aAAOF,YAAY,CAACE,OAAD,CAAnB;AACD;AACF,GATD;AAUD;;AAED,OAAO,MAAMV,OAAO,GAAGM,SAAS,CAAC,MAAD,EAASL,IAAT,CAAzB;AACP,OAAO,MAAMC,SAAS,GAAGI,SAAS,CAAC,QAAD,EAAWH,MAAX,CAA3B;AACP,OAAO,MAAMC,WAAW,GAAGE,SAAS,CAAC,UAAD,EAAaD,QAAb,CAA7B","sourcesContent":["import {getScale} from './scale';\nimport {\n  geoArea as area,\n  geoBounds as bounds,\n  geoCentroid as centroid\n} from 'd3-geo';\n\nfunction geoMethod(methodName, globalMethod) {\n  return function(projection, geojson, group) {\n    if (projection) {\n      // projection defined, use it\n      const p = getScale(projection, (group || this).context);\n      return p && p.path[methodName](geojson);\n    } else {\n      // projection undefined, use global method\n      return globalMethod(geojson);\n    }\n  };\n}\n\nexport const geoArea = geoMethod('area', area);\nexport const geoBounds = geoMethod('bounds', bounds);\nexport const geoCentroid = geoMethod('centroid', centroid);\n"]},"metadata":{},"sourceType":"module"}