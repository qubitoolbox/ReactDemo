{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst preact_1 = require(\"preact\");\n\nconst glamor_1 = require(\"glamor\");\n/**\n * A surface is container for visualizations and other rendered thigns.\n * It consists of a containing DOM Element, a label and an empty drawArea.\n */\n\n\nclass SurfaceComponent extends preact_1.Component {\n  componentDidMount() {\n    const {\n      name,\n      tab\n    } = this.props;\n    this.props.registerSurface(name, tab, this);\n  }\n\n  componentDidUpdate() {\n    // Prevent re-rendering of this component as it\n    // is primarily controlled outside of this class\n    return false;\n  }\n\n  render() {\n    const {\n      name,\n      visible,\n      styles\n    } = this.props;\n    const finalStyles = Object.assign({}, SurfaceComponent.defaultStyles, styles);\n    const {\n      width,\n      height\n    } = finalStyles;\n    let {\n      maxHeight,\n      maxWidth\n    } = finalStyles;\n    maxHeight = height === SurfaceComponent.defaultStyles.height ? maxHeight : height;\n    maxWidth = width === SurfaceComponent.defaultStyles.width ? maxWidth : width;\n    const surfaceStyle = glamor_1.css({\n      display: visible ? 'block' : 'none',\n      backgroundColor: 'white',\n      marginTop: '10px',\n      marginBottom: '10px',\n      boxShadow: '0 0 6px -3px #777',\n      padding: '10px !important',\n      height,\n      width,\n      maxHeight,\n      maxWidth,\n      overflow: 'auto'\n    });\n    const labelStyle = glamor_1.css({\n      backgroundColor: 'white',\n      boxSizing: 'border-box',\n      borderBottom: '1px solid #357EDD',\n      lineHeight: '2em',\n      marginBottom: '20px',\n      fontWeight: '600',\n      textAlign: 'center'\n    });\n    const drawAreaStyle = glamor_1.css({\n      boxSizing: 'border-box'\n    });\n    return preact_1.h(\"div\", {\n      className: `${surfaceStyle} tf-surface`,\n      ref: r => this.container = r,\n      \"data-visible\": visible\n    }, preact_1.h(\"div\", {\n      className: `${labelStyle} tf-label`,\n      ref: r => this.label = r\n    }, name), preact_1.h(\"div\", {\n      className: `${drawAreaStyle} tf-draw-area`,\n      ref: r => this.drawArea = r\n    }));\n  }\n\n}\n\nSurfaceComponent.defaultStyles = {\n  maxWidth: '550px',\n  maxHeight: '580px',\n  height: 'auto',\n  width: 'auto'\n};\nexports.SurfaceComponent = SurfaceComponent;","map":{"version":3,"sources":["../../src/components/surface.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport { h, Component } from 'preact';\nimport { css } from 'glamor';\nimport { SurfaceInfoStrict, StyleOptions } from '../types';\n\n// Internal Props\ninterface SurfaceProps extends SurfaceInfoStrict {\n  visible: boolean;\n  registerSurface: (name: string, tab: string, surface: SurfaceComponent)\n    => void;\n}\n\n/**\n * A surface is container for visualizations and other rendered thigns.\n * It consists of a containing DOM Element, a label and an empty drawArea.\n */\nexport class SurfaceComponent extends Component<SurfaceProps> {\n\n  static defaultStyles: Partial<StyleOptions> = {\n    maxWidth: '550px',\n    maxHeight: '580px',\n    height: 'auto',\n    width: 'auto',\n  };\n\n  container: HTMLElement;\n  label: HTMLElement;\n  drawArea: HTMLElement;\n\n  componentDidMount() {\n    const { name, tab } = this.props;\n    this.props.registerSurface(name, tab, this);\n  }\n\n  componentDidUpdate() {\n    // Prevent re-rendering of this component as it\n    // is primarily controlled outside of this class\n    return false;\n  }\n\n  render() {\n    const { name, visible, styles } = this.props;\n    const finalStyles = {\n      ...SurfaceComponent.defaultStyles,\n      ...styles,\n    };\n\n    const { width, height, } = finalStyles;\n    let { maxHeight, maxWidth, } = finalStyles;\n    maxHeight = height === SurfaceComponent.defaultStyles.height ?\n      maxHeight : height;\n    maxWidth = width === SurfaceComponent.defaultStyles.width ?\n      maxWidth : width;\n\n    const surfaceStyle = css({\n      display: visible ? 'block' : 'none',\n      backgroundColor: 'white',\n      marginTop: '10px',\n      marginBottom: '10px',\n      boxShadow: '0 0 6px -3px #777',\n      padding: '10px !important',\n      height,\n      width,\n      maxHeight,\n      maxWidth,\n      overflow: 'auto',\n    });\n\n    const labelStyle = css({\n      backgroundColor: 'white',\n      boxSizing: 'border-box',\n      borderBottom: '1px solid #357EDD',\n      lineHeight: '2em',\n      marginBottom: '20px',\n      fontWeight: '600',\n      textAlign: 'center',\n    });\n\n    const drawAreaStyle = css({\n      boxSizing: 'border-box',\n    });\n\n    return (\n      <div\n        className={`${surfaceStyle} tf-surface`}\n        ref={(r) => this.container = r}\n        data-visible={visible}\n      >\n        <div className={`${labelStyle} tf-label`} ref={(r) => this.label = r}>\n          {name}\n        </div>\n\n        <div\n          className={`${drawAreaStyle} tf-draw-area`}\n          ref={(r) => this.drawArea = r}\n        />\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}