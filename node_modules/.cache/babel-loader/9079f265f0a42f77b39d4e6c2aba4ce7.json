{"ast":null,"code":"import adjustSpatial from './encode/adjust-spatial';\nimport entry from './encode/entry';\nimport rule from './encode/rule';\nimport set from './encode/set';\nimport { isArray } from 'vega-util';\nexport default function parseEncode(encode, marktype, params, scope) {\n  var fields = {},\n      code = 'var o=item,datum=o.datum,m=0,$;',\n      channel,\n      enc,\n      value;\n\n  for (channel in encode) {\n    enc = encode[channel];\n\n    if (isArray(enc)) {\n      // rule\n      code += rule(channel, enc, scope, params, fields);\n    } else {\n      value = entry(channel, enc, scope, params, fields);\n      code += set('o', channel, value);\n    }\n  }\n\n  code += adjustSpatial(encode, marktype);\n  code += 'return m;';\n  return {\n    $expr: code,\n    $fields: Object.keys(fields),\n    $output: Object.keys(encode)\n  };\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-parser/src/parsers/encode.js"],"names":["adjustSpatial","entry","rule","set","isArray","parseEncode","encode","marktype","params","scope","fields","code","channel","enc","value","$expr","$fields","Object","keys","$output"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,yBAA1B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AAEA,eAAe,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,QAA7B,EAAuCC,MAAvC,EAA+CC,KAA/C,EAAsD;AACnE,MAAIC,MAAM,GAAG,EAAb;AAAA,MACIC,IAAI,GAAG,iCADX;AAAA,MAEIC,OAFJ;AAAA,MAEaC,GAFb;AAAA,MAEkBC,KAFlB;;AAIA,OAAKF,OAAL,IAAgBN,MAAhB,EAAwB;AACtBO,IAAAA,GAAG,GAAGP,MAAM,CAACM,OAAD,CAAZ;;AACA,QAAIR,OAAO,CAACS,GAAD,CAAX,EAAkB;AAAE;AAClBF,MAAAA,IAAI,IAAIT,IAAI,CAACU,OAAD,EAAUC,GAAV,EAAeJ,KAAf,EAAsBD,MAAtB,EAA8BE,MAA9B,CAAZ;AACD,KAFD,MAEO;AACLI,MAAAA,KAAK,GAAGb,KAAK,CAACW,OAAD,EAAUC,GAAV,EAAeJ,KAAf,EAAsBD,MAAtB,EAA8BE,MAA9B,CAAb;AACAC,MAAAA,IAAI,IAAIR,GAAG,CAAC,GAAD,EAAMS,OAAN,EAAeE,KAAf,CAAX;AACD;AACF;;AAEDH,EAAAA,IAAI,IAAIX,aAAa,CAACM,MAAD,EAASC,QAAT,CAArB;AACAI,EAAAA,IAAI,IAAI,WAAR;AAEA,SAAO;AACLI,IAAAA,KAAK,EAAIJ,IADJ;AAELK,IAAAA,OAAO,EAAEC,MAAM,CAACC,IAAP,CAAYR,MAAZ,CAFJ;AAGLS,IAAAA,OAAO,EAAEF,MAAM,CAACC,IAAP,CAAYZ,MAAZ;AAHJ,GAAP;AAKD","sourcesContent":["import adjustSpatial from './encode/adjust-spatial';\nimport entry from './encode/entry';\nimport rule from './encode/rule';\nimport set from './encode/set';\nimport {isArray} from 'vega-util';\n\nexport default function parseEncode(encode, marktype, params, scope) {\n  var fields = {},\n      code = 'var o=item,datum=o.datum,m=0,$;',\n      channel, enc, value;\n\n  for (channel in encode) {\n    enc = encode[channel];\n    if (isArray(enc)) { // rule\n      code += rule(channel, enc, scope, params, fields);\n    } else {\n      value = entry(channel, enc, scope, params, fields);\n      code += set('o', channel, value);\n    }\n  }\n\n  code += adjustSpatial(encode, marktype);\n  code += 'return m;';\n\n  return {\n    $expr:   code,\n    $fields: Object.keys(fields),\n    $output: Object.keys(encode)\n  };\n}\n"]},"metadata":{},"sourceType":"module"}