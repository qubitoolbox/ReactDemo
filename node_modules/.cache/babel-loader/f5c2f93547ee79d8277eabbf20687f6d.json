{"ast":null,"code":"/**\n * Parse an event selector string.\n * Returns an array of event stream definitions.\n */\nexport default function (selector, source, marks) {\n  DEFAULT_SOURCE = source || VIEW;\n  MARKS = marks || DEFAULT_MARKS;\n  return parseMerge(selector.trim()).map(parseSelector);\n}\nvar VIEW = 'view',\n    LBRACK = '[',\n    RBRACK = ']',\n    LBRACE = '{',\n    RBRACE = '}',\n    COLON = ':',\n    COMMA = ',',\n    NAME = '@',\n    GT = '>',\n    ILLEGAL = /[[\\]{}]/,\n    DEFAULT_SOURCE,\n    MARKS,\n    DEFAULT_MARKS = {\n  '*': 1,\n  arc: 1,\n  area: 1,\n  group: 1,\n  image: 1,\n  line: 1,\n  path: 1,\n  rect: 1,\n  rule: 1,\n  shape: 1,\n  symbol: 1,\n  text: 1,\n  trail: 1\n};\n\nfunction isMarkType(type) {\n  return MARKS[type];\n}\n\nfunction find(s, i, endChar, pushChar, popChar) {\n  var count = 0,\n      n = s.length,\n      c;\n\n  for (; i < n; ++i) {\n    c = s[i];\n    if (!count && c === endChar) return i;else if (popChar && popChar.indexOf(c) >= 0) --count;else if (pushChar && pushChar.indexOf(c) >= 0) ++count;\n  }\n\n  return i;\n}\n\nfunction parseMerge(s) {\n  var output = [],\n      start = 0,\n      n = s.length,\n      i = 0;\n\n  while (i < n) {\n    i = find(s, i, COMMA, LBRACK + LBRACE, RBRACK + RBRACE);\n    output.push(s.substring(start, i).trim());\n    start = ++i;\n  }\n\n  if (output.length === 0) {\n    throw 'Empty event selector: ' + s;\n  }\n\n  return output;\n}\n\nfunction parseSelector(s) {\n  return s[0] === '[' ? parseBetween(s) : parseStream(s);\n}\n\nfunction parseBetween(s) {\n  var n = s.length,\n      i = 1,\n      b,\n      stream;\n  i = find(s, i, RBRACK, LBRACK, RBRACK);\n\n  if (i === n) {\n    throw 'Empty between selector: ' + s;\n  }\n\n  b = parseMerge(s.substring(1, i));\n\n  if (b.length !== 2) {\n    throw 'Between selector must have two elements: ' + s;\n  }\n\n  s = s.slice(i + 1).trim();\n\n  if (s[0] !== GT) {\n    throw 'Expected \\'>\\' after between selector: ' + s;\n  }\n\n  b = b.map(parseSelector);\n  stream = parseSelector(s.slice(1).trim());\n\n  if (stream.between) {\n    return {\n      between: b,\n      stream: stream\n    };\n  } else {\n    stream.between = b;\n  }\n\n  return stream;\n}\n\nfunction parseStream(s) {\n  var stream = {\n    source: DEFAULT_SOURCE\n  },\n      source = [],\n      throttle = [0, 0],\n      markname = 0,\n      start = 0,\n      n = s.length,\n      i = 0,\n      j,\n      filter; // extract throttle from end\n\n  if (s[n - 1] === RBRACE) {\n    i = s.lastIndexOf(LBRACE);\n\n    if (i >= 0) {\n      try {\n        throttle = parseThrottle(s.substring(i + 1, n - 1));\n      } catch (e) {\n        throw 'Invalid throttle specification: ' + s;\n      }\n\n      s = s.slice(0, i).trim();\n      n = s.length;\n    } else throw 'Unmatched right brace: ' + s;\n\n    i = 0;\n  }\n\n  if (!n) throw s; // set name flag based on first char\n\n  if (s[0] === NAME) markname = ++i; // extract first part of multi-part stream selector\n\n  j = find(s, i, COLON);\n\n  if (j < n) {\n    source.push(s.substring(start, j).trim());\n    start = i = ++j;\n  } // extract remaining part of stream selector\n\n\n  i = find(s, i, LBRACK);\n\n  if (i === n) {\n    source.push(s.substring(start, n).trim());\n  } else {\n    source.push(s.substring(start, i).trim());\n    filter = [];\n    start = ++i;\n    if (start === n) throw 'Unmatched left bracket: ' + s;\n  } // extract filters\n\n\n  while (i < n) {\n    i = find(s, i, RBRACK);\n    if (i === n) throw 'Unmatched left bracket: ' + s;\n    filter.push(s.substring(start, i).trim());\n    if (i < n - 1 && s[++i] !== LBRACK) throw 'Expected left bracket: ' + s;\n    start = ++i;\n  } // marshall event stream specification\n\n\n  if (!(n = source.length) || ILLEGAL.test(source[n - 1])) {\n    throw 'Invalid event selector: ' + s;\n  }\n\n  if (n > 1) {\n    stream.type = source[1];\n\n    if (markname) {\n      stream.markname = source[0].slice(1);\n    } else if (isMarkType(source[0])) {\n      stream.marktype = source[0];\n    } else {\n      stream.source = source[0];\n    }\n  } else {\n    stream.type = source[0];\n  }\n\n  if (stream.type.slice(-1) === '!') {\n    stream.consume = true;\n    stream.type = stream.type.slice(0, -1);\n  }\n\n  if (filter != null) stream.filter = filter;\n  if (throttle[0]) stream.throttle = throttle[0];\n  if (throttle[1]) stream.debounce = throttle[1];\n  return stream;\n}\n\nfunction parseThrottle(s) {\n  var a = s.split(COMMA);\n  if (!s.length || a.length > 2) throw s;\n  return a.map(function (_) {\n    var x = +_;\n    if (x !== x) throw s;\n    return x;\n  });\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-event-selector/src/event-selector.js"],"names":["selector","source","marks","DEFAULT_SOURCE","VIEW","MARKS","DEFAULT_MARKS","parseMerge","trim","map","parseSelector","LBRACK","RBRACK","LBRACE","RBRACE","COLON","COMMA","NAME","GT","ILLEGAL","arc","area","group","image","line","path","rect","rule","shape","symbol","text","trail","isMarkType","type","find","s","i","endChar","pushChar","popChar","count","n","length","c","indexOf","output","start","push","substring","parseBetween","parseStream","b","stream","slice","between","throttle","markname","j","filter","lastIndexOf","parseThrottle","e","test","marktype","consume","debounce","a","split","_","x"],"mappings":"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","sourcesContent":["/**\n * Parse an event selector string.\n * Returns an array of event stream definitions.\n */\nexport default function(selector, source, marks) {\n  DEFAULT_SOURCE = source || VIEW;\n  MARKS = marks || DEFAULT_MARKS;\n  return parseMerge(selector.trim()).map(parseSelector);\n}\n\nvar VIEW    = 'view',\n    LBRACK  = '[',\n    RBRACK  = ']',\n    LBRACE  = '{',\n    RBRACE  = '}',\n    COLON   = ':',\n    COMMA   = ',',\n    NAME    = '@',\n    GT      = '>',\n    ILLEGAL = /[[\\]{}]/,\n    DEFAULT_SOURCE,\n    MARKS,\n    DEFAULT_MARKS = {\n      '*': 1,\n      arc: 1,\n      area: 1,\n      group: 1,\n      image: 1,\n      line: 1,\n      path: 1,\n      rect: 1,\n      rule: 1,\n      shape: 1,\n      symbol: 1,\n      text: 1,\n      trail: 1\n    };\n\nfunction isMarkType(type) {\n  return MARKS[type];\n}\n\nfunction find(s, i, endChar, pushChar, popChar) {\n  var count = 0,\n      n = s.length,\n      c;\n  for (; i<n; ++i) {\n    c = s[i];\n    if (!count && c === endChar) return i;\n    else if (popChar && popChar.indexOf(c) >= 0) --count;\n    else if (pushChar && pushChar.indexOf(c) >= 0) ++count;\n  }\n  return i;\n}\n\nfunction parseMerge(s) {\n  var output = [],\n      start = 0,\n      n = s.length,\n      i = 0;\n\n  while (i < n) {\n    i = find(s, i, COMMA, LBRACK + LBRACE, RBRACK + RBRACE);\n    output.push(s.substring(start, i).trim());\n    start = ++i;\n  }\n\n  if (output.length === 0) {\n    throw 'Empty event selector: ' + s;\n  }\n  return output;\n}\n\nfunction parseSelector(s) {\n  return s[0] === '['\n    ? parseBetween(s)\n    : parseStream(s);\n}\n\nfunction parseBetween(s) {\n  var n = s.length,\n      i = 1,\n      b, stream;\n\n  i = find(s, i, RBRACK, LBRACK, RBRACK);\n  if (i === n) {\n    throw 'Empty between selector: ' + s;\n  }\n\n  b = parseMerge(s.substring(1, i));\n  if (b.length !== 2) {\n    throw 'Between selector must have two elements: ' + s;\n  }\n\n  s = s.slice(i + 1).trim();\n  if (s[0] !== GT) {\n    throw 'Expected \\'>\\' after between selector: ' + s;\n  }\n\n  b = b.map(parseSelector);\n\n  stream = parseSelector(s.slice(1).trim());\n  if (stream.between) {\n    return {\n      between: b,\n      stream: stream\n    };\n  } else {\n    stream.between = b;\n  }\n\n  return stream;\n}\n\nfunction parseStream(s) {\n  var stream = {source: DEFAULT_SOURCE},\n      source = [],\n      throttle = [0, 0],\n      markname = 0,\n      start = 0,\n      n = s.length,\n      i = 0, j,\n      filter;\n\n  // extract throttle from end\n  if (s[n-1] === RBRACE) {\n    i = s.lastIndexOf(LBRACE);\n    if (i >= 0) {\n      try {\n        throttle = parseThrottle(s.substring(i+1, n-1));\n      } catch (e) {\n        throw 'Invalid throttle specification: ' + s;\n      }\n      s = s.slice(0, i).trim();\n      n = s.length;\n    } else throw 'Unmatched right brace: ' + s;\n    i = 0;\n  }\n\n  if (!n) throw s;\n\n  // set name flag based on first char\n  if (s[0] === NAME) markname = ++i;\n\n  // extract first part of multi-part stream selector\n  j = find(s, i, COLON);\n  if (j < n) {\n    source.push(s.substring(start, j).trim());\n    start = i = ++j;\n  }\n\n  // extract remaining part of stream selector\n  i = find(s, i, LBRACK);\n  if (i === n) {\n    source.push(s.substring(start, n).trim());\n  } else {\n    source.push(s.substring(start, i).trim());\n    filter = [];\n    start = ++i;\n    if (start === n) throw 'Unmatched left bracket: ' + s;\n  }\n\n  // extract filters\n  while (i < n) {\n    i = find(s, i, RBRACK);\n    if (i === n) throw 'Unmatched left bracket: ' + s;\n    filter.push(s.substring(start, i).trim());\n    if (i < n-1 && s[++i] !== LBRACK) throw 'Expected left bracket: ' + s;\n    start = ++i;\n  }\n\n  // marshall event stream specification\n  if (!(n = source.length) || ILLEGAL.test(source[n-1])) {\n    throw 'Invalid event selector: ' + s;\n  }\n\n  if (n > 1) {\n    stream.type = source[1];\n    if (markname) {\n      stream.markname = source[0].slice(1);\n    } else if (isMarkType(source[0])) {\n      stream.marktype = source[0];\n    } else {\n      stream.source = source[0];\n    }\n  } else {\n    stream.type = source[0];\n  }\n  if (stream.type.slice(-1) === '!') {\n    stream.consume = true;\n    stream.type = stream.type.slice(0, -1)\n  }\n  if (filter != null) stream.filter = filter;\n  if (throttle[0]) stream.throttle = throttle[0];\n  if (throttle[1]) stream.debounce = throttle[1];\n\n  return stream;\n}\n\nfunction parseThrottle(s) {\n  var a = s.split(COMMA);\n  if (!s.length || a.length > 2) throw s;\n  return a.map(function(_) {\n    var x = +_;\n    if (x !== x) throw s;\n    return x;\n  });\n}\n"]},"metadata":{},"sourceType":"module"}