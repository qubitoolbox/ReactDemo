{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\n/**\n * Factory function for HTTP IO Handler in Node.js.\n *\n * @param path URL path or an array of them.\n * @param requestInit Request init for the HTTP IOHandler. May include fields\n *   such as \"credentials\" and \"cache\". (Optional)\n * @param weightPathPrefix A path prefix for weight loading . (Optional).\n */\n\n\nfunction nodeHTTPRequest(path, requestInit, weightPathPrefix) {\n  return tfjs_core_1.io.browserHTTPRequest(path, {\n    requestInit: requestInit,\n    weightPathPrefix: weightPathPrefix\n  });\n}\n\nexports.nodeHTTPRequest = nodeHTTPRequest;\n\nexports.nodeHTTPRequestRouter = function (url) {\n  var isHTTP = true;\n\n  if (Array.isArray(url)) {\n    isHTTP = url.every(function (urlItem) {\n      return tfjs_core_1.io.isHTTPScheme(urlItem);\n    });\n  } else {\n    isHTTP = tfjs_core_1.io.isHTTPScheme(url);\n  }\n\n  if (isHTTP) {\n    return nodeHTTPRequest(url);\n  }\n\n  return null;\n};","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/@tensorflow/tfjs-node/dist/io/node_http.js"],"names":["Object","defineProperty","exports","value","tfjs_core_1","require","nodeHTTPRequest","path","requestInit","weightPathPrefix","io","browserHTTPRequest","nodeHTTPRequestRouter","url","isHTTP","Array","isArray","every","urlItem","isHTTPScheme"],"mappings":"AAAA;AACA;;;;;;;;;;;;;;;;;AAgBAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,WAAW,GAAGC,OAAO,CAAC,uBAAD,CAAzB;AACA;;;;;;;;;;AAQA,SAASC,eAAT,CAAyBC,IAAzB,EAA+BC,WAA/B,EAA4CC,gBAA5C,EAA8D;AAC1D,SAAOL,WAAW,CAACM,EAAZ,CAAeC,kBAAf,CAAkCJ,IAAlC,EAAwC;AAAEC,IAAAA,WAAW,EAAEA,WAAf;AAA4BC,IAAAA,gBAAgB,EAAEA;AAA9C,GAAxC,CAAP;AACH;;AACDP,OAAO,CAACI,eAAR,GAA0BA,eAA1B;;AACAJ,OAAO,CAACU,qBAAR,GAAgC,UAAUC,GAAV,EAAe;AAC3C,MAAIC,MAAM,GAAG,IAAb;;AACA,MAAIC,KAAK,CAACC,OAAN,CAAcH,GAAd,CAAJ,EAAwB;AACpBC,IAAAA,MAAM,GAAGD,GAAG,CAACI,KAAJ,CAAU,UAAUC,OAAV,EAAmB;AAAE,aAAOd,WAAW,CAACM,EAAZ,CAAeS,YAAf,CAA4BD,OAA5B,CAAP;AAA8C,KAA7E,CAAT;AACH,GAFD,MAGK;AACDJ,IAAAA,MAAM,GAAGV,WAAW,CAACM,EAAZ,CAAeS,YAAf,CAA4BN,GAA5B,CAAT;AACH;;AACD,MAAIC,MAAJ,EAAY;AACR,WAAOR,eAAe,CAACO,GAAD,CAAtB;AACH;;AACD,SAAO,IAAP;AACH,CAZD","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\n/**\n * Factory function for HTTP IO Handler in Node.js.\n *\n * @param path URL path or an array of them.\n * @param requestInit Request init for the HTTP IOHandler. May include fields\n *   such as \"credentials\" and \"cache\". (Optional)\n * @param weightPathPrefix A path prefix for weight loading . (Optional).\n */\nfunction nodeHTTPRequest(path, requestInit, weightPathPrefix) {\n    return tfjs_core_1.io.browserHTTPRequest(path, { requestInit: requestInit, weightPathPrefix: weightPathPrefix });\n}\nexports.nodeHTTPRequest = nodeHTTPRequest;\nexports.nodeHTTPRequestRouter = function (url) {\n    var isHTTP = true;\n    if (Array.isArray(url)) {\n        isHTTP = url.every(function (urlItem) { return tfjs_core_1.io.isHTTPScheme(urlItem); });\n    }\n    else {\n        isHTTP = tfjs_core_1.io.isHTTPScheme(url);\n    }\n    if (isHTTP) {\n        return nodeHTTPRequest(url);\n    }\n    return null;\n};\n"]},"metadata":{},"sourceType":"script"}