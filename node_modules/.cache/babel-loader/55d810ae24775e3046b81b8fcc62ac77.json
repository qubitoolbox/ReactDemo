{"ast":null,"code":"import error from './error';\nexport default function (p) {\n  var path = [],\n      q = null,\n      b = 0,\n      n = p.length,\n      s = '',\n      i,\n      j,\n      c;\n  p = p + '';\n\n  function push() {\n    path.push(s + p.substring(i, j));\n    s = '';\n    i = j + 1;\n  }\n\n  for (i = j = 0; j < n; ++j) {\n    c = p[j];\n\n    if (c === '\\\\') {\n      s += p.substring(i, j);\n      s += p.substring(++j, ++j);\n      i = j;\n    } else if (c === q) {\n      push();\n      q = null;\n      b = -1;\n    } else if (q) {\n      continue;\n    } else if (i === b && c === '\"') {\n      i = j + 1;\n      q = c;\n    } else if (i === b && c === \"'\") {\n      i = j + 1;\n      q = c;\n    } else if (c === '.' && !b) {\n      if (j > i) {\n        push();\n      } else {\n        i = j + 1;\n      }\n    } else if (c === '[') {\n      if (j > i) push();\n      b = i = j + 1;\n    } else if (c === ']') {\n      if (!b) error('Access path missing open bracket: ' + p);\n      if (b > 0) push();\n      b = 0;\n      i = j + 1;\n    }\n  }\n\n  if (b) error('Access path missing closing bracket: ' + p);\n  if (q) error('Access path missing closing quote: ' + p);\n\n  if (j > i) {\n    j++;\n    push();\n  }\n\n  return path;\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-util/src/splitAccessPath.js"],"names":["error","p","path","q","b","n","length","s","i","j","c","push","substring"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AAEA,eAAe,UAASC,CAAT,EAAY;AACzB,MAAIC,IAAI,GAAG,EAAX;AAAA,MACIC,CAAC,GAAG,IADR;AAAA,MAEIC,CAAC,GAAG,CAFR;AAAA,MAGIC,CAAC,GAAGJ,CAAC,CAACK,MAHV;AAAA,MAIIC,CAAC,GAAG,EAJR;AAAA,MAKIC,CALJ;AAAA,MAKOC,CALP;AAAA,MAKUC,CALV;AAOAT,EAAAA,CAAC,GAAGA,CAAC,GAAG,EAAR;;AAEA,WAASU,IAAT,GAAgB;AACdT,IAAAA,IAAI,CAACS,IAAL,CAAUJ,CAAC,GAAGN,CAAC,CAACW,SAAF,CAAYJ,CAAZ,EAAeC,CAAf,CAAd;AACAF,IAAAA,CAAC,GAAG,EAAJ;AACAC,IAAAA,CAAC,GAAGC,CAAC,GAAG,CAAR;AACD;;AAED,OAAKD,CAAC,GAACC,CAAC,GAAC,CAAT,EAAYA,CAAC,GAACJ,CAAd,EAAiB,EAAEI,CAAnB,EAAsB;AACpBC,IAAAA,CAAC,GAAGT,CAAC,CAACQ,CAAD,CAAL;;AACA,QAAIC,CAAC,KAAK,IAAV,EAAgB;AACdH,MAAAA,CAAC,IAAIN,CAAC,CAACW,SAAF,CAAYJ,CAAZ,EAAeC,CAAf,CAAL;AACAF,MAAAA,CAAC,IAAIN,CAAC,CAACW,SAAF,CAAY,EAAEH,CAAd,EAAiB,EAAEA,CAAnB,CAAL;AACAD,MAAAA,CAAC,GAAGC,CAAJ;AACD,KAJD,MAIO,IAAIC,CAAC,KAAKP,CAAV,EAAa;AAClBQ,MAAAA,IAAI;AACJR,MAAAA,CAAC,GAAG,IAAJ;AACAC,MAAAA,CAAC,GAAG,CAAC,CAAL;AACD,KAJM,MAIA,IAAID,CAAJ,EAAO;AACZ;AACD,KAFM,MAEA,IAAIK,CAAC,KAAKJ,CAAN,IAAWM,CAAC,KAAK,GAArB,EAA0B;AAC/BF,MAAAA,CAAC,GAAGC,CAAC,GAAG,CAAR;AACAN,MAAAA,CAAC,GAAGO,CAAJ;AACD,KAHM,MAGA,IAAIF,CAAC,KAAKJ,CAAN,IAAWM,CAAC,KAAK,GAArB,EAA0B;AAC/BF,MAAAA,CAAC,GAAGC,CAAC,GAAG,CAAR;AACAN,MAAAA,CAAC,GAAGO,CAAJ;AACD,KAHM,MAGA,IAAIA,CAAC,KAAK,GAAN,IAAa,CAACN,CAAlB,EAAqB;AAC1B,UAAIK,CAAC,GAAGD,CAAR,EAAW;AACTG,QAAAA,IAAI;AACL,OAFD,MAEO;AACLH,QAAAA,CAAC,GAAGC,CAAC,GAAG,CAAR;AACD;AACF,KANM,MAMA,IAAIC,CAAC,KAAK,GAAV,EAAe;AACpB,UAAID,CAAC,GAAGD,CAAR,EAAWG,IAAI;AACfP,MAAAA,CAAC,GAAGI,CAAC,GAAGC,CAAC,GAAG,CAAZ;AACD,KAHM,MAGA,IAAIC,CAAC,KAAK,GAAV,EAAe;AACpB,UAAI,CAACN,CAAL,EAAQJ,KAAK,CAAC,uCAAuCC,CAAxC,CAAL;AACR,UAAIG,CAAC,GAAG,CAAR,EAAWO,IAAI;AACfP,MAAAA,CAAC,GAAG,CAAJ;AACAI,MAAAA,CAAC,GAAGC,CAAC,GAAG,CAAR;AACD;AACF;;AAED,MAAIL,CAAJ,EAAOJ,KAAK,CAAC,0CAA0CC,CAA3C,CAAL;AACP,MAAIE,CAAJ,EAAOH,KAAK,CAAC,wCAAwCC,CAAzC,CAAL;;AAEP,MAAIQ,CAAC,GAAGD,CAAR,EAAW;AACTC,IAAAA,CAAC;AACDE,IAAAA,IAAI;AACL;;AAED,SAAOT,IAAP;AACD","sourcesContent":["import error from './error';\n\nexport default function(p) {\n  var path = [],\n      q = null,\n      b = 0,\n      n = p.length,\n      s = '',\n      i, j, c;\n\n  p = p + '';\n\n  function push() {\n    path.push(s + p.substring(i, j));\n    s = '';\n    i = j + 1;\n  }\n\n  for (i=j=0; j<n; ++j) {\n    c = p[j];\n    if (c === '\\\\') {\n      s += p.substring(i, j);\n      s += p.substring(++j, ++j);\n      i = j;\n    } else if (c === q) {\n      push();\n      q = null;\n      b = -1;\n    } else if (q) {\n      continue;\n    } else if (i === b && c === '\"') {\n      i = j + 1;\n      q = c;\n    } else if (i === b && c === \"'\") {\n      i = j + 1;\n      q = c;\n    } else if (c === '.' && !b) {\n      if (j > i) {\n        push();\n      } else {\n        i = j + 1;\n      }\n    } else if (c === '[') {\n      if (j > i) push();\n      b = i = j + 1;\n    } else if (c === ']') {\n      if (!b) error('Access path missing open bracket: ' + p);\n      if (b > 0) push();\n      b = 0;\n      i = j + 1;\n    }\n  }\n\n  if (b) error('Access path missing closing bracket: ' + p);\n  if (q) error('Access path missing closing quote: ' + p);\n\n  if (j > i) {\n    j++;\n    push();\n  }\n\n  return path;\n}\n"]},"metadata":{},"sourceType":"module"}