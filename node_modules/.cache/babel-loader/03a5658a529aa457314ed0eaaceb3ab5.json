{"ast":null,"code":"import { Top, Left, Bottom, Value, zero, one } from './constants';\nimport guideMark from './guide-mark';\nimport { lookup } from './guide-util';\nimport { RuleMark } from '../marks/marktypes';\nimport { AxisTickRole } from '../marks/roles';\nimport { addEncoders, encoder } from '../encode/encode-util';\nexport default function (spec, config, userEncode, dataRef, size, band) {\n  var _ = lookup(spec, config),\n      orient = spec.orient,\n      sign = orient === Left || orient === Top ? -1 : 1,\n      encode,\n      enter,\n      exit,\n      update,\n      tickSize,\n      tickPos;\n\n  encode = {\n    enter: enter = {\n      opacity: zero\n    },\n    update: update = {\n      opacity: one\n    },\n    exit: exit = {\n      opacity: zero\n    }\n  };\n  addEncoders(encode, {\n    stroke: _('tickColor'),\n    strokeDash: _('tickDash'),\n    strokeDashOffset: _('tickDashOffset'),\n    strokeOpacity: _('tickOpacity'),\n    strokeWidth: _('tickWidth')\n  });\n  tickSize = encoder(size);\n  tickSize.mult = sign;\n  tickPos = {\n    scale: spec.scale,\n    field: Value,\n    band: band.band,\n    extra: band.extra,\n    offset: band.offset,\n    round: _('tickRound')\n  };\n\n  if (orient === Top || orient === Bottom) {\n    update.y = enter.y = zero;\n    update.y2 = enter.y2 = tickSize;\n    update.x = enter.x = exit.x = tickPos;\n  } else {\n    update.x = enter.x = zero;\n    update.x2 = enter.x2 = tickSize;\n    update.y = enter.y = exit.y = tickPos;\n  }\n\n  return guideMark(RuleMark, AxisTickRole, null, Value, dataRef, encode, userEncode);\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-parser/src/parsers/guides/axis-ticks.js"],"names":["Top","Left","Bottom","Value","zero","one","guideMark","lookup","RuleMark","AxisTickRole","addEncoders","encoder","spec","config","userEncode","dataRef","size","band","_","orient","sign","encode","enter","exit","update","tickSize","tickPos","opacity","stroke","strokeDash","strokeDashOffset","strokeOpacity","strokeWidth","mult","scale","field","extra","offset","round","y","y2","x","x2"],"mappings":"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","sourcesContent":["import {Top, Left, Bottom, Value, zero, one} from './constants';\nimport guideMark from './guide-mark';\nimport {lookup} from './guide-util';\nimport {RuleMark} from '../marks/marktypes';\nimport {AxisTickRole} from '../marks/roles';\nimport {addEncoders, encoder} from '../encode/encode-util';\n\nexport default function(spec, config, userEncode, dataRef, size, band) {\n  var _ = lookup(spec, config),\n      orient = spec.orient,\n      sign = (orient === Left || orient === Top) ? -1 : 1,\n      encode, enter, exit, update, tickSize, tickPos;\n\n  encode = {\n    enter: enter = {opacity: zero},\n    update: update = {opacity: one},\n    exit: exit = {opacity: zero}\n  };\n\n  addEncoders(encode, {\n    stroke:           _('tickColor'),\n    strokeDash:       _('tickDash'),\n    strokeDashOffset: _('tickDashOffset'),\n    strokeOpacity:    _('tickOpacity'),\n    strokeWidth:      _('tickWidth')\n  });\n\n  tickSize = encoder(size);\n  tickSize.mult = sign;\n\n  tickPos = {\n    scale:  spec.scale,\n    field:  Value,\n    band:   band.band,\n    extra:  band.extra,\n    offset: band.offset,\n    round:  _('tickRound')\n  };\n\n  if (orient === Top || orient === Bottom) {\n    update.y = enter.y = zero;\n    update.y2 = enter.y2 = tickSize;\n    update.x = enter.x = exit.x = tickPos;\n  } else {\n    update.x = enter.x = zero;\n    update.x2 = enter.x2 = tickSize;\n    update.y = enter.y = exit.y = tickPos;\n  }\n\n  return guideMark(RuleMark, AxisTickRole, null, Value, dataRef, encode, userEncode);\n}\n"]},"metadata":{},"sourceType":"module"}