{"ast":null,"code":"import { Value, Perc, Perc2, zero, one } from './constants';\nimport guideMark from './guide-mark';\nimport { lookup } from './guide-util';\nimport { RectMark } from '../marks/marktypes';\nimport { LegendBandRole } from '../marks/roles';\nimport { addEncoders, encoder } from '../encode/encode-util';\nimport { extend } from 'vega-util';\nexport default function (spec, scale, config, userEncode, dataRef) {\n  var _ = lookup(spec, config),\n      vertical = _.isVertical(),\n      thickness = _.gradientThickness(),\n      length = _.gradientLength(),\n      encode,\n      enter,\n      u,\n      v,\n      uu,\n      vv,\n      adjust = '';\n\n  vertical ? (u = 'y', uu = 'y2', v = 'x', vv = 'width', adjust = '1-') : (u = 'x', uu = 'x2', v = 'y', vv = 'height');\n  enter = {\n    opacity: zero,\n    fill: {\n      scale: scale,\n      field: Value\n    }\n  };\n  enter[u] = {\n    signal: adjust + 'datum.' + Perc,\n    mult: length\n  };\n  enter[v] = zero;\n  enter[uu] = {\n    signal: adjust + 'datum.' + Perc2,\n    mult: length\n  };\n  enter[vv] = encoder(thickness);\n  encode = {\n    enter: enter,\n    update: extend({}, enter, {\n      opacity: one\n    }),\n    exit: {\n      opacity: zero\n    }\n  };\n  addEncoders(encode, {\n    stroke: _('gradientStrokeColor'),\n    strokeWidth: _('gradientStrokeWidth')\n  }, {\n    // update\n    opacity: _('gradientOpacity')\n  });\n  return guideMark(RectMark, LegendBandRole, null, Value, dataRef, encode, userEncode);\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-parser/src/parsers/guides/legend-gradient-discrete.js"],"names":["Value","Perc","Perc2","zero","one","guideMark","lookup","RectMark","LegendBandRole","addEncoders","encoder","extend","spec","scale","config","userEncode","dataRef","_","vertical","isVertical","thickness","gradientThickness","length","gradientLength","encode","enter","u","v","uu","vv","adjust","opacity","fill","field","signal","mult","update","exit","stroke","strokeWidth"],"mappings":"AAAA,SAAQA,KAAR,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,IAA5B,EAAkCC,GAAlC,QAA4C,aAA5C;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAAQC,MAAR,QAAqB,cAArB;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,SAAQC,cAAR,QAA6B,gBAA7B;AACA,SAAQC,WAAR,EAAqBC,OAArB,QAAmC,uBAAnC;AACA,SAAQC,MAAR,QAAqB,WAArB;AAEA,eAAe,UAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,UAA9B,EAA0CC,OAA1C,EAAmD;AAChE,MAAIC,CAAC,GAAGX,MAAM,CAACM,IAAD,EAAOE,MAAP,CAAd;AAAA,MACII,QAAQ,GAAGD,CAAC,CAACE,UAAF,EADf;AAAA,MAEIC,SAAS,GAAGH,CAAC,CAACI,iBAAF,EAFhB;AAAA,MAGIC,MAAM,GAAGL,CAAC,CAACM,cAAF,EAHb;AAAA,MAIIC,MAJJ;AAAA,MAIYC,KAJZ;AAAA,MAImBC,CAJnB;AAAA,MAIsBC,CAJtB;AAAA,MAIyBC,EAJzB;AAAA,MAI6BC,EAJ7B;AAAA,MAIiCC,MAAM,GAAG,EAJ1C;;AAMAZ,EAAAA,QAAQ,IACHQ,CAAC,GAAG,GAAJ,EAASE,EAAE,GAAG,IAAd,EAAoBD,CAAC,GAAG,GAAxB,EAA6BE,EAAE,GAAG,OAAlC,EAA2CC,MAAM,GAAG,IADjD,KAEHJ,CAAC,GAAG,GAAJ,EAASE,EAAE,GAAG,IAAd,EAAoBD,CAAC,GAAG,GAAxB,EAA6BE,EAAE,GAAG,QAF/B,CAAR;AAIAJ,EAAAA,KAAK,GAAG;AACNM,IAAAA,OAAO,EAAE5B,IADH;AAEN6B,IAAAA,IAAI,EAAE;AAACnB,MAAAA,KAAK,EAAEA,KAAR;AAAeoB,MAAAA,KAAK,EAAEjC;AAAtB;AAFA,GAAR;AAIAyB,EAAAA,KAAK,CAACC,CAAD,CAAL,GAAY;AAACQ,IAAAA,MAAM,EAAEJ,MAAM,GAAG,QAAT,GAAoB7B,IAA7B;AAAmCkC,IAAAA,IAAI,EAAEb;AAAzC,GAAZ;AACAG,EAAAA,KAAK,CAACE,CAAD,CAAL,GAAYxB,IAAZ;AACAsB,EAAAA,KAAK,CAACG,EAAD,CAAL,GAAY;AAACM,IAAAA,MAAM,EAAEJ,MAAM,GAAG,QAAT,GAAoB5B,KAA7B;AAAoCiC,IAAAA,IAAI,EAAEb;AAA1C,GAAZ;AACAG,EAAAA,KAAK,CAACI,EAAD,CAAL,GAAYnB,OAAO,CAACU,SAAD,CAAnB;AAEAI,EAAAA,MAAM,GAAG;AACPC,IAAAA,KAAK,EAAEA,KADA;AAEPW,IAAAA,MAAM,EAAEzB,MAAM,CAAC,EAAD,EAAKc,KAAL,EAAY;AAACM,MAAAA,OAAO,EAAE3B;AAAV,KAAZ,CAFP;AAGPiC,IAAAA,IAAI,EAAE;AAACN,MAAAA,OAAO,EAAE5B;AAAV;AAHC,GAAT;AAMAM,EAAAA,WAAW,CAACe,MAAD,EAAS;AAClBc,IAAAA,MAAM,EAAOrB,CAAC,CAAC,qBAAD,CADI;AAElBsB,IAAAA,WAAW,EAAEtB,CAAC,CAAC,qBAAD;AAFI,GAAT,EAGR;AAAE;AACHc,IAAAA,OAAO,EAAMd,CAAC,CAAC,iBAAD;AADb,GAHQ,CAAX;AAOA,SAAOZ,SAAS,CAACE,QAAD,EAAWC,cAAX,EAA2B,IAA3B,EAAiCR,KAAjC,EAAwCgB,OAAxC,EAAiDQ,MAAjD,EAAyDT,UAAzD,CAAhB;AACD","sourcesContent":["import {Value, Perc, Perc2, zero, one} from './constants';\nimport guideMark from './guide-mark';\nimport {lookup} from './guide-util';\nimport {RectMark} from '../marks/marktypes';\nimport {LegendBandRole} from '../marks/roles';\nimport {addEncoders, encoder} from '../encode/encode-util';\nimport {extend} from 'vega-util';\n\nexport default function(spec, scale, config, userEncode, dataRef) {\n  var _ = lookup(spec, config),\n      vertical = _.isVertical(),\n      thickness = _.gradientThickness(),\n      length = _.gradientLength(),\n      encode, enter, u, v, uu, vv, adjust = '';\n\n  vertical\n    ? (u = 'y', uu = 'y2', v = 'x', vv = 'width', adjust = '1-')\n    : (u = 'x', uu = 'x2', v = 'y', vv = 'height');\n\n  enter = {\n    opacity: zero,\n    fill: {scale: scale, field: Value}\n  };\n  enter[u]  = {signal: adjust + 'datum.' + Perc, mult: length};\n  enter[v]  = zero;\n  enter[uu] = {signal: adjust + 'datum.' + Perc2, mult: length};\n  enter[vv] = encoder(thickness);\n\n  encode = {\n    enter: enter,\n    update: extend({}, enter, {opacity: one}),\n    exit: {opacity: zero}\n  };\n\n  addEncoders(encode, {\n    stroke:      _('gradientStrokeColor'),\n    strokeWidth: _('gradientStrokeWidth')\n  }, { // update\n    opacity:     _('gradientOpacity')\n  });\n\n  return guideMark(RectMark, LegendBandRole, null, Value, dataRef, encode, userEncode);\n}\n"]},"metadata":{},"sourceType":"module"}