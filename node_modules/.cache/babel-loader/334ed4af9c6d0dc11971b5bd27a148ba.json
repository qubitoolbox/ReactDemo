{"ast":null,"code":"import eventExtend from './events-extend';\nimport { EventStream } from 'vega-dataflow';\nimport { extend, isArray, isObject, toSet } from 'vega-util';\nconst VIEW = 'view',\n      TIMER = 'timer',\n      WINDOW = 'window',\n      NO_TRAP = {\n  trap: false\n};\n/**\n * Initialize event handling configuration.\n * @param {object} config - The configuration settings.\n * @return {object}\n */\n\nexport function initializeEventConfig(config) {\n  const events = extend({\n    defaults: {}\n  }, config);\n\n  const unpack = (obj, keys) => {\n    keys.forEach(k => {\n      if (isArray(obj[k])) obj[k] = toSet(obj[k]);\n    });\n  };\n\n  unpack(events.defaults, ['prevent', 'allow']);\n  unpack(events, ['view', 'window', 'selector']);\n  return events;\n}\n\nfunction prevent(view, type) {\n  var def = view._eventConfig.defaults,\n      prevent = def.prevent,\n      allow = def.allow;\n  return prevent === false || allow === true ? false : prevent === true || allow === false ? true : prevent ? prevent[type] : allow ? !allow[type] : view.preventDefault();\n}\n\nfunction permit(view, key, type) {\n  const rule = view._eventConfig && view._eventConfig[key];\n\n  if (rule === false || isObject(rule) && !rule[type]) {\n    view.warn(`Blocked ${key} ${type} event listener.`);\n    return false;\n  }\n\n  return true;\n}\n/**\n * Create a new event stream from an event source.\n * @param {object} source - The event source to monitor.\n * @param {string} type - The event type.\n * @param {function(object): boolean} [filter] - Event filter function.\n * @return {EventStream}\n */\n\n\nexport function events(source, type, filter) {\n  var view = this,\n      s = new EventStream(filter),\n      send = function (e, item) {\n    view.runAsync(null, () => {\n      if (source === VIEW && prevent(view, type)) {\n        e.preventDefault();\n      }\n\n      s.receive(eventExtend(view, e, item));\n    });\n  },\n      sources;\n\n  if (source === TIMER) {\n    if (permit(view, 'timer', type)) {\n      view.timer(send, type);\n    }\n  } else if (source === VIEW) {\n    if (permit(view, 'view', type)) {\n      // send traps errors, so use {trap: false} option\n      view.addEventListener(type, send, NO_TRAP);\n    }\n  } else {\n    if (source === WINDOW) {\n      if (permit(view, 'window', type) && typeof window !== 'undefined') {\n        sources = [window];\n      }\n    } else if (typeof document !== 'undefined') {\n      if (permit(view, 'selector', type)) {\n        sources = document.querySelectorAll(source);\n      }\n    }\n\n    if (!sources) {\n      view.warn('Can not resolve event source: ' + source);\n    } else {\n      for (var i = 0, n = sources.length; i < n; ++i) {\n        sources[i].addEventListener(type, send);\n      }\n\n      view._eventListeners.push({\n        type: type,\n        sources: sources,\n        handler: send\n      });\n    }\n  }\n\n  return s;\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-view/src/events.js"],"names":["eventExtend","EventStream","extend","isArray","isObject","toSet","VIEW","TIMER","WINDOW","NO_TRAP","trap","initializeEventConfig","config","events","defaults","unpack","obj","keys","forEach","k","prevent","view","type","def","_eventConfig","allow","preventDefault","permit","key","rule","warn","source","filter","s","send","e","item","runAsync","receive","sources","timer","addEventListener","window","document","querySelectorAll","i","n","length","_eventListeners","push","handler"],"mappings":"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","sourcesContent":["import eventExtend from './events-extend';\nimport {EventStream} from 'vega-dataflow';\nimport {extend, isArray, isObject, toSet} from 'vega-util';\n\nconst VIEW = 'view',\n      TIMER = 'timer',\n      WINDOW = 'window',\n      NO_TRAP = {trap: false};\n\n/**\n * Initialize event handling configuration.\n * @param {object} config - The configuration settings.\n * @return {object}\n */\nexport function initializeEventConfig(config) {\n  const events = extend({defaults: {}}, config);\n\n  const unpack = (obj, keys) => {\n    keys.forEach(k => {\n      if (isArray(obj[k])) obj[k] = toSet(obj[k]);\n    });\n  };\n\n  unpack(events.defaults, ['prevent', 'allow']);\n  unpack(events, ['view', 'window', 'selector']);\n\n  return events;\n}\n\nfunction prevent(view, type) {\n  var def = view._eventConfig.defaults,\n      prevent = def.prevent,\n      allow = def.allow;\n\n  return prevent === false || allow === true ? false\n    : prevent === true || allow === false ? true\n    : prevent ? prevent[type]\n    : allow ? !allow[type]\n    : view.preventDefault();\n}\n\nfunction permit(view, key, type) {\n  const rule = view._eventConfig && view._eventConfig[key];\n\n  if (rule === false || (isObject(rule) && !rule[type])) {\n    view.warn(`Blocked ${key} ${type} event listener.`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Create a new event stream from an event source.\n * @param {object} source - The event source to monitor.\n * @param {string} type - The event type.\n * @param {function(object): boolean} [filter] - Event filter function.\n * @return {EventStream}\n */\nexport function events(source, type, filter) {\n  var view = this,\n      s = new EventStream(filter),\n      send = function(e, item) {\n        view.runAsync(null, () => {\n          if (source === VIEW && prevent(view, type)) {\n            e.preventDefault();\n          }\n          s.receive(eventExtend(view, e, item));\n        });\n      },\n      sources;\n\n  if (source === TIMER) {\n    if (permit(view, 'timer', type)) {\n      view.timer(send, type);\n    }\n  }\n\n  else if (source === VIEW) {\n    if (permit(view, 'view', type)) {\n      // send traps errors, so use {trap: false} option\n      view.addEventListener(type, send, NO_TRAP);\n    }\n  }\n\n  else {\n    if (source === WINDOW) {\n      if (permit(view, 'window', type) && typeof window !== 'undefined') {\n        sources = [window];\n      }\n    } else if (typeof document !== 'undefined') {\n      if (permit(view, 'selector', type)) {\n        sources = document.querySelectorAll(source);\n      }\n    }\n\n    if (!sources) {\n      view.warn('Can not resolve event source: ' + source);\n    } else {\n      for (var i=0, n=sources.length; i<n; ++i) {\n        sources[i].addEventListener(type, send);\n      }\n\n      view._eventListeners.push({\n        type:    type,\n        sources: sources,\n        handler: send\n      });\n    }\n  }\n\n  return s;\n}\n"]},"metadata":{},"sourceType":"module"}