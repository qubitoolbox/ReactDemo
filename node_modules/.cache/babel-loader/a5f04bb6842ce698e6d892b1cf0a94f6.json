{"ast":null,"code":"import parseExpression from './expression';\nimport { operator } from '../util';\nexport default function (spec, scope, name) {\n  var remove = spec.remove,\n      insert = spec.insert,\n      toggle = spec.toggle,\n      modify = spec.modify,\n      values = spec.values,\n      op = scope.add(operator()),\n      update,\n      expr;\n  update = 'if(' + spec.trigger + ',modify(\"' + name + '\",' + [insert, remove, toggle, modify, values].map(function (_) {\n    return _ == null ? 'null' : _;\n  }).join(',') + '),0)';\n  expr = parseExpression(update, scope);\n  op.update = expr.$expr;\n  op.params = expr.$params;\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-parser/src/parsers/trigger.js"],"names":["parseExpression","operator","spec","scope","name","remove","insert","toggle","modify","values","op","add","update","expr","trigger","map","_","join","$expr","params","$params"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,QAAR,QAAuB,SAAvB;AAEA,eAAe,UAASC,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,EAA4B;AACzC,MAAIC,MAAM,GAAGH,IAAI,CAACG,MAAlB;AAAA,MACIC,MAAM,GAAGJ,IAAI,CAACI,MADlB;AAAA,MAEIC,MAAM,GAAGL,IAAI,CAACK,MAFlB;AAAA,MAGIC,MAAM,GAAGN,IAAI,CAACM,MAHlB;AAAA,MAIIC,MAAM,GAAGP,IAAI,CAACO,MAJlB;AAAA,MAKIC,EAAE,GAAGP,KAAK,CAACQ,GAAN,CAAUV,QAAQ,EAAlB,CALT;AAAA,MAMIW,MANJ;AAAA,MAMYC,IANZ;AAQAD,EAAAA,MAAM,GAAG,QAAQV,IAAI,CAACY,OAAb,GAAuB,WAAvB,GACLV,IADK,GACE,IADF,GAEL,CAACE,MAAD,EAASD,MAAT,EAAiBE,MAAjB,EAAyBC,MAAzB,EAAiCC,MAAjC,EACGM,GADH,CACO,UAASC,CAAT,EAAY;AAAE,WAAOA,CAAC,IAAI,IAAL,GAAY,MAAZ,GAAqBA,CAA5B;AAAgC,GADrD,EAEGC,IAFH,CAEQ,GAFR,CAFK,GAKL,MALJ;AAOAJ,EAAAA,IAAI,GAAGb,eAAe,CAACY,MAAD,EAAST,KAAT,CAAtB;AACAO,EAAAA,EAAE,CAACE,MAAH,GAAYC,IAAI,CAACK,KAAjB;AACAR,EAAAA,EAAE,CAACS,MAAH,GAAYN,IAAI,CAACO,OAAjB;AACD","sourcesContent":["import parseExpression from './expression';\nimport {operator} from '../util';\n\nexport default function(spec, scope, name) {\n  var remove = spec.remove,\n      insert = spec.insert,\n      toggle = spec.toggle,\n      modify = spec.modify,\n      values = spec.values,\n      op = scope.add(operator()),\n      update, expr;\n\n  update = 'if(' + spec.trigger + ',modify(\"'\n    + name + '\",'\n    + [insert, remove, toggle, modify, values]\n        .map(function(_) { return _ == null ? 'null' : _; })\n        .join(',')\n    + '),0)';\n\n  expr = parseExpression(update, scope);\n  op.update = expr.$expr;\n  op.params = expr.$params;\n}\n"]},"metadata":{},"sourceType":"module"}