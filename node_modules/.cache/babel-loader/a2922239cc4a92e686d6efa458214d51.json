{"ast":null,"code":"/**\n * Vega-Lite's singleton logger utility.\n */\nimport { logger, Warn } from 'vega-util';\nimport * as message_ from './message';\nexport const message = message_;\n/**\n * Main (default) Vega Logger instance for Vega-Lite.\n */\n\nconst main = logger(Warn);\nlet current = main;\n/**\n * Logger tool for checking if the code throws correct warning.\n */\n\nexport class LocalLogger {\n  constructor() {\n    this.warns = [];\n    this.infos = [];\n    this.debugs = [];\n  }\n\n  level() {\n    return this;\n  }\n\n  warn(...args) {\n    this.warns.push(...args);\n    return this;\n  }\n\n  info(...args) {\n    this.infos.push(...args);\n    return this;\n  }\n\n  debug(...args) {\n    this.debugs.push(...args);\n    return this;\n  }\n\n  error(...args) {\n    throw Error(...args);\n  }\n\n}\nexport function wrap(f) {\n  return () => {\n    current = new LocalLogger();\n    f(current);\n    reset();\n  };\n}\n/**\n * Set the singleton logger to be a custom logger.\n */\n\nexport function set(newLogger) {\n  current = newLogger;\n  return current;\n}\n/**\n * Reset the main logger to use the default Vega Logger.\n */\n\nexport function reset() {\n  current = main;\n  return current;\n}\nexport function warn(...args) {\n  current.warn(...args);\n}\nexport function info(...args) {\n  current.info(...args);\n}\nexport function debug(...args) {\n  current.debug(...args);\n}","map":{"version":3,"sources":["../../../src/log/index.ts"],"names":[],"mappings":"AAAA;;;AAIA,SAAQ,MAAR,EAAiC,IAAjC,QAA4C,WAA5C;AACA,OAAO,KAAK,QAAZ,MAA0B,WAA1B;AAEA,OAAO,MAAM,OAAO,GAAG,QAAhB;AAEP;;;;AAGA,MAAM,IAAI,GAAG,MAAM,CAAC,IAAD,CAAnB;AACA,IAAI,OAAO,GAAoB,IAA/B;AAEA;;;;AAGA,OAAM,MAAO,WAAP,CAAkB;AAAxB,EAAA,WAAA,GAAA;AACS,SAAA,KAAA,GAAe,EAAf;AACA,SAAA,KAAA,GAAe,EAAf;AACA,SAAA,MAAA,GAAgB,EAAhB;AAwBR;;AAtBQ,EAAA,KAAK,GAAA;AACV,WAAO,IAAP;AACD;;AAEM,EAAA,IAAI,CAAC,GAAG,IAAJ,EAAwB;AACjC,SAAK,KAAL,CAAW,IAAX,CAAgB,GAAG,IAAnB;AACA,WAAO,IAAP;AACD;;AAEM,EAAA,IAAI,CAAC,GAAG,IAAJ,EAAwB;AACjC,SAAK,KAAL,CAAW,IAAX,CAAgB,GAAG,IAAnB;AACA,WAAO,IAAP;AACD;;AAEM,EAAA,KAAK,CAAC,GAAG,IAAJ,EAAwB;AAClC,SAAK,MAAL,CAAY,IAAZ,CAAiB,GAAG,IAApB;AACA,WAAO,IAAP;AACD;;AAEM,EAAA,KAAK,CAAC,GAAG,IAAJ,EAAwB;AAClC,UAAM,KAAK,CAAC,GAAG,IAAJ,CAAX;AACD;;AA1BqB;AA6BxB,OAAM,SAAU,IAAV,CAAe,CAAf,EAA+C;AACnD,SAAO,MAAK;AACV,IAAA,OAAO,GAAG,IAAI,WAAJ,EAAV;AACA,IAAA,CAAC,CAAC,OAAD,CAAD;AACA,IAAA,KAAK;AACN,GAJD;AAKD;AAED;;;;AAGA,OAAM,SAAU,GAAV,CAAc,SAAd,EAAwC;AAC5C,EAAA,OAAO,GAAG,SAAV;AACA,SAAO,OAAP;AACD;AAED;;;;AAGA,OAAM,SAAU,KAAV,GAAe;AACnB,EAAA,OAAO,GAAG,IAAV;AACA,SAAO,OAAP;AACD;AAED,OAAM,SAAU,IAAV,CAAe,GAAG,IAAlB,EAAsC;AAC1C,EAAA,OAAO,CAAC,IAAR,CAAa,GAAG,IAAhB;AACD;AAED,OAAM,SAAU,IAAV,CAAe,GAAG,IAAlB,EAAsC;AAC1C,EAAA,OAAO,CAAC,IAAR,CAAa,GAAG,IAAhB;AACD;AAED,OAAM,SAAU,KAAV,CAAgB,GAAG,IAAnB,EAAuC;AAC3C,EAAA,OAAO,CAAC,KAAR,CAAc,GAAG,IAAjB;AACD","sourcesContent":["/**\n * Vega-Lite's singleton logger utility.\n */\n\nimport {logger, LoggerInterface, Warn} from 'vega-util';\nimport * as message_ from './message';\n\nexport const message = message_;\n\n/**\n * Main (default) Vega Logger instance for Vega-Lite.\n */\nconst main = logger(Warn);\nlet current: LoggerInterface = main;\n\n/**\n * Logger tool for checking if the code throws correct warning.\n */\nexport class LocalLogger implements LoggerInterface {\n  public warns: any[] = [];\n  public infos: any[] = [];\n  public debugs: any[] = [];\n\n  public level() {\n    return this;\n  }\n\n  public warn(...args: readonly any[]) {\n    this.warns.push(...args);\n    return this;\n  }\n\n  public info(...args: readonly any[]) {\n    this.infos.push(...args);\n    return this;\n  }\n\n  public debug(...args: readonly any[]) {\n    this.debugs.push(...args);\n    return this;\n  }\n\n  public error(...args: readonly any[]): this {\n    throw Error(...args);\n  }\n}\n\nexport function wrap(f: (logger: LocalLogger) => void) {\n  return () => {\n    current = new LocalLogger();\n    f(current as LocalLogger);\n    reset();\n  };\n}\n\n/**\n * Set the singleton logger to be a custom logger.\n */\nexport function set(newLogger: LoggerInterface) {\n  current = newLogger;\n  return current;\n}\n\n/**\n * Reset the main logger to use the default Vega Logger.\n */\nexport function reset() {\n  current = main;\n  return current;\n}\n\nexport function warn(...args: readonly any[]) {\n  current.warn(...args);\n}\n\nexport function info(...args: readonly any[]) {\n  current.info(...args);\n}\n\nexport function debug(...args: readonly any[]) {\n  current.debug(...args);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}