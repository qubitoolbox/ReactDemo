{"ast":null,"code":"import { Left, Right, Center, Start, End, Vertical } from './constants';\nimport { value } from '../../util';\nimport { isObject, stringValue } from 'vega-util';\nexport function lookup(spec, config) {\n  const _ = (name, dflt) => value(spec[name], value(config[name], dflt));\n\n  _.isVertical = s => Vertical === value(spec.direction, config.direction || (s ? config.symbolDirection : config.gradientDirection));\n\n  _.gradientLength = () => value(spec.gradientLength, config.gradientLength || config.gradientWidth);\n\n  _.gradientThickness = () => value(spec.gradientThickness, config.gradientThickness || config.gradientHeight);\n\n  _.entryColumns = () => value(spec.columns, value(config.columns, +_.isVertical(true)));\n\n  return _;\n}\nexport function getEncoding(name, encode) {\n  var v = encode && (encode.update && encode.update[name] || encode.enter && encode.enter[name]);\n  return v && v.signal ? v : v ? v.value : null;\n}\nexport function getStyle(name, scope, style) {\n  var s = scope.config.style[style];\n  return s && s[name];\n}\nexport function anchorExpr(s, e, m) {\n  return `item.anchor === \"${Start}\" ? ${s} : item.anchor === \"${End}\" ? ${e} : ${m}`;\n}\nexport const alignExpr = anchorExpr(stringValue(Left), stringValue(Right), stringValue(Center));\nexport function tickBand(_) {\n  let v = _('tickBand'),\n      offset = _('tickOffset'),\n      band,\n      extra;\n\n  if (!v) {\n    // if no tick band entry, fall back on other properties\n    band = _('bandPosition');\n    extra = _('tickExtra');\n  } else if (v.signal) {\n    // if signal, augment code to interpret values\n    band = {\n      signal: `(${v.signal})==='extent'?1:0.5`\n    };\n    extra = {\n      signal: `(${v.signal})==='extent'?true:false`\n    };\n\n    if (!isObject(offset)) {\n      offset = {\n        signal: `(${v.signal})==='extent'?0:${offset}`\n      };\n    }\n  } else if (v === 'extent') {\n    // if constant, simply set values\n    band = 1;\n    extra = true;\n    offset = 0;\n  } else {\n    band = 0.5;\n    extra = false;\n  }\n\n  return {\n    extra,\n    band,\n    offset\n  };\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-parser/src/parsers/guides/guide-util.js"],"names":["Left","Right","Center","Start","End","Vertical","value","isObject","stringValue","lookup","spec","config","_","name","dflt","isVertical","s","direction","symbolDirection","gradientDirection","gradientLength","gradientWidth","gradientThickness","gradientHeight","entryColumns","columns","getEncoding","encode","v","update","enter","signal","getStyle","scope","style","anchorExpr","e","m","alignExpr","tickBand","offset","band","extra"],"mappings":"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","sourcesContent":["import {Left, Right, Center, Start, End, Vertical} from './constants';\nimport {value} from '../../util';\nimport {isObject, stringValue} from 'vega-util';\n\nexport function lookup(spec, config) {\n  const _ = (name, dflt) => value(spec[name], value(config[name], dflt));\n\n  _.isVertical = s => Vertical === value(\n    spec.direction,\n    config.direction || (s ? config.symbolDirection : config.gradientDirection)\n  );\n\n  _.gradientLength = () => value(\n    spec.gradientLength,\n    config.gradientLength || config.gradientWidth\n  );\n\n  _.gradientThickness = () => value(\n    spec.gradientThickness,\n    config.gradientThickness || config.gradientHeight\n  );\n\n  _.entryColumns = () => value(\n    spec.columns,\n    value(config.columns, +_.isVertical(true))\n  );\n\n  return _;\n}\n\nexport function getEncoding(name, encode) {\n  var v = encode && (\n    (encode.update && encode.update[name]) ||\n    (encode.enter && encode.enter[name])\n  );\n  return v && v.signal ? v : v ? v.value : null;\n}\n\nexport function getStyle(name, scope, style) {\n  var s = scope.config.style[style];\n  return s && s[name];\n}\n\nexport function anchorExpr(s, e, m) {\n  return `item.anchor === \"${Start}\" ? ${s} : item.anchor === \"${End}\" ? ${e} : ${m}`;\n}\n\nexport const alignExpr = anchorExpr(\n  stringValue(Left),\n  stringValue(Right),\n  stringValue(Center)\n);\n\nexport function tickBand(_) {\n  let v = _('tickBand'),\n      offset = _('tickOffset'),\n      band, extra;\n\n  if (!v) {\n    // if no tick band entry, fall back on other properties\n    band = _('bandPosition');\n    extra = _('tickExtra');\n  } else if (v.signal) {\n    // if signal, augment code to interpret values\n    band = {signal: `(${v.signal})==='extent'?1:0.5`};\n    extra = {signal: `(${v.signal})==='extent'?true:false`};\n    if (!isObject(offset)) {\n      offset = {signal: `(${v.signal})==='extent'?0:${offset}`};\n    }\n  } else if (v === 'extent') {\n    // if constant, simply set values\n    band = 1;\n    extra = true;\n    offset = 0;\n  } else {\n    band = 0.5;\n    extra = false;\n  }\n\n  return {extra, band, offset};\n}\n"]},"metadata":{},"sourceType":"module"}