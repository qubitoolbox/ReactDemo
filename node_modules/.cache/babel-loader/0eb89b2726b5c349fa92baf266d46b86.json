{"ast":null,"code":"/**\n * Open editor url in a new window, and pass a message.\n */\nexport default function (window, url, data) {\n  const editor = window.open(url);\n  const wait = 10000;\n  const step = 250; // eslint-disable-next-line no-bitwise\n\n  let count = ~~(wait / step);\n\n  function listen(evt) {\n    if (evt.source === editor) {\n      count = 0;\n      window.removeEventListener('message', listen, false);\n    }\n  }\n\n  window.addEventListener('message', listen, false); // send message\n  // periodically resend until ack received or timeout\n\n  function send() {\n    if (count <= 0) {\n      return;\n    }\n\n    editor.postMessage(data, '*');\n    setTimeout(send, step);\n    count -= 1;\n  }\n\n  setTimeout(send, step);\n}","map":{"version":3,"sources":["../../src/post.ts"],"names":[],"mappings":"AAEA;;;AAGA,eAAc,UAAU,MAAV,EAA0B,GAA1B,EAAuC,IAAvC,EAAwD;AACpE,QAAM,MAAM,GAAG,MAAM,CAAC,IAAP,CAAY,GAAZ,CAAf;AACA,QAAM,IAAI,GAAG,KAAb;AACA,QAAM,IAAI,GAAG,GAAb,CAHoE,CAIpE;;AACA,MAAI,KAAK,GAAG,CAAC,EAAE,IAAI,GAAG,IAAT,CAAb;;AAEA,WAAS,MAAT,CAAgB,GAAhB,EAAiC;AAC/B,QAAI,GAAG,CAAC,MAAJ,KAAe,MAAnB,EAA2B;AACzB,MAAA,KAAK,GAAG,CAAR;AACA,MAAA,MAAM,CAAC,mBAAP,CAA2B,SAA3B,EAAsC,MAAtC,EAA8C,KAA9C;AACD;AACF;;AACD,EAAA,MAAM,CAAC,gBAAP,CAAwB,SAAxB,EAAmC,MAAnC,EAA2C,KAA3C,EAboE,CAepE;AACA;;AACA,WAAS,IAAT,GAAa;AACX,QAAI,KAAK,IAAI,CAAb,EAAgB;AACd;AACD;;AACD,IAAA,MAAM,CAAC,WAAP,CAAmB,IAAnB,EAAyB,GAAzB;AACA,IAAA,UAAU,CAAC,IAAD,EAAO,IAAP,CAAV;AACA,IAAA,KAAK,IAAI,CAAT;AACD;;AACD,EAAA,UAAU,CAAC,IAAD,EAAO,IAAP,CAAV;AACD","sourceRoot":"","sourcesContent":["/**\n * Open editor url in a new window, and pass a message.\n */\nexport default function (window, url, data) {\n    const editor = window.open(url);\n    const wait = 10000;\n    const step = 250;\n    // eslint-disable-next-line no-bitwise\n    let count = ~~(wait / step);\n    function listen(evt) {\n        if (evt.source === editor) {\n            count = 0;\n            window.removeEventListener('message', listen, false);\n        }\n    }\n    window.addEventListener('message', listen, false);\n    // send message\n    // periodically resend until ack received or timeout\n    function send() {\n        if (count <= 0) {\n            return;\n        }\n        editor.postMessage(data, '*');\n        setTimeout(send, step);\n        count -= 1;\n    }\n    setTimeout(send, step);\n}\n//# sourceMappingURL=post.js.map"]},"metadata":{},"sourceType":"module"}