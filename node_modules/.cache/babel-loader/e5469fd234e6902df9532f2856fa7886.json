{"ast":null,"code":"import { Index, Label, Perc, Value, GuideLabelStyle, zero, one, Top, Bottom, Left, Right, Center, Middle } from './constants';\nimport guideMark from './guide-mark';\nimport { lookup } from './guide-util';\nimport { TextMark } from '../marks/marktypes';\nimport { LegendLabelRole } from '../marks/roles';\nimport { addEncoders, encoder } from '../encode/encode-util';\nimport { value } from '../../util';\nconst alignExpr = `datum.${Perc}<=0?\"${Left}\":datum.${Perc}>=1?\"${Right}\":\"${Center}\"`,\n      baselineExpr = `datum.${Perc}<=0?\"${Bottom}\":datum.${Perc}>=1?\"${Top}\":\"${Middle}\"`;\nexport default function (spec, config, userEncode, dataRef) {\n  var _ = lookup(spec, config),\n      vertical = _.isVertical(),\n      thickness = encoder(_.gradientThickness()),\n      length = _.gradientLength(),\n      overlap = _('labelOverlap'),\n      separation = _('labelSeparation'),\n      encode,\n      enter,\n      update,\n      u,\n      v,\n      adjust = '';\n\n  encode = {\n    enter: enter = {\n      opacity: zero\n    },\n    update: update = {\n      opacity: one,\n      text: {\n        field: Label\n      }\n    },\n    exit: {\n      opacity: zero\n    }\n  };\n  addEncoders(encode, {\n    fill: _('labelColor'),\n    fillOpacity: _('labelOpacity'),\n    font: _('labelFont'),\n    fontSize: _('labelFontSize'),\n    fontStyle: _('labelFontStyle'),\n    fontWeight: _('labelFontWeight'),\n    limit: value(spec.labelLimit, config.gradientLabelLimit)\n  });\n\n  if (vertical) {\n    enter.align = {\n      value: 'left'\n    };\n    enter.baseline = update.baseline = {\n      signal: baselineExpr\n    };\n    u = 'y';\n    v = 'x';\n    adjust = '1-';\n  } else {\n    enter.align = update.align = {\n      signal: alignExpr\n    };\n    enter.baseline = {\n      value: 'top'\n    };\n    u = 'x';\n    v = 'y';\n  }\n\n  enter[u] = update[u] = {\n    signal: adjust + 'datum.' + Perc,\n    mult: length\n  };\n  enter[v] = update[v] = thickness;\n  thickness.offset = value(spec.labelOffset, config.gradientLabelOffset) || 0;\n  spec = guideMark(TextMark, LegendLabelRole, GuideLabelStyle, Value, dataRef, encode, userEncode);\n\n  if (overlap) {\n    spec.overlap = {\n      separation: separation,\n      method: overlap,\n      order: 'datum.' + Index\n    };\n  }\n\n  return spec;\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-parser/src/parsers/guides/legend-gradient-labels.js"],"names":["Index","Label","Perc","Value","GuideLabelStyle","zero","one","Top","Bottom","Left","Right","Center","Middle","guideMark","lookup","TextMark","LegendLabelRole","addEncoders","encoder","value","alignExpr","baselineExpr","spec","config","userEncode","dataRef","_","vertical","isVertical","thickness","gradientThickness","length","gradientLength","overlap","separation","encode","enter","update","u","v","adjust","opacity","text","field","exit","fill","fillOpacity","font","fontSize","fontStyle","fontWeight","limit","labelLimit","gradientLabelLimit","align","baseline","signal","mult","offset","labelOffset","gradientLabelOffset","method","order"],"mappings":"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","sourcesContent":["import {\n  Index, Label, Perc, Value, GuideLabelStyle, zero, one,\n  Top, Bottom, Left, Right, Center, Middle\n} from './constants';\nimport guideMark from './guide-mark';\nimport {lookup} from './guide-util';\nimport {TextMark} from '../marks/marktypes';\nimport {LegendLabelRole} from '../marks/roles';\nimport {addEncoders, encoder} from '../encode/encode-util';\nimport {value} from '../../util';\n\nconst alignExpr = `datum.${Perc}<=0?\"${Left}\":datum.${Perc}>=1?\"${Right}\":\"${Center}\"`,\n      baselineExpr = `datum.${Perc}<=0?\"${Bottom}\":datum.${Perc}>=1?\"${Top}\":\"${Middle}\"`;\n\nexport default function(spec, config, userEncode, dataRef) {\n  var _ = lookup(spec, config),\n      vertical = _.isVertical(),\n      thickness = encoder(_.gradientThickness()),\n      length = _.gradientLength(),\n      overlap = _('labelOverlap'),\n      separation = _('labelSeparation'),\n      encode, enter, update, u, v, adjust = '';\n\n  encode = {\n    enter: enter = {\n      opacity: zero\n    },\n    update: update = {\n      opacity: one,\n      text: {field: Label}\n    },\n    exit: {\n      opacity: zero\n    }\n  };\n\n  addEncoders(encode, {\n    fill:        _('labelColor'),\n    fillOpacity: _('labelOpacity'),\n    font:        _('labelFont'),\n    fontSize:    _('labelFontSize'),\n    fontStyle:   _('labelFontStyle'),\n    fontWeight:  _('labelFontWeight'),\n    limit:       value(spec.labelLimit, config.gradientLabelLimit)\n  });\n\n  if (vertical) {\n    enter.align = {value: 'left'};\n    enter.baseline = update.baseline = {signal: baselineExpr};\n    u = 'y'; v = 'x'; adjust = '1-';\n  } else {\n    enter.align = update.align = {signal: alignExpr};\n    enter.baseline = {value: 'top'};\n    u = 'x'; v = 'y';\n  }\n\n  enter[u] = update[u] = {signal: adjust + 'datum.' + Perc, mult: length};\n\n  enter[v] = update[v] = thickness;\n  thickness.offset = value(spec.labelOffset, config.gradientLabelOffset) || 0;\n\n  spec = guideMark(TextMark, LegendLabelRole, GuideLabelStyle, Value, dataRef, encode, userEncode);\n  if (overlap) {\n    spec.overlap = {\n      separation: separation,\n      method: overlap,\n      order: 'datum.' + Index\n    };\n  }\n  return spec;\n}\n"]},"metadata":{},"sourceType":"module"}