{"ast":null,"code":"import hasOwnProperty from './hasOwnProperty';\nvar NULL = {};\nexport default function (input) {\n  var obj = {},\n      map,\n      test;\n\n  function has(key) {\n    return hasOwnProperty(obj, key) && obj[key] !== NULL;\n  }\n\n  map = {\n    size: 0,\n    empty: 0,\n    object: obj,\n    has: has,\n    get: function (key) {\n      return has(key) ? obj[key] : undefined;\n    },\n    set: function (key, value) {\n      if (!has(key)) {\n        ++map.size;\n        if (obj[key] === NULL) --map.empty;\n      }\n\n      obj[key] = value;\n      return this;\n    },\n    delete: function (key) {\n      if (has(key)) {\n        --map.size;\n        ++map.empty;\n        obj[key] = NULL;\n      }\n\n      return this;\n    },\n    clear: function () {\n      map.size = map.empty = 0;\n      map.object = obj = {};\n    },\n    test: function (_) {\n      if (arguments.length) {\n        test = _;\n        return map;\n      } else {\n        return test;\n      }\n    },\n    clean: function () {\n      var next = {},\n          size = 0,\n          key,\n          value;\n\n      for (key in obj) {\n        value = obj[key];\n\n        if (value !== NULL && (!test || !test(value))) {\n          next[key] = value;\n          ++size;\n        }\n      }\n\n      map.size = size;\n      map.empty = 0;\n      map.object = obj = next;\n    }\n  };\n  if (input) Object.keys(input).forEach(function (key) {\n    map.set(key, input[key]);\n  });\n  return map;\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-lite/node_modules/vega-util/src/fastmap.js"],"names":["hasOwnProperty","NULL","input","obj","map","test","has","key","size","empty","object","get","undefined","set","value","delete","clear","_","arguments","length","clean","next","Object","keys","forEach"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,kBAA3B;AAEA,IAAIC,IAAI,GAAG,EAAX;AAEA,eAAe,UAASC,KAAT,EAAgB;AAC7B,MAAIC,GAAG,GAAG,EAAV;AAAA,MACIC,GADJ;AAAA,MAEIC,IAFJ;;AAIA,WAASC,GAAT,CAAaC,GAAb,EAAkB;AAChB,WAAOP,cAAc,CAACG,GAAD,EAAMI,GAAN,CAAd,IAA4BJ,GAAG,CAACI,GAAD,CAAH,KAAaN,IAAhD;AACD;;AAEDG,EAAAA,GAAG,GAAG;AACJI,IAAAA,IAAI,EAAE,CADF;AAEJC,IAAAA,KAAK,EAAE,CAFH;AAGJC,IAAAA,MAAM,EAAEP,GAHJ;AAIJG,IAAAA,GAAG,EAAEA,GAJD;AAKJK,IAAAA,GAAG,EAAE,UAASJ,GAAT,EAAc;AACjB,aAAOD,GAAG,CAACC,GAAD,CAAH,GAAWJ,GAAG,CAACI,GAAD,CAAd,GAAsBK,SAA7B;AACD,KAPG;AAQJC,IAAAA,GAAG,EAAE,UAASN,GAAT,EAAcO,KAAd,EAAqB;AACxB,UAAI,CAACR,GAAG,CAACC,GAAD,CAAR,EAAe;AACb,UAAEH,GAAG,CAACI,IAAN;AACA,YAAIL,GAAG,CAACI,GAAD,CAAH,KAAaN,IAAjB,EAAuB,EAAEG,GAAG,CAACK,KAAN;AACxB;;AACDN,MAAAA,GAAG,CAACI,GAAD,CAAH,GAAWO,KAAX;AACA,aAAO,IAAP;AACD,KAfG;AAgBJC,IAAAA,MAAM,EAAE,UAASR,GAAT,EAAc;AACpB,UAAID,GAAG,CAACC,GAAD,CAAP,EAAc;AACZ,UAAEH,GAAG,CAACI,IAAN;AACA,UAAEJ,GAAG,CAACK,KAAN;AACAN,QAAAA,GAAG,CAACI,GAAD,CAAH,GAAWN,IAAX;AACD;;AACD,aAAO,IAAP;AACD,KAvBG;AAwBJe,IAAAA,KAAK,EAAE,YAAW;AAChBZ,MAAAA,GAAG,CAACI,IAAJ,GAAWJ,GAAG,CAACK,KAAJ,GAAY,CAAvB;AACAL,MAAAA,GAAG,CAACM,MAAJ,GAAaP,GAAG,GAAG,EAAnB;AACD,KA3BG;AA4BJE,IAAAA,IAAI,EAAE,UAASY,CAAT,EAAY;AAChB,UAAIC,SAAS,CAACC,MAAd,EAAsB;AACpBd,QAAAA,IAAI,GAAGY,CAAP;AACA,eAAOb,GAAP;AACD,OAHD,MAGO;AACL,eAAOC,IAAP;AACD;AACF,KAnCG;AAoCJe,IAAAA,KAAK,EAAE,YAAW;AAChB,UAAIC,IAAI,GAAG,EAAX;AAAA,UACIb,IAAI,GAAG,CADX;AAAA,UAEID,GAFJ;AAAA,UAESO,KAFT;;AAGA,WAAKP,GAAL,IAAYJ,GAAZ,EAAiB;AACfW,QAAAA,KAAK,GAAGX,GAAG,CAACI,GAAD,CAAX;;AACA,YAAIO,KAAK,KAAKb,IAAV,KAAmB,CAACI,IAAD,IAAS,CAACA,IAAI,CAACS,KAAD,CAAjC,CAAJ,EAA+C;AAC7CO,UAAAA,IAAI,CAACd,GAAD,CAAJ,GAAYO,KAAZ;AACA,YAAEN,IAAF;AACD;AACF;;AACDJ,MAAAA,GAAG,CAACI,IAAJ,GAAWA,IAAX;AACAJ,MAAAA,GAAG,CAACK,KAAJ,GAAY,CAAZ;AACAL,MAAAA,GAAG,CAACM,MAAJ,GAAcP,GAAG,GAAGkB,IAApB;AACD;AAlDG,GAAN;AAqDA,MAAInB,KAAJ,EAAWoB,MAAM,CAACC,IAAP,CAAYrB,KAAZ,EAAmBsB,OAAnB,CAA2B,UAASjB,GAAT,EAAc;AAClDH,IAAAA,GAAG,CAACS,GAAJ,CAAQN,GAAR,EAAaL,KAAK,CAACK,GAAD,CAAlB;AACD,GAFU;AAIX,SAAOH,GAAP;AACD","sourcesContent":["import hasOwnProperty from './hasOwnProperty';\n\nvar NULL = {};\n\nexport default function(input) {\n  var obj = {},\n      map,\n      test;\n\n  function has(key) {\n    return hasOwnProperty(obj, key) && obj[key] !== NULL;\n  }\n\n  map = {\n    size: 0,\n    empty: 0,\n    object: obj,\n    has: has,\n    get: function(key) {\n      return has(key) ? obj[key] : undefined;\n    },\n    set: function(key, value) {\n      if (!has(key)) {\n        ++map.size;\n        if (obj[key] === NULL) --map.empty;\n      }\n      obj[key] = value;\n      return this;\n    },\n    delete: function(key) {\n      if (has(key)) {\n        --map.size;\n        ++map.empty;\n        obj[key] = NULL;\n      }\n      return this;\n    },\n    clear: function() {\n      map.size = map.empty = 0;\n      map.object = obj = {};\n    },\n    test: function(_) {\n      if (arguments.length) {\n        test = _;\n        return map;\n      } else {\n        return test;\n      }\n    },\n    clean: function() {\n      var next = {},\n          size = 0,\n          key, value;\n      for (key in obj) {\n        value = obj[key];\n        if (value !== NULL && (!test || !test(value))) {\n          next[key] = value;\n          ++size;\n        }\n      }\n      map.size = size;\n      map.empty = 0;\n      map.object = (obj = next);\n    }\n  };\n\n  if (input) Object.keys(input).forEach(function(key) {\n    map.set(key, input[key]);\n  });\n\n  return map;\n}\n"]},"metadata":{},"sourceType":"module"}