{"ast":null,"code":"import { error, stringValue } from 'vega-util';\nvar OUTER = 'outer',\n    OUTER_INVALID = ['value', 'update', 'init', 'react', 'bind'];\n\nfunction outerError(prefix, name) {\n  error(prefix + ' for \"outer\" push: ' + stringValue(name));\n}\n\nexport default function (signal, scope) {\n  var name = signal.name;\n\n  if (signal.push === OUTER) {\n    // signal must already be defined, raise error if not\n    if (!scope.signals[name]) outerError('No prior signal definition', name); // signal push must not use properties reserved for standard definition\n\n    OUTER_INVALID.forEach(function (prop) {\n      if (signal[prop] !== undefined) outerError('Invalid property ', prop);\n    });\n  } else {\n    // define a new signal in the current scope\n    var op = scope.addSignal(name, signal.value);\n    if (signal.react === false) op.react = false;\n    if (signal.bind) scope.addBinding(name, signal.bind);\n  }\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-parser/src/parsers/signal.js"],"names":["error","stringValue","OUTER","OUTER_INVALID","outerError","prefix","name","signal","scope","push","signals","forEach","prop","undefined","op","addSignal","value","react","bind","addBinding"],"mappings":"AAAA,SAAQA,KAAR,EAAeC,WAAf,QAAiC,WAAjC;AAEA,IAAIC,KAAK,GAAG,OAAZ;AAAA,IACIC,aAAa,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,MAApB,EAA4B,OAA5B,EAAqC,MAArC,CADpB;;AAGA,SAASC,UAAT,CAAoBC,MAApB,EAA4BC,IAA5B,EAAkC;AAChCN,EAAAA,KAAK,CAACK,MAAM,GAAG,qBAAT,GAAiCJ,WAAW,CAACK,IAAD,CAA7C,CAAL;AACD;;AAED,eAAe,UAASC,MAAT,EAAiBC,KAAjB,EAAwB;AACrC,MAAIF,IAAI,GAAGC,MAAM,CAACD,IAAlB;;AAEA,MAAIC,MAAM,CAACE,IAAP,KAAgBP,KAApB,EAA2B;AACzB;AACA,QAAI,CAACM,KAAK,CAACE,OAAN,CAAcJ,IAAd,CAAL,EAA0BF,UAAU,CAAC,4BAAD,EAA+BE,IAA/B,CAAV,CAFD,CAGzB;;AACAH,IAAAA,aAAa,CAACQ,OAAd,CAAsB,UAASC,IAAT,EAAe;AACnC,UAAIL,MAAM,CAACK,IAAD,CAAN,KAAiBC,SAArB,EAAgCT,UAAU,CAAC,mBAAD,EAAsBQ,IAAtB,CAAV;AACjC,KAFD;AAGD,GAPD,MAOO;AACL;AACA,QAAIE,EAAE,GAAGN,KAAK,CAACO,SAAN,CAAgBT,IAAhB,EAAsBC,MAAM,CAACS,KAA7B,CAAT;AACA,QAAIT,MAAM,CAACU,KAAP,KAAiB,KAArB,EAA4BH,EAAE,CAACG,KAAH,GAAW,KAAX;AAC5B,QAAIV,MAAM,CAACW,IAAX,EAAiBV,KAAK,CAACW,UAAN,CAAiBb,IAAjB,EAAuBC,MAAM,CAACW,IAA9B;AAClB;AACF","sourcesContent":["import {error, stringValue} from 'vega-util';\n\nvar OUTER = 'outer',\n    OUTER_INVALID = ['value', 'update', 'init', 'react', 'bind'];\n\nfunction outerError(prefix, name) {\n  error(prefix + ' for \"outer\" push: ' + stringValue(name));\n}\n\nexport default function(signal, scope) {\n  var name = signal.name;\n\n  if (signal.push === OUTER) {\n    // signal must already be defined, raise error if not\n    if (!scope.signals[name]) outerError('No prior signal definition', name);\n    // signal push must not use properties reserved for standard definition\n    OUTER_INVALID.forEach(function(prop) {\n      if (signal[prop] !== undefined) outerError('Invalid property ', prop);\n    });\n  } else {\n    // define a new signal in the current scope\n    var op = scope.addSignal(name, signal.value);\n    if (signal.react === false) op.react = false;\n    if (signal.bind) scope.addBinding(name, signal.bind);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}