{"ast":null,"code":"import * as log from '../log';\nimport { isAnyConcatSpec, isFacetSpec, isLayerSpec, isRepeatSpec, isUnitSpec } from '../spec';\nimport { ConcatModel } from './concat';\nimport { FacetModel } from './facet';\nimport { LayerModel } from './layer';\nimport { RepeatModel } from './repeat';\nimport { UnitModel } from './unit';\nexport function buildModel(spec, parent, parentGivenName, unitSize, repeater, config) {\n  if (isFacetSpec(spec)) {\n    return new FacetModel(spec, parent, parentGivenName, repeater, config);\n  } else if (isLayerSpec(spec)) {\n    return new LayerModel(spec, parent, parentGivenName, unitSize, repeater, config);\n  } else if (isUnitSpec(spec)) {\n    return new UnitModel(spec, parent, parentGivenName, unitSize, repeater, config);\n  } else if (isRepeatSpec(spec)) {\n    return new RepeatModel(spec, parent, parentGivenName, repeater, config);\n  } else if (isAnyConcatSpec(spec)) {\n    return new ConcatModel(spec, parent, parentGivenName, repeater, config);\n  }\n\n  throw new Error(log.message.invalidSpec(spec));\n}","map":{"version":3,"sources":["../../../src/compile/buildmodel.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,GAAZ,MAAqB,QAArB;AACA,SACE,eADF,EAEE,WAFF,EAGE,WAHF,EAIE,YAJF,EAKE,UALF,QAQO,SARP;AASA,SAAQ,WAAR,QAA0B,UAA1B;AACA,SAAQ,UAAR,QAAyB,SAAzB;AACA,SAAQ,UAAR,QAAyB,SAAzB;AAEA,SAAQ,WAAR,QAA0B,UAA1B;AAEA,SAAQ,SAAR,QAAwB,QAAxB;AAEA,OAAM,SAAU,UAAV,CACJ,IADI,EAEJ,MAFI,EAGJ,eAHI,EAIJ,QAJI,EAKJ,QALI,EAMJ,MANI,EAMU;AAEd,MAAI,WAAW,CAAC,IAAD,CAAf,EAAuB;AACrB,WAAO,IAAI,UAAJ,CAAe,IAAf,EAAqB,MAArB,EAA6B,eAA7B,EAA8C,QAA9C,EAAwD,MAAxD,CAAP;AACD,GAFD,MAEO,IAAI,WAAW,CAAC,IAAD,CAAf,EAAuB;AAC5B,WAAO,IAAI,UAAJ,CAAe,IAAf,EAAqB,MAArB,EAA6B,eAA7B,EAA8C,QAA9C,EAAwD,QAAxD,EAAkE,MAAlE,CAAP;AACD,GAFM,MAEA,IAAI,UAAU,CAAC,IAAD,CAAd,EAAsB;AAC3B,WAAO,IAAI,SAAJ,CAAc,IAAd,EAAoB,MAApB,EAA4B,eAA5B,EAA6C,QAA7C,EAAuD,QAAvD,EAAiE,MAAjE,CAAP;AACD,GAFM,MAEA,IAAI,YAAY,CAAC,IAAD,CAAhB,EAAwB;AAC7B,WAAO,IAAI,WAAJ,CAAgB,IAAhB,EAAsB,MAAtB,EAA8B,eAA9B,EAA+C,QAA/C,EAAyD,MAAzD,CAAP;AACD,GAFM,MAEA,IAAI,eAAe,CAAC,IAAD,CAAnB,EAA2B;AAChC,WAAO,IAAI,WAAJ,CAAgB,IAAhB,EAAsB,MAAtB,EAA8B,eAA9B,EAA+C,QAA/C,EAAyD,MAAzD,CAAP;AACD;;AACD,QAAM,IAAI,KAAJ,CAAU,GAAG,CAAC,OAAJ,CAAY,WAAZ,CAAwB,IAAxB,CAAV,CAAN;AACD","sourcesContent":["import {Config} from '../config';\nimport * as log from '../log';\nimport {\n  isAnyConcatSpec,\n  isFacetSpec,\n  isLayerSpec,\n  isRepeatSpec,\n  isUnitSpec,\n  LayoutSizeMixins,\n  NormalizedSpec\n} from '../spec';\nimport {ConcatModel} from './concat';\nimport {FacetModel} from './facet';\nimport {LayerModel} from './layer';\nimport {Model} from './model';\nimport {RepeatModel} from './repeat';\nimport {RepeaterValue} from './repeater';\nimport {UnitModel} from './unit';\n\nexport function buildModel(\n  spec: NormalizedSpec,\n  parent: Model,\n  parentGivenName: string,\n  unitSize: LayoutSizeMixins,\n  repeater: RepeaterValue,\n  config: Config\n): Model {\n  if (isFacetSpec(spec)) {\n    return new FacetModel(spec, parent, parentGivenName, repeater, config);\n  } else if (isLayerSpec(spec)) {\n    return new LayerModel(spec, parent, parentGivenName, unitSize, repeater, config);\n  } else if (isUnitSpec(spec)) {\n    return new UnitModel(spec, parent, parentGivenName, unitSize, repeater, config);\n  } else if (isRepeatSpec(spec)) {\n    return new RepeatModel(spec, parent, parentGivenName, repeater, config);\n  } else if (isAnyConcatSpec(spec)) {\n    return new ConcatModel(spec, parent, parentGivenName, repeater, config);\n  }\n  throw new Error(log.message.invalidSpec(spec));\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}