{"ast":null,"code":"import { zero, one } from './constants';\nimport guideMark from './guide-mark';\nimport { lookup } from './guide-util';\nimport { RectMark } from '../marks/marktypes';\nimport { LegendGradientRole } from '../marks/roles';\nimport { addEncoders, encoder } from '../encode/encode-util';\nimport { extend } from 'vega-util';\nexport default function (spec, scale, config, userEncode) {\n  var _ = lookup(spec, config),\n      vertical = _.isVertical(),\n      thickness = _.gradientThickness(),\n      length = _.gradientLength(),\n      encode,\n      enter,\n      start,\n      stop,\n      width,\n      height;\n\n  if (vertical) {\n    start = [0, 1];\n    stop = [0, 0];\n    width = thickness;\n    height = length;\n  } else {\n    start = [0, 0];\n    stop = [1, 0];\n    width = length;\n    height = thickness;\n  }\n\n  encode = {\n    enter: enter = {\n      opacity: zero,\n      x: zero,\n      y: zero,\n      width: encoder(width),\n      height: encoder(height)\n    },\n    update: extend({}, enter, {\n      opacity: one,\n      fill: {\n        gradient: scale,\n        start: start,\n        stop: stop\n      }\n    }),\n    exit: {\n      opacity: zero\n    }\n  };\n  addEncoders(encode, {\n    stroke: _('gradientStrokeColor'),\n    strokeWidth: _('gradientStrokeWidth')\n  }, {\n    // update\n    opacity: _('gradientOpacity')\n  });\n  return guideMark(RectMark, LegendGradientRole, null, undefined, undefined, encode, userEncode);\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-parser/src/parsers/guides/legend-gradient.js"],"names":["zero","one","guideMark","lookup","RectMark","LegendGradientRole","addEncoders","encoder","extend","spec","scale","config","userEncode","_","vertical","isVertical","thickness","gradientThickness","length","gradientLength","encode","enter","start","stop","width","height","opacity","x","y","update","fill","gradient","exit","stroke","strokeWidth","undefined"],"mappings":"AAAA,SAAQA,IAAR,EAAcC,GAAd,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAAQC,MAAR,QAAqB,cAArB;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,SAAQC,kBAAR,QAAiC,gBAAjC;AACA,SAAQC,WAAR,EAAqBC,OAArB,QAAmC,uBAAnC;AACA,SAAQC,MAAR,QAAqB,WAArB;AAEA,eAAe,UAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,UAA9B,EAA0C;AACvD,MAAIC,CAAC,GAAGV,MAAM,CAACM,IAAD,EAAOE,MAAP,CAAd;AAAA,MACIG,QAAQ,GAAGD,CAAC,CAACE,UAAF,EADf;AAAA,MAEIC,SAAS,GAAGH,CAAC,CAACI,iBAAF,EAFhB;AAAA,MAGIC,MAAM,GAAGL,CAAC,CAACM,cAAF,EAHb;AAAA,MAIIC,MAJJ;AAAA,MAIYC,KAJZ;AAAA,MAImBC,KAJnB;AAAA,MAI0BC,IAJ1B;AAAA,MAIgCC,KAJhC;AAAA,MAIuCC,MAJvC;;AAMA,MAAIX,QAAJ,EAAc;AACZQ,IAAAA,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAR;AACAC,IAAAA,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAP;AACAC,IAAAA,KAAK,GAAGR,SAAR;AACAS,IAAAA,MAAM,GAAGP,MAAT;AACD,GALD,MAKO;AACLI,IAAAA,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAR;AACAC,IAAAA,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAP;AACAC,IAAAA,KAAK,GAAGN,MAAR;AACAO,IAAAA,MAAM,GAAGT,SAAT;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACPC,IAAAA,KAAK,EAAEA,KAAK,GAAG;AACbK,MAAAA,OAAO,EAAE1B,IADI;AAEb2B,MAAAA,CAAC,EAAE3B,IAFU;AAGb4B,MAAAA,CAAC,EAAE5B,IAHU;AAIbwB,MAAAA,KAAK,EAAEjB,OAAO,CAACiB,KAAD,CAJD;AAKbC,MAAAA,MAAM,EAAElB,OAAO,CAACkB,MAAD;AALF,KADR;AAQPI,IAAAA,MAAM,EAAErB,MAAM,CAAC,EAAD,EAAKa,KAAL,EAAY;AACxBK,MAAAA,OAAO,EAAEzB,GADe;AAExB6B,MAAAA,IAAI,EAAE;AAACC,QAAAA,QAAQ,EAAErB,KAAX;AAAkBY,QAAAA,KAAK,EAAEA,KAAzB;AAAgCC,QAAAA,IAAI,EAAEA;AAAtC;AAFkB,KAAZ,CARP;AAYPS,IAAAA,IAAI,EAAE;AACJN,MAAAA,OAAO,EAAE1B;AADL;AAZC,GAAT;AAiBAM,EAAAA,WAAW,CAACc,MAAD,EAAS;AAClBa,IAAAA,MAAM,EAAOpB,CAAC,CAAC,qBAAD,CADI;AAElBqB,IAAAA,WAAW,EAAErB,CAAC,CAAC,qBAAD;AAFI,GAAT,EAGR;AAAE;AACHa,IAAAA,OAAO,EAAMb,CAAC,CAAC,iBAAD;AADb,GAHQ,CAAX;AAOA,SAAOX,SAAS,CAACE,QAAD,EAAWC,kBAAX,EAA+B,IAA/B,EAAqC8B,SAArC,EAAgDA,SAAhD,EAA2Df,MAA3D,EAAmER,UAAnE,CAAhB;AACD","sourcesContent":["import {zero, one} from './constants';\nimport guideMark from './guide-mark';\nimport {lookup} from './guide-util';\nimport {RectMark} from '../marks/marktypes';\nimport {LegendGradientRole} from '../marks/roles';\nimport {addEncoders, encoder} from '../encode/encode-util';\nimport {extend} from 'vega-util';\n\nexport default function(spec, scale, config, userEncode) {\n  var _ = lookup(spec, config),\n      vertical = _.isVertical(),\n      thickness = _.gradientThickness(),\n      length = _.gradientLength(),\n      encode, enter, start, stop, width, height;\n\n  if (vertical) {\n    start = [0, 1];\n    stop = [0, 0];\n    width = thickness;\n    height = length;\n  } else {\n    start = [0, 0];\n    stop = [1, 0];\n    width = length;\n    height = thickness;\n  }\n\n  encode = {\n    enter: enter = {\n      opacity: zero,\n      x: zero,\n      y: zero,\n      width: encoder(width),\n      height: encoder(height)\n    },\n    update: extend({}, enter, {\n      opacity: one,\n      fill: {gradient: scale, start: start, stop: stop}\n    }),\n    exit: {\n      opacity: zero\n    }\n  };\n\n  addEncoders(encode, {\n    stroke:      _('gradientStrokeColor'),\n    strokeWidth: _('gradientStrokeWidth')\n  }, { // update\n    opacity:     _('gradientOpacity')\n  });\n\n  return guideMark(RectMark, LegendGradientRole, null, undefined, undefined, encode, userEncode);\n}\n"]},"metadata":{},"sourceType":"module"}