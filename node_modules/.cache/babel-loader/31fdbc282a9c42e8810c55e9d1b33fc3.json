{"ast":null,"code":"import { error } from 'vega-util';\n\nfunction noop() {}\n\nconst cases = [[], [[[1.0, 1.5], [0.5, 1.0]]], [[[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [0.5, 1.0]]], [[[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 0.5], [1.0, 1.5]]], [[[1.0, 0.5], [0.5, 1.0]]], [[[0.5, 1.0], [1.0, 0.5]]], [[[1.0, 1.5], [1.0, 0.5]]], [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [1.0, 0.5]]], [[[0.5, 1.0], [1.5, 1.0]]], [[[1.0, 1.5], [1.5, 1.0]]], [[[0.5, 1.0], [1.0, 1.5]]], []]; // Implementation adapted from d3/d3-contour. Thanks!\n\nexport default function () {\n  var dx = 1,\n      dy = 1,\n      smooth = smoothLinear;\n\n  function contours(values, tz) {\n    return tz.map(value => contour(values, value));\n  } // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n\n\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n    isorings(values, value, function (ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);else holes.push(ring);\n    });\n    holes.forEach(function (hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n    return {\n      type: 'MultiPolygon',\n      value: value,\n      coordinates: polygons\n    };\n  } // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n\n\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array(),\n        fragmentByEnd = new Array(),\n        x,\n        y,\n        t0,\n        t1,\n        t2,\n        t3; // Special case for the first row (y = -1, t2 = t3 = 0).\n\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n\n    cases[t1 << 0].forEach(stitch); // General case for the intermediate rows.\n\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n\n      cases[t1 | t2 << 3].forEach(stitch);\n    } // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n\n\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f,\n          g;\n\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {\n              start: f.start,\n              end: g.end,\n              ring: f.ring.concat(g.ring)\n            };\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {\n              start: g.start,\n              end: f.end,\n              ring: g.ring.concat(f.ring)\n            };\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {\n          start: startIndex,\n          end: endIndex,\n          ring: [start, end]\n        };\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function (point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function (_) {\n    if (!arguments.length) return [dx, dy];\n\n    var _0 = Math.ceil(_[0]),\n        _1 = Math.ceil(_[1]);\n\n    if (!(_0 > 0) || !(_1 > 0)) error('invalid size');\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.smooth = function (_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n\nfunction area(ring) {\n  var i = 0,\n      n = ring.length,\n      area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n\n  return area;\n}\n\nfunction contains(ring, hole) {\n  var i = -1,\n      n = hole.length,\n      c;\n\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0],\n      y = point[1],\n      contains = -1;\n\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i],\n        xi = pi[0],\n        yi = pi[1],\n        pj = ring[j],\n        xj = pj[0],\n        yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) contains = -contains;\n  }\n\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i;\n  return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/node_modules/vega-geo/src/util/contours.js"],"names":["error","noop","cases","dx","dy","smooth","smoothLinear","contours","values","tz","map","value","contour","polygons","holes","isorings","ring","area","push","forEach","hole","i","n","length","polygon","contains","type","coordinates","callback","fragmentByStart","Array","fragmentByEnd","x","y","t0","t1","t2","t3","stitch","line","start","end","startIndex","index","endIndex","f","g","concat","unshift","point","xt","yt","v0","v1","size","_","arguments","_0","Math","ceil","_1","c","ringContains","j","pi","xi","yi","pj","xj","yj","segmentContains","a","b","collinear","within","p","q","r"],"mappings":"AAAA,SAAQA,KAAR,QAAoB,WAApB;;AAEA,SAASC,IAAT,GAAgB,CAAE;;AAElB,MAAMC,KAAK,GAAG,CACZ,EADY,EAEZ,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,CAFY,EAGZ,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,CAHY,EAIZ,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,CAJY,EAKZ,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,CALY,EAMZ,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,EAA2B,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAA3B,CANY,EAOZ,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,CAPY,EAQZ,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,CARY,EASZ,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,CATY,EAUZ,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,CAVY,EAWZ,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,EAA2B,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAA3B,CAXY,EAYZ,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,CAZY,EAaZ,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,CAbY,EAcZ,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,CAdY,EAeZ,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,CAfY,EAgBZ,EAhBY,CAAd,C,CAmBA;;AACA,eAAe,YAAW;AACxB,MAAIC,EAAE,GAAG,CAAT;AAAA,MACIC,EAAE,GAAG,CADT;AAAA,MAEIC,MAAM,GAAGC,YAFb;;AAIA,WAASC,QAAT,CAAkBC,MAAlB,EAA0BC,EAA1B,EAA8B;AAC5B,WAAOA,EAAE,CAACC,GAAH,CAAOC,KAAK,IAAIC,OAAO,CAACJ,MAAD,EAASG,KAAT,CAAvB,CAAP;AACD,GAPuB,CASxB;AACA;;;AACA,WAASC,OAAT,CAAiBJ,MAAjB,EAAyBG,KAAzB,EAAgC;AAC9B,QAAIE,QAAQ,GAAG,EAAf;AAAA,QACIC,KAAK,GAAG,EADZ;AAGAC,IAAAA,QAAQ,CAACP,MAAD,EAASG,KAAT,EAAgB,UAASK,IAAT,EAAe;AACrCX,MAAAA,MAAM,CAACW,IAAD,EAAOR,MAAP,EAAeG,KAAf,CAAN;AACA,UAAIM,IAAI,CAACD,IAAD,CAAJ,GAAa,CAAjB,EAAoBH,QAAQ,CAACK,IAAT,CAAc,CAACF,IAAD,CAAd,EAApB,KACKF,KAAK,CAACI,IAAN,CAAWF,IAAX;AACN,KAJO,CAAR;AAMAF,IAAAA,KAAK,CAACK,OAAN,CAAc,UAASC,IAAT,EAAe;AAC3B,WAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGT,QAAQ,CAACU,MAAxB,EAAgCC,OAArC,EAA8CH,CAAC,GAAGC,CAAlD,EAAqD,EAAED,CAAvD,EAA0D;AACxD,YAAII,QAAQ,CAAC,CAACD,OAAO,GAAGX,QAAQ,CAACQ,CAAD,CAAnB,EAAwB,CAAxB,CAAD,EAA6BD,IAA7B,CAAR,KAA+C,CAAC,CAApD,EAAuD;AACrDI,UAAAA,OAAO,CAACN,IAAR,CAAaE,IAAb;AACA;AACD;AACF;AACF,KAPD;AASA,WAAO;AACLM,MAAAA,IAAI,EAAE,cADD;AAELf,MAAAA,KAAK,EAAEA,KAFF;AAGLgB,MAAAA,WAAW,EAAEd;AAHR,KAAP;AAKD,GAnCuB,CAqCxB;AACA;;;AACA,WAASE,QAAT,CAAkBP,MAAlB,EAA0BG,KAA1B,EAAiCiB,QAAjC,EAA2C;AACzC,QAAIC,eAAe,GAAG,IAAIC,KAAJ,EAAtB;AAAA,QACIC,aAAa,GAAG,IAAID,KAAJ,EADpB;AAAA,QAEIE,CAFJ;AAAA,QAEOC,CAFP;AAAA,QAEUC,EAFV;AAAA,QAEcC,EAFd;AAAA,QAEkBC,EAFlB;AAAA,QAEsBC,EAFtB,CADyC,CAKzC;;AACAL,IAAAA,CAAC,GAAGC,CAAC,GAAG,CAAC,CAAT;AACAE,IAAAA,EAAE,GAAG3B,MAAM,CAAC,CAAD,CAAN,IAAaG,KAAlB;AACAT,IAAAA,KAAK,CAACiC,EAAE,IAAI,CAAP,CAAL,CAAehB,OAAf,CAAuBmB,MAAvB;;AACA,WAAO,EAAEN,CAAF,GAAM7B,EAAE,GAAG,CAAlB,EAAqB;AACnB+B,MAAAA,EAAE,GAAGC,EAAL,EAASA,EAAE,GAAG3B,MAAM,CAACwB,CAAC,GAAG,CAAL,CAAN,IAAiBrB,KAA/B;AACAT,MAAAA,KAAK,CAACgC,EAAE,GAAGC,EAAE,IAAI,CAAZ,CAAL,CAAoBhB,OAApB,CAA4BmB,MAA5B;AACD;;AACDpC,IAAAA,KAAK,CAACiC,EAAE,IAAI,CAAP,CAAL,CAAehB,OAAf,CAAuBmB,MAAvB,EAbyC,CAezC;;AACA,WAAO,EAAEL,CAAF,GAAM7B,EAAE,GAAG,CAAlB,EAAqB;AACnB4B,MAAAA,CAAC,GAAG,CAAC,CAAL;AACAG,MAAAA,EAAE,GAAG3B,MAAM,CAACyB,CAAC,GAAG9B,EAAJ,GAASA,EAAV,CAAN,IAAuBQ,KAA5B;AACAyB,MAAAA,EAAE,GAAG5B,MAAM,CAACyB,CAAC,GAAG9B,EAAL,CAAN,IAAkBQ,KAAvB;AACAT,MAAAA,KAAK,CAACiC,EAAE,IAAI,CAAN,GAAUC,EAAE,IAAI,CAAjB,CAAL,CAAyBjB,OAAzB,CAAiCmB,MAAjC;;AACA,aAAO,EAAEN,CAAF,GAAM7B,EAAE,GAAG,CAAlB,EAAqB;AACnB+B,QAAAA,EAAE,GAAGC,EAAL,EAASA,EAAE,GAAG3B,MAAM,CAACyB,CAAC,GAAG9B,EAAJ,GAASA,EAAT,GAAc6B,CAAd,GAAkB,CAAnB,CAAN,IAA+BrB,KAA7C;AACA0B,QAAAA,EAAE,GAAGD,EAAL,EAASA,EAAE,GAAG5B,MAAM,CAACyB,CAAC,GAAG9B,EAAJ,GAAS6B,CAAT,GAAa,CAAd,CAAN,IAA0BrB,KAAxC;AACAT,QAAAA,KAAK,CAACgC,EAAE,GAAGC,EAAE,IAAI,CAAX,GAAeC,EAAE,IAAI,CAArB,GAAyBC,EAAE,IAAI,CAAhC,CAAL,CAAwClB,OAAxC,CAAgDmB,MAAhD;AACD;;AACDpC,MAAAA,KAAK,CAACiC,EAAE,GAAGC,EAAE,IAAI,CAAZ,CAAL,CAAoBjB,OAApB,CAA4BmB,MAA5B;AACD,KA3BwC,CA6BzC;;;AACAN,IAAAA,CAAC,GAAG,CAAC,CAAL;AACAI,IAAAA,EAAE,GAAG5B,MAAM,CAACyB,CAAC,GAAG9B,EAAL,CAAN,IAAkBQ,KAAvB;AACAT,IAAAA,KAAK,CAACkC,EAAE,IAAI,CAAP,CAAL,CAAejB,OAAf,CAAuBmB,MAAvB;;AACA,WAAO,EAAEN,CAAF,GAAM7B,EAAE,GAAG,CAAlB,EAAqB;AACnBkC,MAAAA,EAAE,GAAGD,EAAL,EAASA,EAAE,GAAG5B,MAAM,CAACyB,CAAC,GAAG9B,EAAJ,GAAS6B,CAAT,GAAa,CAAd,CAAN,IAA0BrB,KAAxC;AACAT,MAAAA,KAAK,CAACkC,EAAE,IAAI,CAAN,GAAUC,EAAE,IAAI,CAAjB,CAAL,CAAyBlB,OAAzB,CAAiCmB,MAAjC;AACD;;AACDpC,IAAAA,KAAK,CAACkC,EAAE,IAAI,CAAP,CAAL,CAAejB,OAAf,CAAuBmB,MAAvB;;AAEA,aAASA,MAAT,CAAgBC,IAAhB,EAAsB;AACpB,UAAIC,KAAK,GAAG,CAACD,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,IAAaP,CAAd,EAAiBO,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,IAAaN,CAA9B,CAAZ;AAAA,UACIQ,GAAG,GAAG,CAACF,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,IAAaP,CAAd,EAAiBO,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,IAAaN,CAA9B,CADV;AAAA,UAEIS,UAAU,GAAGC,KAAK,CAACH,KAAD,CAFtB;AAAA,UAGII,QAAQ,GAAGD,KAAK,CAACF,GAAD,CAHpB;AAAA,UAIII,CAJJ;AAAA,UAIOC,CAJP;;AAKA,UAAID,CAAC,GAAGd,aAAa,CAACW,UAAD,CAArB,EAAmC;AACjC,YAAII,CAAC,GAAGjB,eAAe,CAACe,QAAD,CAAvB,EAAmC;AACjC,iBAAOb,aAAa,CAACc,CAAC,CAACJ,GAAH,CAApB;AACA,iBAAOZ,eAAe,CAACiB,CAAC,CAACN,KAAH,CAAtB;;AACA,cAAIK,CAAC,KAAKC,CAAV,EAAa;AACXD,YAAAA,CAAC,CAAC7B,IAAF,CAAOE,IAAP,CAAYuB,GAAZ;AACAb,YAAAA,QAAQ,CAACiB,CAAC,CAAC7B,IAAH,CAAR;AACD,WAHD,MAGO;AACLa,YAAAA,eAAe,CAACgB,CAAC,CAACL,KAAH,CAAf,GAA2BT,aAAa,CAACe,CAAC,CAACL,GAAH,CAAb,GAAuB;AAACD,cAAAA,KAAK,EAAEK,CAAC,CAACL,KAAV;AAAiBC,cAAAA,GAAG,EAAEK,CAAC,CAACL,GAAxB;AAA6BzB,cAAAA,IAAI,EAAE6B,CAAC,CAAC7B,IAAF,CAAO+B,MAAP,CAAcD,CAAC,CAAC9B,IAAhB;AAAnC,aAAlD;AACD;AACF,SATD,MASO;AACL,iBAAOe,aAAa,CAACc,CAAC,CAACJ,GAAH,CAApB;AACAI,UAAAA,CAAC,CAAC7B,IAAF,CAAOE,IAAP,CAAYuB,GAAZ;AACAV,UAAAA,aAAa,CAACc,CAAC,CAACJ,GAAF,GAAQG,QAAT,CAAb,GAAkCC,CAAlC;AACD;AACF,OAfD,MAeO,IAAIA,CAAC,GAAGhB,eAAe,CAACe,QAAD,CAAvB,EAAmC;AACxC,YAAIE,CAAC,GAAGf,aAAa,CAACW,UAAD,CAArB,EAAmC;AACjC,iBAAOb,eAAe,CAACgB,CAAC,CAACL,KAAH,CAAtB;AACA,iBAAOT,aAAa,CAACe,CAAC,CAACL,GAAH,CAApB;;AACA,cAAII,CAAC,KAAKC,CAAV,EAAa;AACXD,YAAAA,CAAC,CAAC7B,IAAF,CAAOE,IAAP,CAAYuB,GAAZ;AACAb,YAAAA,QAAQ,CAACiB,CAAC,CAAC7B,IAAH,CAAR;AACD,WAHD,MAGO;AACLa,YAAAA,eAAe,CAACiB,CAAC,CAACN,KAAH,CAAf,GAA2BT,aAAa,CAACc,CAAC,CAACJ,GAAH,CAAb,GAAuB;AAACD,cAAAA,KAAK,EAAEM,CAAC,CAACN,KAAV;AAAiBC,cAAAA,GAAG,EAAEI,CAAC,CAACJ,GAAxB;AAA6BzB,cAAAA,IAAI,EAAE8B,CAAC,CAAC9B,IAAF,CAAO+B,MAAP,CAAcF,CAAC,CAAC7B,IAAhB;AAAnC,aAAlD;AACD;AACF,SATD,MASO;AACL,iBAAOa,eAAe,CAACgB,CAAC,CAACL,KAAH,CAAtB;AACAK,UAAAA,CAAC,CAAC7B,IAAF,CAAOgC,OAAP,CAAeR,KAAf;AACAX,UAAAA,eAAe,CAACgB,CAAC,CAACL,KAAF,GAAUE,UAAX,CAAf,GAAwCG,CAAxC;AACD;AACF,OAfM,MAeA;AACLhB,QAAAA,eAAe,CAACa,UAAD,CAAf,GAA8BX,aAAa,CAACa,QAAD,CAAb,GAA0B;AAACJ,UAAAA,KAAK,EAAEE,UAAR;AAAoBD,UAAAA,GAAG,EAAEG,QAAzB;AAAmC5B,UAAAA,IAAI,EAAE,CAACwB,KAAD,EAAQC,GAAR;AAAzC,SAAxD;AACD;AACF;AACF;;AAED,WAASE,KAAT,CAAeM,KAAf,EAAsB;AACpB,WAAOA,KAAK,CAAC,CAAD,CAAL,GAAW,CAAX,GAAeA,KAAK,CAAC,CAAD,CAAL,IAAY9C,EAAE,GAAG,CAAjB,IAAsB,CAA5C;AACD;;AAED,WAASG,YAAT,CAAsBU,IAAtB,EAA4BR,MAA5B,EAAoCG,KAApC,EAA2C;AACzCK,IAAAA,IAAI,CAACG,OAAL,CAAa,UAAS8B,KAAT,EAAgB;AAC3B,UAAIjB,CAAC,GAAGiB,KAAK,CAAC,CAAD,CAAb;AAAA,UACIhB,CAAC,GAAGgB,KAAK,CAAC,CAAD,CADb;AAAA,UAEIC,EAAE,GAAGlB,CAAC,GAAG,CAFb;AAAA,UAGImB,EAAE,GAAGlB,CAAC,GAAG,CAHb;AAAA,UAIImB,EAJJ;AAAA,UAKIC,EAAE,GAAG7C,MAAM,CAAC2C,EAAE,GAAGhD,EAAL,GAAU+C,EAAX,CALf;;AAMA,UAAIlB,CAAC,GAAG,CAAJ,IAASA,CAAC,GAAG7B,EAAb,IAAmB+C,EAAE,KAAKlB,CAA9B,EAAiC;AAC/BoB,QAAAA,EAAE,GAAG5C,MAAM,CAAC2C,EAAE,GAAGhD,EAAL,GAAU+C,EAAV,GAAe,CAAhB,CAAX;AACAD,QAAAA,KAAK,CAAC,CAAD,CAAL,GAAWjB,CAAC,GAAG,CAACrB,KAAK,GAAGyC,EAAT,KAAgBC,EAAE,GAAGD,EAArB,CAAJ,GAA+B,GAA1C;AACD;;AACD,UAAInB,CAAC,GAAG,CAAJ,IAASA,CAAC,GAAG7B,EAAb,IAAmB+C,EAAE,KAAKlB,CAA9B,EAAiC;AAC/BmB,QAAAA,EAAE,GAAG5C,MAAM,CAAC,CAAC2C,EAAE,GAAG,CAAN,IAAWhD,EAAX,GAAgB+C,EAAjB,CAAX;AACAD,QAAAA,KAAK,CAAC,CAAD,CAAL,GAAWhB,CAAC,GAAG,CAACtB,KAAK,GAAGyC,EAAT,KAAgBC,EAAE,GAAGD,EAArB,CAAJ,GAA+B,GAA1C;AACD;AACF,KAfD;AAgBD;;AAED7C,EAAAA,QAAQ,CAACK,OAAT,GAAmBA,OAAnB;;AAEAL,EAAAA,QAAQ,CAAC+C,IAAT,GAAgB,UAASC,CAAT,EAAY;AAC1B,QAAI,CAACC,SAAS,CAACjC,MAAf,EAAuB,OAAO,CAACpB,EAAD,EAAKC,EAAL,CAAP;;AACvB,QAAIqD,EAAE,GAAGC,IAAI,CAACC,IAAL,CAAUJ,CAAC,CAAC,CAAD,CAAX,CAAT;AAAA,QAA0BK,EAAE,GAAGF,IAAI,CAACC,IAAL,CAAUJ,CAAC,CAAC,CAAD,CAAX,CAA/B;;AACA,QAAI,EAAEE,EAAE,GAAG,CAAP,KAAa,EAAEG,EAAE,GAAG,CAAP,CAAjB,EAA4B5D,KAAK,CAAC,cAAD,CAAL;AAC5B,WAAOG,EAAE,GAAGsD,EAAL,EAASrD,EAAE,GAAGwD,EAAd,EAAkBrD,QAAzB;AACD,GALD;;AAOAA,EAAAA,QAAQ,CAACF,MAAT,GAAkB,UAASkD,CAAT,EAAY;AAC5B,WAAOC,SAAS,CAACjC,MAAV,IAAoBlB,MAAM,GAAGkD,CAAC,GAAGjD,YAAH,GAAkBL,IAA5B,EAAkCM,QAAtD,IAAkEF,MAAM,KAAKC,YAApF;AACD,GAFD;;AAIA,SAAOC,QAAP;AACD;;AAED,SAASU,IAAT,CAAcD,IAAd,EAAoB;AAClB,MAAIK,CAAC,GAAG,CAAR;AAAA,MACIC,CAAC,GAAGN,IAAI,CAACO,MADb;AAAA,MAEIN,IAAI,GAAGD,IAAI,CAACM,CAAC,GAAG,CAAL,CAAJ,CAAY,CAAZ,IAAiBN,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAjB,GAA8BA,IAAI,CAACM,CAAC,GAAG,CAAL,CAAJ,CAAY,CAAZ,IAAiBN,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAF1D;;AAGA,SAAO,EAAEK,CAAF,GAAMC,CAAb,EAAgBL,IAAI,IAAID,IAAI,CAACK,CAAC,GAAG,CAAL,CAAJ,CAAY,CAAZ,IAAiBL,IAAI,CAACK,CAAD,CAAJ,CAAQ,CAAR,CAAjB,GAA8BL,IAAI,CAACK,CAAC,GAAG,CAAL,CAAJ,CAAY,CAAZ,IAAiBL,IAAI,CAACK,CAAD,CAAJ,CAAQ,CAAR,CAAvD;;AAChB,SAAOJ,IAAP;AACD;;AAED,SAASQ,QAAT,CAAkBT,IAAlB,EAAwBI,IAAxB,EAA8B;AAC5B,MAAIC,CAAC,GAAG,CAAC,CAAT;AAAA,MAAYC,CAAC,GAAGF,IAAI,CAACG,MAArB;AAAA,MAA6BsC,CAA7B;;AACA,SAAO,EAAExC,CAAF,GAAMC,CAAb,EAAgB,IAAIuC,CAAC,GAAGC,YAAY,CAAC9C,IAAD,EAAOI,IAAI,CAACC,CAAD,CAAX,CAApB,EAAqC,OAAOwC,CAAP;;AACrD,SAAO,CAAP;AACD;;AAED,SAASC,YAAT,CAAsB9C,IAAtB,EAA4BiC,KAA5B,EAAmC;AACjC,MAAIjB,CAAC,GAAGiB,KAAK,CAAC,CAAD,CAAb;AAAA,MAAkBhB,CAAC,GAAGgB,KAAK,CAAC,CAAD,CAA3B;AAAA,MAAgCxB,QAAQ,GAAG,CAAC,CAA5C;;AACA,OAAK,IAAIJ,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGN,IAAI,CAACO,MAApB,EAA4BwC,CAAC,GAAGzC,CAAC,GAAG,CAAzC,EAA4CD,CAAC,GAAGC,CAAhD,EAAmDyC,CAAC,GAAG1C,CAAC,EAAxD,EAA4D;AAC1D,QAAI2C,EAAE,GAAGhD,IAAI,CAACK,CAAD,CAAb;AAAA,QAAkB4C,EAAE,GAAGD,EAAE,CAAC,CAAD,CAAzB;AAAA,QAA8BE,EAAE,GAAGF,EAAE,CAAC,CAAD,CAArC;AAAA,QAA0CG,EAAE,GAAGnD,IAAI,CAAC+C,CAAD,CAAnD;AAAA,QAAwDK,EAAE,GAAGD,EAAE,CAAC,CAAD,CAA/D;AAAA,QAAoEE,EAAE,GAAGF,EAAE,CAAC,CAAD,CAA3E;AACA,QAAIG,eAAe,CAACN,EAAD,EAAKG,EAAL,EAASlB,KAAT,CAAnB,EAAoC,OAAO,CAAP;AACpC,QAAMiB,EAAE,GAAGjC,CAAN,KAAcoC,EAAE,GAAGpC,CAApB,IAA6BD,CAAC,GAAG,CAACoC,EAAE,GAAGH,EAAN,KAAahC,CAAC,GAAGiC,EAAjB,KAAwBG,EAAE,GAAGH,EAA7B,IAAmCD,EAAxE,EAA8ExC,QAAQ,GAAG,CAACA,QAAZ;AAC/E;;AACD,SAAOA,QAAP;AACD;;AAED,SAAS6C,eAAT,CAAyBC,CAAzB,EAA4BC,CAA5B,EAA+BX,CAA/B,EAAkC;AAChC,MAAIxC,CAAJ;AAAO,SAAOoD,SAAS,CAACF,CAAD,EAAIC,CAAJ,EAAOX,CAAP,CAAT,IAAsBa,MAAM,CAACH,CAAC,CAAClD,CAAC,GAAG,EAAEkD,CAAC,CAAC,CAAD,CAAD,KAASC,CAAC,CAAC,CAAD,CAAZ,CAAL,CAAF,EAA0BX,CAAC,CAACxC,CAAD,CAA3B,EAAgCmD,CAAC,CAACnD,CAAD,CAAjC,CAAnC;AACR;;AAED,SAASoD,SAAT,CAAmBF,CAAnB,EAAsBC,CAAtB,EAAyBX,CAAzB,EAA4B;AAC1B,SAAO,CAACW,CAAC,CAAC,CAAD,CAAD,GAAOD,CAAC,CAAC,CAAD,CAAT,KAAiBV,CAAC,CAAC,CAAD,CAAD,GAAOU,CAAC,CAAC,CAAD,CAAzB,MAAkC,CAACV,CAAC,CAAC,CAAD,CAAD,GAAOU,CAAC,CAAC,CAAD,CAAT,KAAiBC,CAAC,CAAC,CAAD,CAAD,GAAOD,CAAC,CAAC,CAAD,CAAzB,CAAzC;AACD;;AAED,SAASG,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsBC,CAAtB,EAAyB;AACvB,SAAOF,CAAC,IAAIC,CAAL,IAAUA,CAAC,IAAIC,CAAf,IAAoBA,CAAC,IAAID,CAAL,IAAUA,CAAC,IAAID,CAA1C;AACD","sourcesContent":["import {error} from 'vega-util';\n\nfunction noop() {}\n\nconst cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\n// Implementation adapted from d3/d3-contour. Thanks!\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      smooth = smoothLinear;\n\n  function contours(values, tz) {\n    return tz.map(value => contour(values, value));\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, function(ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: 'MultiPolygon',\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 > 0) || !(_1 > 0)) error('invalid size');\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n\nfunction area(ring) {\n  var i = 0,\n      n = ring.length,\n      area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n\nfunction contains(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n"]},"metadata":{},"sourceType":"module"}