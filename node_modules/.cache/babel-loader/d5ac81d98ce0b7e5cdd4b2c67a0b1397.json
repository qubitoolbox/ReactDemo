{"ast":null,"code":"var _jsxFileName = \"C:\\\\NewReactResume\\\\resm\\\\src\\\\Components\\\\ChartJs\\\\Charts1.js\";\nimport React, { Component } from 'react';\nimport Chart from \"chart.js\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport classes from \"../../assets/css/LineGraph.module.css\";\nimport Grid from '@material-ui/core/Grid';\nimport { adata } from 'C:/NewReactResume/resm/src/Components/FirstML/AnotherMl.js';\nexport default class LineGraph1 extends Component {\n  constructor(...args) {\n    super(...args);\n    this.chartRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n    new Chart(myChartRef, {\n      type: \"line\",\n      data: {\n        //Bring in data\n        labels: adata.labelsdata,\n        datasets: [{\n          label: \"Gradient Descent\",\n          data: adata.loss\n        }]\n      },\n      options: {\n        //Customize chart options\n        width: '225px',\n        height: '225px',\n        animation: {\n          duration: 10000\n        }\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, adata.flagtrain ? React.createElement(\"canvas\", {\n      id: \"myChart\",\n      ref: this.chartRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Load when trained\"));\n  }\n\n}","map":{"version":3,"sources":["C:/NewReactResume/resm/src/Components/ChartJs/Charts1.js"],"names":["React","Component","Chart","makeStyles","classes","Grid","adata","LineGraph1","chartRef","createRef","componentDidMount","myChartRef","current","getContext","type","data","labels","labelsdata","datasets","label","loss","options","width","height","animation","duration","render","flagtrain"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,OAAP,MAAoB,uCAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,KAAR,QAAoB,4DAApB;AAKA,eAAe,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAE9CO,QAF8C,GAEnCR,KAAK,CAACS,SAAN,EAFmC;AAAA;;AAI9CC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,UAAU,GAAG,KAAKH,QAAL,CAAcI,OAAd,CAAsBC,UAAtB,CAAiC,IAAjC,CAAnB;AAEA,QAAIX,KAAJ,CAAUS,UAAV,EAAsB;AAClBG,MAAAA,IAAI,EAAE,MADY;AAElBC,MAAAA,IAAI,EAAE;AACF;AACAC,QAAAA,MAAM,EAAEV,KAAK,CAACW,UAFZ;AAGFC,QAAAA,QAAQ,EAAE,CACN;AACIC,UAAAA,KAAK,EAAE,kBADX;AAEIJ,UAAAA,IAAI,EAAET,KAAK,CAACc;AAFhB,SADM;AAHR,OAFY;AAYlBC,MAAAA,OAAO,EAAE;AACL;AACAC,QAAAA,KAAK,EAAG,OAFH;AAGLC,QAAAA,MAAM,EAAE,OAHH;AAILC,QAAAA,SAAS,EAAE;AACPC,UAAAA,QAAQ,EAAE;AADH;AAJN;AAZS,KAAtB;AAsBH;;AACDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKpB,KAAK,CAACqB,SAAN,GACD;AACI,MAAA,EAAE,EAAC,SADP;AAEI,MAAA,GAAG,EAAE,KAAKnB,QAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,GAID;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BALJ,CADJ;AAUH;;AAzC6C","sourcesContent":["import React, { Component } from 'react'\r\nimport Chart from \"chart.js\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport classes from \"../../assets/css/LineGraph.module.css\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {adata} from 'C:/NewReactResume/resm/src/Components/FirstML/AnotherMl.js';\r\n\r\n\r\n\r\n\r\nexport default class LineGraph1 extends Component {\r\n\r\n    chartRef = React.createRef();\r\n    \r\n    componentDidMount() {\r\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\r\n        \r\n        new Chart(myChartRef, {\r\n            type: \"line\",\r\n            data: {\r\n                //Bring in data\r\n                labels: adata.labelsdata,\r\n                datasets: [\r\n                    {\r\n                        label: \"Gradient Descent\",\r\n                        data: adata.loss\r\n                    }\r\n                ]\r\n            },\r\n            options: {\r\n                //Customize chart options\r\n                width : '225px',\r\n                height: '225px',\r\n                animation: {\r\n                    duration: 10000\r\n                    \r\n            }\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div >\r\n                {adata.flagtrain?\r\n                <canvas\r\n                    id=\"myChart\"\r\n                    ref={this.chartRef}\r\n             />:<p>Load when trained</p>\r\n             }\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}